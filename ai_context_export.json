{
	"autoloads": {
		"CardDatabase": "*res://scripts/managers/CardDatabase.gd",
		"EventBus": "*res://scripts/managers/EventBus.gd",
		"FactionDatabase": "*res://scripts/managers/FactionDatabase.gd",
		"FeedbackManager": "*res://scripts/managers/FeedbackManager.gd",
		"GameManager": "*res://scripts/managers/GameManager.gd",
		"Logger": "*res://scripts/managers/Logger.gd",
		"WinConditionManager": "*res://scripts/managers/WinConditionManager.gd"
	},
	"generated_timestamp": "2025-08-28T22:46:44",
	"project_name": "Going Nuclear",
	"project_settings": {
		"application": {
			"description": "",
			"main_scene": "uid://qna1jwrlq4dl",
			"name": "Going Nuclear"
		},
		"display": {
			"height": 1080,
			"width": 1920
		},
		"input": {
			"map": {
				"spatial_editor/freelook_backwards": [
					"InputEventKey: keycode=83 (S), mods=none, physical=true, location=unspecified, pressed=false, echo=false"
				],
				"spatial_editor/freelook_down": [
					"InputEventKey: keycode=81 (Q), mods=none, physical=true, location=unspecified, pressed=false, echo=false"
				],
				"spatial_editor/freelook_forward": [
					"InputEventKey: keycode=87 (W), mods=none, physical=true, location=unspecified, pressed=false, echo=false"
				],
				"spatial_editor/freelook_left": [
					"InputEventKey: keycode=65 (A), mods=none, physical=true, location=unspecified, pressed=false, echo=false"
				],
				"spatial_editor/freelook_right": [
					"InputEventKey: keycode=68 (D), mods=none, physical=true, location=unspecified, pressed=false, echo=false"
				],
				"spatial_editor/freelook_slow_modifier": [
					"InputEventKey: keycode=4194328 (Alt), mods=none, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"spatial_editor/freelook_speed_modifier": [
					"InputEventKey: keycode=4194325 (Shift), mods=none, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"spatial_editor/freelook_up": [
					"InputEventKey: keycode=69 (E), mods=none, physical=true, location=unspecified, pressed=false, echo=false"
				],
				"spatial_editor/viewport_orbit_modifier_1": [],
				"spatial_editor/viewport_orbit_modifier_2": [],
				"spatial_editor/viewport_pan_modifier_1": [
					"InputEventKey: keycode=4194325 (Shift), mods=none, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"spatial_editor/viewport_pan_modifier_2": [],
				"spatial_editor/viewport_zoom_modifier_1": [
					"InputEventKey: keycode=4194326 (Ctrl), mods=none, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"spatial_editor/viewport_zoom_modifier_2": [],
				"ui_accept": [
					"InputEventKey: keycode=4194309 (Enter), mods=none, physical=false, location=unspecified, pressed=false, echo=false",
					"InputEventKey: keycode=4194310 (Kp Enter), mods=none, physical=false, location=unspecified, pressed=false, echo=false",
					"InputEventKey: keycode=32 (Space), mods=none, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_cancel": [
					"InputEventKey: keycode=4194305 (Escape), mods=none, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_copy": [
					"InputEventKey: keycode=67 (C), mods=Ctrl, physical=false, location=unspecified, pressed=false, echo=false",
					"InputEventKey: keycode=4194311 (Insert), mods=Ctrl, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_cut": [
					"InputEventKey: keycode=88 (X), mods=Ctrl, physical=false, location=unspecified, pressed=false, echo=false",
					"InputEventKey: keycode=4194312 (Delete), mods=Shift, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_down": [
					"InputEventKey: keycode=4194322 (Down), mods=none, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_end": [
					"InputEventKey: keycode=4194318 (End), mods=none, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_filedialog_refresh": [
					"InputEventKey: keycode=4194336 (F5), mods=none, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_filedialog_show_hidden": [
					"InputEventKey: keycode=72 (H), mods=none, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_filedialog_up_one_level": [
					"InputEventKey: keycode=4194308 (Backspace), mods=none, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_focus_next": [
					"InputEventKey: keycode=4194306 (Tab), mods=none, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_focus_prev": [
					"InputEventKey: keycode=4194306 (Tab), mods=Shift, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_graph_delete": [
					"InputEventKey: keycode=4194312 (Delete), mods=none, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_graph_duplicate": [
					"InputEventKey: keycode=68 (D), mods=Ctrl, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_home": [
					"InputEventKey: keycode=4194317 (Home), mods=none, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_left": [
					"InputEventKey: keycode=4194319 (Left), mods=none, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_menu": [
					"InputEventKey: keycode=4194370 (Menu), mods=none, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_page_down": [
					"InputEventKey: keycode=4194324 (PageDown), mods=none, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_page_up": [
					"InputEventKey: keycode=4194323 (PageUp), mods=none, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_paste": [
					"InputEventKey: keycode=86 (V), mods=Ctrl, physical=false, location=unspecified, pressed=false, echo=false",
					"InputEventKey: keycode=4194311 (Insert), mods=Shift, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_redo": [
					"InputEventKey: keycode=90 (Z), mods=Ctrl+Shift, physical=false, location=unspecified, pressed=false, echo=false",
					"InputEventKey: keycode=89 (Y), mods=Ctrl, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_right": [
					"InputEventKey: keycode=4194321 (Right), mods=none, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_select": [
					"InputEventKey: keycode=32 (Space), mods=none, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_swap_input_direction": [
					"InputEventKey: keycode=96 (QuoteLeft), mods=Ctrl, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_text_add_selection_for_next_occurrence": [
					"InputEventKey: keycode=68 (D), mods=Ctrl, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_text_backspace": [
					"InputEventKey: keycode=4194308 (Backspace), mods=none, physical=false, location=unspecified, pressed=false, echo=false",
					"InputEventKey: keycode=4194308 (Backspace), mods=Shift, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_text_backspace_all_to_left": [],
				"ui_text_backspace_word": [
					"InputEventKey: keycode=4194308 (Backspace), mods=Ctrl, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_text_caret_add_above": [
					"InputEventKey: keycode=4194320 (Up), mods=Ctrl+Shift, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_text_caret_add_below": [
					"InputEventKey: keycode=4194322 (Down), mods=Ctrl+Shift, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_text_caret_document_end": [
					"InputEventKey: keycode=4194318 (End), mods=Ctrl, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_text_caret_document_start": [
					"InputEventKey: keycode=4194317 (Home), mods=Ctrl, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_text_caret_down": [
					"InputEventKey: keycode=4194322 (Down), mods=none, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_text_caret_left": [
					"InputEventKey: keycode=4194319 (Left), mods=none, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_text_caret_line_end": [
					"InputEventKey: keycode=4194318 (End), mods=none, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_text_caret_line_start": [
					"InputEventKey: keycode=4194317 (Home), mods=none, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_text_caret_page_down": [
					"InputEventKey: keycode=4194324 (PageDown), mods=none, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_text_caret_page_up": [
					"InputEventKey: keycode=4194323 (PageUp), mods=none, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_text_caret_right": [
					"InputEventKey: keycode=4194321 (Right), mods=none, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_text_caret_up": [
					"InputEventKey: keycode=4194320 (Up), mods=none, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_text_caret_word_left": [
					"InputEventKey: keycode=4194319 (Left), mods=Ctrl, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_text_caret_word_right": [
					"InputEventKey: keycode=4194321 (Right), mods=Ctrl, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_text_clear_carets_and_selection": [
					"InputEventKey: keycode=4194305 (Escape), mods=none, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_text_completion_accept": [
					"InputEventKey: keycode=4194306 (Tab), mods=Shift, physical=false, location=unspecified, pressed=false, echo=false",
					"InputEventKey: keycode=4194309 (Enter), mods=Shift, physical=false, location=unspecified, pressed=false, echo=false",
					"InputEventKey: keycode=4194310 (Kp Enter), mods=Shift, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_text_completion_query": [
					"InputEventKey: keycode=32 (Space), mods=Ctrl, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_text_completion_replace": [
					"InputEventKey: keycode=4194306 (Tab), mods=none, physical=false, location=unspecified, pressed=false, echo=false",
					"InputEventKey: keycode=4194309 (Enter), mods=none, physical=false, location=unspecified, pressed=false, echo=false",
					"InputEventKey: keycode=4194310 (Kp Enter), mods=none, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_text_dedent": [
					"InputEventKey: keycode=4194306 (Tab), mods=Shift, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_text_delete": [
					"InputEventKey: keycode=4194312 (Delete), mods=none, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_text_delete_all_to_right": [],
				"ui_text_delete_word": [
					"InputEventKey: keycode=4194312 (Delete), mods=Ctrl, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_text_indent": [
					"InputEventKey: keycode=4194306 (Tab), mods=none, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_text_newline": [
					"InputEventKey: keycode=4194309 (Enter), mods=none, physical=false, location=unspecified, pressed=false, echo=false",
					"InputEventKey: keycode=4194310 (Kp Enter), mods=none, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_text_newline_above": [
					"InputEventKey: keycode=4194309 (Enter), mods=Ctrl+Shift, physical=false, location=unspecified, pressed=false, echo=false",
					"InputEventKey: keycode=4194310 (Kp Enter), mods=Ctrl+Shift, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_text_newline_blank": [
					"InputEventKey: keycode=4194309 (Enter), mods=Ctrl, physical=false, location=unspecified, pressed=false, echo=false",
					"InputEventKey: keycode=4194310 (Kp Enter), mods=Ctrl, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_text_scroll_down": [
					"InputEventKey: keycode=4194322 (Down), mods=Ctrl, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_text_scroll_up": [
					"InputEventKey: keycode=4194320 (Up), mods=Ctrl, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_text_select_all": [
					"InputEventKey: keycode=65 (A), mods=Ctrl, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_text_select_word_under_caret": [
					"InputEventKey: keycode=71 (G), mods=Alt, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_text_skip_selection_for_next_occurrence": [
					"InputEventKey: keycode=68 (D), mods=Ctrl+Alt, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_text_submit": [
					"InputEventKey: keycode=4194309 (Enter), mods=none, physical=false, location=unspecified, pressed=false, echo=false",
					"InputEventKey: keycode=4194310 (Kp Enter), mods=none, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_text_toggle_insert_mode": [
					"InputEventKey: keycode=4194311 (Insert), mods=none, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_undo": [
					"InputEventKey: keycode=90 (Z), mods=Ctrl, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_unicode_start": [
					"InputEventKey: keycode=85 (U), mods=Ctrl+Shift, physical=false, location=unspecified, pressed=false, echo=false"
				],
				"ui_up": [
					"InputEventKey: keycode=4194320 (Up), mods=none, physical=false, location=unspecified, pressed=false, echo=false"
				]
			}
		},
		"physics": {

		},
		"rendering": {

		}
	},
	"scenes": [
		{
			"path": "res:///addons/gltf2meshlib/examples/test_scene.tscn",
			"root_node": {
				"children": [],
				"groups": [],
				"name": "GridMap",
				"properties": {
					"cell_size": [
						1.0,
						1.0,
						1.0
					],
					"metadata/_editor_floor_": [
						0.0,
						5.0,
						0.0
					]
				},
				"script": "",
				"type": "GridMap"
			}
		},
		{
			"path": "res:///scenes/3d/AvatarScreens.tscn",
			"root_node": {
				"children": [
					{
						"children": [
							{
								"children": [
									{
										"children": [
											{
												"children": [],
												"groups": [],
												"name": "AvatarImage_BottomLeft",
												"properties": {
													"anchors_preset": 15,
													"flip_v": true,
													"position": [
														72.5,
														115.0
													],
													"scale": [
														0.232999995350838,
														0.310000002384186
													],
													"stretch_mode": 5
												},
												"script": "",
												"type": "TextureRect"
											}
										],
										"groups": [],
										"name": "SubViewport",
										"properties": {
											"transparent_bg": true
										},
										"script": "",
										"type": "SubViewport"
									}
								],
								"groups": [],
								"name": "EnemyAvatarScreen_BottomLeft",
								"properties": {
									"mesh": "res://scenes/3d/AvatarScreens.tscn::ArrayMesh_qht4b",
									"position": [
										0.000684947008267045,
										0.0277525000274181,
										-0.116474002599716
									],
									"scale": [
										0.927972018718719,
										0.181508004665375,
										0.730261981487274
									],
									"skeleton": "",
									"surface_material_override/0": "<StandardMaterial3D#-9223368739963983169>"
								},
								"script": "",
								"type": "MeshInstance3D"
							},
							{
								"children": [
									{
										"children": [
											{
												"children": [],
												"groups": [],
												"name": "AvatarImage_BottomRight",
												"properties": {
													"anchors_preset": 15,
													"flip_v": true,
													"position": [
														72.5,
														115.0
													],
													"scale": [
														0.232999995350838,
														0.310000002384186
													],
													"stretch_mode": 5
												},
												"script": "",
												"type": "TextureRect"
											}
										],
										"groups": [],
										"name": "SubViewport",
										"properties": {
											"transparent_bg": true
										},
										"script": "",
										"type": "SubViewport"
									}
								],
								"groups": [],
								"name": "EnemyAvatarScreen_BottomRight",
								"properties": {
									"mesh": "res://scenes/3d/AvatarScreens.tscn::ArrayMesh_wtkkl",
									"position": [
										0.000684947008267045,
										0.0277525000274181,
										-0.116474002599716
									],
									"scale": [
										0.927972018718719,
										0.181508004665375,
										0.730261981487274
									],
									"skeleton": "",
									"surface_material_override/0": "<StandardMaterial3D#-9223368739762649910>"
								},
								"script": "",
								"type": "MeshInstance3D"
							},
							{
								"children": [
									{
										"children": [
											{
												"children": [],
												"groups": [],
												"name": "AvatarImage_TopLeft",
												"properties": {
													"anchors_preset": 15,
													"flip_v": true,
													"position": [
														72.5,
														115.0
													],
													"scale": [
														0.232999995350838,
														0.310000002384186
													],
													"stretch_mode": 5
												},
												"script": "",
												"type": "TextureRect"
											}
										],
										"groups": [],
										"name": "SubViewport",
										"properties": {
											"transparent_bg": true
										},
										"script": "",
										"type": "SubViewport"
									}
								],
								"groups": [],
								"name": "EnemyAvatarScreen_TopLeft",
								"properties": {
									"mesh": "res://scenes/3d/AvatarScreens.tscn::ArrayMesh_ff3a4",
									"position": [
										0.000684947008267045,
										0.0277525000274181,
										-0.116474002599716
									],
									"scale": [
										0.927972018718719,
										0.181508004665375,
										0.730261981487274
									],
									"skeleton": "",
									"surface_material_override/0": "<StandardMaterial3D#-9223368739594877783>"
								},
								"script": "",
								"type": "MeshInstance3D"
							},
							{
								"children": [
									{
										"children": [
											{
												"children": [],
												"groups": [],
												"name": "AvatarImage_TopRight",
												"properties": {
													"anchors_preset": 15,
													"flip_v": true,
													"position": [
														72.5,
														115.0
													],
													"scale": [
														0.232999995350838,
														0.310000002384186
													],
													"stretch_mode": 5
												},
												"script": "",
												"type": "TextureRect"
											}
										],
										"groups": [],
										"name": "SubViewport",
										"properties": {
											"handle_input_locally": false,
											"transparent_bg": true
										},
										"script": "",
										"type": "SubViewport"
									}
								],
								"groups": [],
								"name": "EnemyAvatarScreen_TopRight",
								"properties": {
									"mesh": "res://scenes/3d/AvatarScreens.tscn::ArrayMesh_o7vyu",
									"position": [
										0.000684947008267045,
										0.0277525000274181,
										-0.116474002599716
									],
									"scale": [
										0.927972018718719,
										0.181508004665375,
										0.730261981487274
									],
									"skeleton": "",
									"surface_material_override/0": "<StandardMaterial3D#-9223368739427105707>"
								},
								"script": "",
								"type": "MeshInstance3D"
							},
							{
								"children": [],
								"groups": [],
								"name": "EnemyAvatarScreenGlass",
								"properties": {
									"mesh": "res://scenes/3d/AvatarScreens.tscn::ArrayMesh_ar3b6",
									"position": [
										0.000709593005012721,
										0.0314780995249748,
										-0.116499997675419
									],
									"scale": [
										0.927972018718719,
										0.181508004665375,
										0.730261981487274
									],
									"skeleton": "",
									"surface_material_override/0": "<Object#null>"
								},
								"script": "",
								"type": "MeshInstance3D"
							}
						],
						"groups": [],
						"name": "console",
						"properties": {

						},
						"script": "",
						"type": "Node3D"
					}
				],
				"groups": [],
				"name": "AvatarScreens",
				"properties": {
					"script": "res://scenes/3d/ConsoleController.gd"
				},
				"script": "res://scenes/3d/ConsoleController.gd",
				"type": "Node3D"
			}
		},
		{
			"path": "res:///scenes/3d/Console3D.tscn",
			"root_node": {
				"children": [
					{
						"children": [
							{
								"children": [],
								"groups": [],
								"name": "ConsoleBasePlate",
								"properties": {
									"mesh": "res://scenes/3d/Console3D.tscn::ArrayMesh_mrlnu",
									"skeleton": "",
									"surface_material_override/0": "<Object#null>"
								},
								"script": "",
								"type": "MeshInstance3D"
							},
							{
								"children": [
									{
										"children": [
											{
												"children": [
													{
														"children": [
															{
																"children": [],
																"groups": [],
																"name": "CollisionShape3D",
																"properties": {
																	"position": [
																		0.000848353025503457,
																		0.0103638004511595,
																		0.000439449999248609
																	],
																	"shape": "res://scenes/3d/Pyshical3DButtons.tscn::BoxShape3D_gq6r3"
																},
																"script": "",
																"type": "CollisionShape3D"
															}
														],
														"groups": [],
														"name": "StaticBody3D",
														"properties": {
															"script": "res://scripts/3d/PhysicalButton3D.gd"
														},
														"script": "res://scripts/3d/PhysicalButton3D.gd",
														"type": "StaticBody3D"
													}
												],
												"groups": [],
												"name": "BuildButton",
												"properties": {
													"mesh": "res://scenes/3d/Pyshical3DButtons.tscn::ArrayMesh_e35wv",
													"position": [
														-0.271239012479782,
														0.0315230004489422,
														0.182622998952866
													],
													"skeleton": "",
													"surface_material_override/0": "<Object#null>"
												},
												"script": "",
												"type": "MeshInstance3D"
											},
											{
												"children": [
													{
														"children": [
															{
																"children": [],
																"groups": [],
																"name": "CollisionShape3D",
																"properties": {
																	"position": [
																		0.0,
																		0.00111327995546162,
																		-0.000380859011784196
																	],
																	"shape": "res://scenes/3d/Pyshical3DButtons.tscn::BoxShape3D_3o28w"
																},
																"script": "",
																"type": "CollisionShape3D"
															}
														],
														"groups": [],
														"name": "StaticBody3D",
														"properties": {
															"script": "res://scripts/3d/PhysicalButton3D.gd"
														},
														"script": "res://scripts/3d/PhysicalButton3D.gd",
														"type": "StaticBody3D"
													}
												],
												"groups": [],
												"name": "DefenseButton",
												"properties": {
													"mesh": "res://scenes/3d/Pyshical3DButtons.tscn::ArrayMesh_ewdgv",
													"position": [
														0.16015699505806,
														0.0315230004489422,
														0.256601005792618
													],
													"skeleton": "",
													"surface_material_override/0": "<Object#null>"
												},
												"script": "",
												"type": "MeshInstance3D"
											},
											{
												"children": [
													{
														"children": [
															{
																"children": [],
																"groups": [],
																"name": "CollisionShape3D",
																"properties": {
																	"position": [
																		0.0,
																		0.00111327995546162,
																		-0.000380859011784196
																	],
																	"shape": "res://scenes/3d/Pyshical3DButtons.tscn::BoxShape3D_3o28w"
																},
																"script": "",
																"type": "CollisionShape3D"
															}
														],
														"groups": [],
														"name": "StaticBody3D",
														"properties": {
															"script": "res://scripts/3d/PhysicalButton3D.gd"
														},
														"script": "res://scripts/3d/PhysicalButton3D.gd",
														"type": "StaticBody3D"
													}
												],
												"groups": [],
												"name": "DeliveryButton",
												"properties": {
													"mesh": "res://scenes/3d/Pyshical3DButtons.tscn::ArrayMesh_0043a",
													"position": [
														-0.159162998199463,
														0.0315230004489422,
														0.182622998952866
													],
													"skeleton": "",
													"surface_material_override/0": "<Object#null>"
												},
												"script": "",
												"type": "MeshInstance3D"
											},
											{
												"children": [
													{
														"children": [
															{
																"children": [],
																"groups": [],
																"name": "CollisionShape3D",
																"properties": {
																	"position": [
																		0.000848353025503457,
																		0.0103638004511595,
																		0.000439449999248609
																	],
																	"shape": "res://scenes/3d/Pyshical3DButtons.tscn::BoxShape3D_gq6r3"
																},
																"script": "",
																"type": "CollisionShape3D"
															}
														],
														"groups": [],
														"name": "StaticBody3D",
														"properties": {
															"script": "res://scripts/3d/PhysicalButton3D.gd"
														},
														"script": "res://scripts/3d/PhysicalButton3D.gd",
														"type": "StaticBody3D"
													}
												],
												"groups": [],
												"name": "InfoWarButton",
												"properties": {
													"mesh": "res://scenes/3d/Pyshical3DButtons.tscn::ArrayMesh_41hpi",
													"position": [
														-0.271239012479782,
														0.0315230004489422,
														0.257016003131866
													],
													"skeleton": "",
													"surface_material_override/0": "<Object#null>"
												},
												"script": "",
												"type": "MeshInstance3D"
											},
											{
												"children": [
													{
														"children": [
															{
																"children": [],
																"groups": [],
																"name": "CollisionShape3D",
																"properties": {
																	"position": [
																		0.0,
																		0.00111327995546162,
																		-0.000380859011784196
																	],
																	"shape": "res://scenes/3d/Pyshical3DButtons.tscn::BoxShape3D_3o28w"
																},
																"script": "",
																"type": "CollisionShape3D"
															}
														],
														"groups": [],
														"name": "StaticBody3D",
														"properties": {
															"script": "res://scripts/3d/PhysicalButton3D.gd"
														},
														"script": "res://scripts/3d/PhysicalButton3D.gd",
														"type": "StaticBody3D"
													}
												],
												"groups": [],
												"name": "PayloadButton",
												"properties": {
													"mesh": "res://scenes/3d/Pyshical3DButtons.tscn::ArrayMesh_ghkgd",
													"position": [
														-0.159162998199463,
														0.0315230004489422,
														0.256601005792618
													],
													"skeleton": "",
													"surface_material_override/0": "<Object#null>"
												},
												"script": "",
												"type": "MeshInstance3D"
											},
											{
												"children": [
													{
														"children": [
															{
																"children": [],
																"groups": [],
																"name": "CollisionShape3D",
																"properties": {
																	"position": [
																		0.0,
																		0.00111327995546162,
																		-0.000380859011784196
																	],
																	"shape": "res://scenes/3d/Pyshical3DButtons.tscn::BoxShape3D_3o28w"
																},
																"script": "",
																"type": "CollisionShape3D"
															}
														],
														"groups": [],
														"name": "StaticBody3D",
														"properties": {
															"script": "res://scripts/3d/PhysicalButton3D.gd"
														},
														"script": "res://scripts/3d/PhysicalButton3D.gd",
														"type": "StaticBody3D"
													}
												],
												"groups": [],
												"name": "UtilityButton",
												"properties": {
													"mesh": "res://scenes/3d/Pyshical3DButtons.tscn::ArrayMesh_mijjt",
													"position": [
														0.16015699505806,
														0.0315230004489422,
														0.182692006230354
													],
													"skeleton": "",
													"surface_material_override/0": "<Object#null>"
												},
												"script": "",
												"type": "MeshInstance3D"
											},
											{
												"children": [
													{
														"children": [
															{
																"children": [],
																"groups": [],
																"name": "CollisionShape3D",
																"properties": {
																	"position": [
																		0.0,
																		0.0109999999403954,
																		0.0
																	],
																	"scale": [
																		0.0399999991059303,
																		0.0399999991059303,
																		0.0399999991059303
																	],
																	"shape": "res://scenes/3d/Pyshical3DButtons.tscn::CylinderShape3D_sqqf1"
																},
																"script": "",
																"type": "CollisionShape3D"
															}
														],
														"groups": [],
														"name": "StaticBody3D",
														"properties": {
															"script": "res://scripts/3d/PhysicalButton3D.gd"
														},
														"script": "res://scripts/3d/PhysicalButton3D.gd",
														"type": "StaticBody3D"
													}
												],
												"groups": [],
												"name": "EndTurnButton",
												"properties": {
													"mesh": "res://scenes/3d/Pyshical3DButtons.tscn::ArrayMesh_bouml",
													"position": [
														-0.456000000238419,
														0.0410000011324883,
														0.219999998807907
													],
													"scale": [
														2.54446005821228,
														1.0,
														2.54446005821228
													],
													"skeleton": "",
													"surface_material_override/0": "<Object#null>"
												},
												"script": "",
												"type": "MeshInstance3D"
											},
											{
												"children": [
													{
														"children": [
															{
																"children": [],
																"groups": [],
																"name": "CollisionShape3D",
																"properties": {
																	"shape": "res://scenes/3d/Pyshical3DButtons.tscn::CylinderShape3D_gq6r3"
																},
																"script": "",
																"type": "CollisionShape3D"
															}
														],
														"groups": [],
														"name": "StaticBody3D",
														"properties": {
															"script": "res://scripts/3d/PhysicalButton3D.gd"
														},
														"script": "res://scripts/3d/PhysicalButton3D.gd",
														"type": "StaticBody3D"
													}
												],
												"groups": [],
												"name": "EnemyButtonBottomLeft",
												"properties": {
													"mesh": "res://scenes/3d/Pyshical3DButtons.tscn::ArrayMesh_bf3gj",
													"position": [
														-0.363564014434814,
														0.039995800703764,
														0.102797001600266
													],
													"scale": [
														1.52617001533508,
														1.52617001533508,
														1.52617001533508
													],
													"skeleton": "",
													"surface_material_override/0": "<Object#null>"
												},
												"script": "",
												"type": "MeshInstance3D"
											},
											{
												"children": [
													{
														"children": [
															{
																"children": [],
																"groups": [],
																"name": "CollisionShape3D",
																"properties": {
																	"shape": "res://scenes/3d/Pyshical3DButtons.tscn::CylinderShape3D_gq6r3"
																},
																"script": "",
																"type": "CollisionShape3D"
															}
														],
														"groups": [],
														"name": "StaticBody3D",
														"properties": {
															"script": "res://scripts/3d/PhysicalButton3D.gd"
														},
														"script": "res://scripts/3d/PhysicalButton3D.gd",
														"type": "StaticBody3D"
													}
												],
												"groups": [],
												"name": "EnemyButtonBottomRight",
												"properties": {
													"mesh": "res://scenes/3d/Pyshical3DButtons.tscn::ArrayMesh_rfd2w",
													"position": [
														0.365797013044357,
														0.039995800703764,
														0.102797001600266
													],
													"scale": [
														1.52617001533508,
														1.52617001533508,
														1.52617001533508
													],
													"skeleton": "",
													"surface_material_override/0": "<Object#null>"
												},
												"script": "",
												"type": "MeshInstance3D"
											},
											{
												"children": [
													{
														"children": [
															{
																"children": [],
																"groups": [],
																"name": "CollisionShape3D",
																"properties": {
																	"shape": "res://scenes/3d/Pyshical3DButtons.tscn::CylinderShape3D_gq6r3"
																},
																"script": "",
																"type": "CollisionShape3D"
															}
														],
														"groups": [],
														"name": "StaticBody3D",
														"properties": {
															"script": "res://scripts/3d/PhysicalButton3D.gd"
														},
														"script": "res://scripts/3d/PhysicalButton3D.gd",
														"type": "StaticBody3D"
													}
												],
												"groups": [],
												"name": "EnemyButtonTopLeft",
												"properties": {
													"mesh": "res://scenes/3d/Pyshical3DButtons.tscn::ArrayMesh_avc7c",
													"position": [
														-0.363564014434814,
														0.039995800703764,
														-0.118046000599861
													],
													"scale": [
														1.52617001533508,
														1.52617001533508,
														1.52617001533508
													],
													"skeleton": "",
													"surface_material_override/0": "<Object#null>"
												},
												"script": "",
												"type": "MeshInstance3D"
											},
											{
												"children": [
													{
														"children": [
															{
																"children": [],
																"groups": [],
																"name": "CollisionShape3D",
																"properties": {
																	"shape": "res://scenes/3d/Pyshical3DButtons.tscn::CylinderShape3D_gq6r3"
																},
																"script": "",
																"type": "CollisionShape3D"
															}
														],
														"groups": [],
														"name": "StaticBody3D",
														"properties": {
															"script": "res://scripts/3d/PhysicalButton3D.gd"
														},
														"script": "res://scripts/3d/PhysicalButton3D.gd",
														"type": "StaticBody3D"
													}
												],
												"groups": [],
												"name": "EnemyButtonTopRight",
												"properties": {
													"mesh": "res://scenes/3d/Pyshical3DButtons.tscn::ArrayMesh_e1yf7",
													"position": [
														0.365797013044357,
														0.039995800703764,
														-0.118046000599861
													],
													"scale": [
														1.52617001533508,
														1.52617001533508,
														1.52617001533508
													],
													"skeleton": "",
													"surface_material_override/0": "<Object#null>"
												},
												"script": "",
												"type": "MeshInstance3D"
											},
											{
												"children": [],
												"groups": [],
												"name": "EnemyButtonRim_BottomLeft",
												"properties": {
													"mesh": "res://scenes/3d/Pyshical3DButtons.tscn::ArrayMesh_ljhfw",
													"position": [
														-0.363564014434814,
														0.039995800703764,
														0.102797001600266
													],
													"rotation": [
														0.0,
														0.132716491818428,
														0.0
													],
													"scale": [
														1.5261709690094,
														1.52617001533508,
														1.5261709690094
													],
													"skeleton": "",
													"surface_material_override/0": "<Object#null>"
												},
												"script": "",
												"type": "MeshInstance3D"
											},
											{
												"children": [],
												"groups": [],
												"name": "EnemyButtonRim_BottomRight",
												"properties": {
													"mesh": "res://scenes/3d/Pyshical3DButtons.tscn::ArrayMesh_6rtmn",
													"position": [
														0.365797013044357,
														0.039995800703764,
														0.102797001600266
													],
													"rotation": [
														0.0,
														-3.07770013809204,
														0.0
													],
													"scale": [
														1.52616393566132,
														1.52617001533508,
														1.52616393566132
													],
													"skeleton": "",
													"surface_material_override/0": "<Object#null>"
												},
												"script": "",
												"type": "MeshInstance3D"
											},
											{
												"children": [],
												"groups": [],
												"name": "EnemyButtonRim_TopLeft",
												"properties": {
													"mesh": "res://scenes/3d/Pyshical3DButtons.tscn::ArrayMesh_ggp0d",
													"position": [
														-0.363564014434814,
														0.039995800703764,
														-0.118046000599861
													],
													"scale": [
														1.52617001533508,
														1.52617001533508,
														1.52617001533508
													],
													"skeleton": "",
													"surface_material_override/0": "<Object#null>"
												},
												"script": "",
												"type": "MeshInstance3D"
											},
											{
												"children": [],
												"groups": [],
												"name": "EnemyButtonRim_TopRight",
												"properties": {
													"mesh": "res://scenes/3d/Pyshical3DButtons.tscn::ArrayMesh_qtjy4",
													"position": [
														0.365797013044357,
														0.039995800703764,
														-0.118046000599861
													],
													"rotation": [
														0.0,
														-1.72854113578796,
														0.0
													],
													"scale": [
														1.52616882324219,
														1.52617001533508,
														1.52616882324219
													],
													"skeleton": "",
													"surface_material_override/0": "<Object#null>"
												},
												"script": "",
												"type": "MeshInstance3D"
											},
											{
												"children": [],
												"groups": [],
												"name": "RedButtonRim",
												"properties": {
													"mesh": "res://scenes/3d/Pyshical3DButtons.tscn::ArrayMesh_11er3",
													"position": [
														-0.456099987030029,
														0.0277586001902819,
														0.219675004482269
													],
													"scale": [
														0.0683659017086029,
														0.0122867003083229,
														0.0683659017086029
													],
													"skeleton": "",
													"surface_material_override/0": "<Object#null>"
												},
												"script": "",
												"type": "MeshInstance3D"
											},
											{
												"children": [],
												"groups": [],
												"name": "RedButtonModule",
												"properties": {
													"mesh": "res://scenes/3d/Pyshical3DButtons.tscn::ArrayMesh_igkik",
													"position": [
														-0.456099987030029,
														0.0277586001902819,
														0.219675004482269
													],
													"scale": [
														0.0683657974004745,
														0.0122867003083229,
														0.0683657974004745
													],
													"skeleton": "",
													"surface_material_override/0": "<Object#null>"
												},
												"script": "",
												"type": "MeshInstance3D"
											}
										],
										"groups": [],
										"name": "console",
										"properties": {

										},
										"script": "",
										"type": "Node3D"
									},
									{
										"children": [],
										"groups": [],
										"name": "AnimationPlayer",
										"properties": {
											"libraries": {
												"": "<AnimationLibrary#-9223369379024911867>"
											}
										},
										"script": "",
										"type": "AnimationPlayer"
									}
								],
								"groups": [],
								"name": "Physical3DButtons",
								"properties": {

								},
								"script": "",
								"type": "Node3D"
							},
							{
								"children": [
									{
										"children": [
											{
												"children": [],
												"groups": [],
												"name": "MainScreenGlass",
												"properties": {
													"mesh": "res://scenes/3d/MainScreen.tscn::ArrayMesh_f127i",
													"skeleton": "",
													"surface_material_override/0": "<Object#null>"
												},
												"script": "",
												"type": "MeshInstance3D"
											},
											{
												"children": [
													{
														"children": [
															{
																"children": [
																	{
																		"children": [],
																		"groups": [],
																		"name": "InputShield",
																		"properties": {
																			"anchors_preset": 15,
																			"color": [
																				1.0,
																				0.0,
																				0.0166663993149996,
																				0.0
																			],
																			"layout_mode": 1,
																			"position": [
																				-125.0,
																				-72.5
																			],
																			"theme": "res://art/ui/card_menu-theme.tres"
																		},
																		"script": "",
																		"type": "ColorRect"
																	},
																	{
																		"children": [
																			{
																				"children": [
																					{
																						"children": [
																							{
																								"children": [],
																								"groups": [],
																								"name": "TitleLabel",
																								"properties": {
																									"anchors_preset": 15,
																									"autowrap_mode": 3,
																									"horizontal_alignment": 1,
																									"layout_mode": 1,
																									"position": [
																										-0.5,
																										-11.5
																									],
																									"size": [
																										1.0,
																										23.0
																									],
																									"text": "BUTTON SELECTION",
																									"theme_override_colors/font_color": [
																										0.0,
																										0.0,
																										0.0,
																										1.0
																									],
																									"theme_override_font_sizes/font_size": 40,
																									"theme_override_fonts/font": "res://art/fonts/AcPlus_IBM_VGA_8x14.ttf",
																									"vertical_alignment": 1
																								},
																								"script": "",
																								"type": "Label"
																							}
																						],
																						"groups": [],
																						"name": "TitleBar",
																						"properties": {
																							"custom_minimum_size": [
																								500.0,
																								75.0
																							],
																							"layout_mode": 2,
																							"mouse_filter": 1,
																							"size_flags_vertical": 0,
																							"theme": "res://art/ui/card_menu-theme.tres"
																						},
																						"script": "",
																						"type": "Panel"
																					},
																					{
																						"children": [
																							{
																								"children": [],
																								"groups": [],
																								"name": "Panel",
																								"properties": {
																									"layout_mode": 2,
																									"size_flags_vertical": 3,
																									"theme_override_styles/panel": "res://scenes/ui/DeploymentScreen.tscn::StyleBoxFlat_nt86h"
																								},
																								"script": "",
																								"type": "Panel"
																							}
																						],
																						"groups": [],
																						"name": "OptionsList",
																						"properties": {
																							"custom_minimum_size": [
																								500.0,
																								0.0
																							],
																							"layout_mode": 2,
																							"size_flags_vertical": 3,
																							"theme": "res://art/ui/card_menu-theme.tres"
																						},
																						"script": "",
																						"type": "VBoxContainer"
																					}
																				],
																				"groups": [],
																				"name": "CardChooserUI",
																				"properties": {
																					"layout_mode": 2,
																					"theme": "res://art/ui/card_menu-theme.tres"
																				},
																				"script": "",
																				"type": "VBoxContainer"
																			},
																			{
																				"children": [
																					{
																						"children": [
																							{
																								"children": [],
																								"groups": [],
																								"name": "Visualizer_Art",
																								"properties": {
																									"custom_minimum_size": [
																										450.0,
																										450.0
																									],
																									"layout_mode": 2,
																									"size_flags_horizontal": 4,
																									"size_flags_vertical": 0
																								},
																								"script": "",
																								"type": "TextureRect"
																							},
																							{
																								"children": [],
																								"groups": [],
																								"name": "Visualizer_Description",
																								"properties": {
																									"autowrap_mode": 3,
																									"custom_minimum_size": [
																										0.0,
																										150.0
																									],
																									"horizontal_alignment": 1,
																									"layout_mode": 2,
																									"size_flags_vertical": 0,
																									"text": "Card Description Card Description Card Description Card Description Card Description Card Description Card Description Card Description Card Description Card Descriptio",
																									"theme_override_colors/font_color": [
																										0.0,
																										0.0,
																										0.0,
																										1.0
																									],
																									"theme_override_font_sizes/font_size": 28,
																									"theme_override_fonts/font": "res://art/fonts/AcPlus_IBM_VGA_8x14.ttf",
																									"theme_override_styles/normal": "<StyleBoxFlat#-9223368736524647146>",
																									"vertical_alignment": 1
																								},
																								"script": "",
																								"type": "Label"
																							}
																						],
																						"groups": [],
																						"name": "VisualizerContent",
																						"properties": {
																							"layout_mode": 2
																						},
																						"script": "",
																						"type": "VBoxContainer"
																					}
																				],
																				"groups": [],
																				"name": "CardVisualsOverlay",
																				"properties": {
																					"custom_minimum_size": [
																						450.0,
																						600.0
																					],
																					"layout_mode": 2,
																					"mouse_filter": 1,
																					"size_flags_horizontal": 10,
																					"size_flags_vertical": 4,
																					"theme_override_styles/panel": "res://art/ui/dark_green_box_flat.tres"
																				},
																				"script": "",
																				"type": "PanelContainer"
																			}
																		],
																		"groups": [],
																		"name": "ContentBox",
																		"properties": {
																			"layout_mode": 2,
																			"size": [
																				954.0,
																				604.0
																			],
																			"theme": "res://art/ui/card_menu-theme.tres"
																		},
																		"script": "",
																		"type": "HBoxContainer"
																	}
																],
																"groups": [],
																"name": "DeploymentScreen",
																"properties": {
																	"anchors_preset": 15,
																	"custom_minimum_size": [
																		1210.0,
																		750.0
																	],
																	"mouse_default_cursor_shape": 2,
																	"position": [
																		-295.0,
																		-445.0
																	],
																	"rotation": 1.57079994678497,
																	"scale": [
																		1.0,
																		-0.699999988079071
																	],
																	"script": "res://scenes/ui/DeploymentUI.gd",
																	"size": [
																		1210.0,
																		750.0
																	],
																	"theme": "res://art/ui/card_menu-theme.tres"
																},
																"script": "res://scenes/ui/DeploymentUI.gd",
																"type": "Control"
															}
														],
														"groups": [],
														"name": "SubViewport",
														"properties": {
															"size": "(750, 1210)",
															"transparent_bg": true
														},
														"script": "",
														"type": "SubViewport"
													},
													{
														"children": [
															{
																"children": [],
																"groups": [],
																"name": "InputShield_CollisionShape",
																"properties": {
																	"position": [
																		0.0000504505987919401,
																		-0.178965002298355,
																		-0.000296690006507561
																	],
																	"shape": "res://scenes/3d/MainScreen.tscn::BoxShape3D_picoh"
																},
																"script": "",
																"type": "CollisionShape3D"
															}
														],
														"groups": [],
														"name": "InputShield_StaticBody",
														"properties": {
															"position": [
																0.0,
																0.0,
																0.00100000004749745
															]
														},
														"script": "",
														"type": "StaticBody3D"
													}
												],
												"groups": [],
												"name": "MainScreen",
												"properties": {
													"mesh": "res://scenes/3d/MainScreen.tscn::ArrayMesh_picoh",
													"position": [
														0.0,
														0.0129289999604225,
														-0.0777985975146294
													],
													"rotation": [
														0.0,
														-3.14159274101257,
														0.0
													],
													"scale": [
														-6.7805700302124,
														-0.0969522967934608,
														-4.20753002166748
													],
													"script": "res://scripts/3d/MainScreen3DController.gd",
													"skeleton": "",
													"surface_material_override/0": "<ShaderMaterial#-9223368737044740871>"
												},
												"script": "res://scripts/3d/MainScreen3DController.gd",
												"type": "MeshInstance3D"
											}
										],
										"groups": [],
										"name": "console",
										"properties": {

										},
										"script": "",
										"type": "Node3D"
									}
								],
								"groups": [],
								"name": "MainScreen3D",
								"properties": {

								},
								"script": "",
								"type": "Node3D"
							},
							{
								"children": [
									{
										"children": [
											{
												"children": [
													{
														"children": [
															{
																"children": [
																	{
																		"children": [],
																		"groups": [],
																		"name": "EnemyInfoBottomLeftLabel",
																		"properties": {
																			"layout_mode": 1,
																			"position": [
																				35.0,
																				50.0
																			],
																			"scale": [
																				0.600000023841858,
																				1.0
																			],
																			"scroll_active": false,
																			"size": [
																				700.0,
																				450.0
																			],
																			"text": "InternalInternalInternalInternalInternal",
																			"theme_override_colors/default_color": [
																				0.0,
																				0.0,
																				0.0,
																				1.0
																			],
																			"theme_override_colors/font_shadow_color": [
																				0.0,
																				0.0,
																				0.0,
																				1.0
																			],
																			"theme_override_constants/shadow_offset_y": 5,
																			"theme_override_font_sizes/normal_font_size": 70,
																			"theme_override_fonts/normal_font": "res://art/fonts/MatrixTypeDisplay-Bold.ttf",
																			"vertical_alignment": 1
																		},
																		"script": "",
																		"type": "RichTextLabel"
																	}
																],
																"groups": [],
																"name": "Panel",
																"properties": {
																	"position": [
																		512.0,
																		0.0
																	],
																	"rotation": 1.57079994678497,
																	"size": [
																		512.0,
																		512.0
																	],
																	"theme_override_styles/panel": "res://scenes/3d/InfoScreens.tscn::StyleBoxTexture_picoh"
																},
																"script": "",
																"type": "Panel"
															}
														],
														"groups": [],
														"name": "LogViewport",
														"properties": {

														},
														"script": "",
														"type": "SubViewport"
													}
												],
												"groups": [],
												"name": "EnemyInfoScreen_BottomLeft",
												"properties": {
													"mesh": "res://scenes/3d/InfoScreens.tscn::ArrayMesh_gtbua",
													"position": [
														0.0,
														0.0266105998307467,
														0.0
													],
													"scale": [
														11.013500213623,
														0.0658802017569542,
														6.18556022644043
													],
													"skeleton": "",
													"surface_material_override/0": "<ShaderMaterial#-9223368735853558500>"
												},
												"script": "",
												"type": "MeshInstance3D"
											},
											{
												"children": [
													{
														"children": [
															{
																"children": [
																	{
																		"children": [],
																		"groups": [],
																		"name": "EnemyInfoBottomRightLabel",
																		"properties": {
																			"layout_mode": 1,
																			"position": [
																				35.0,
																				50.0
																			],
																			"scale": [
																				0.600000023841858,
																				1.0
																			],
																			"scroll_active": false,
																			"size": [
																				700.0,
																				450.0
																			],
																			"text": "InternalInternalInternalInternalInternal",
																			"theme_override_colors/default_color": [
																				0.0,
																				0.0,
																				0.0,
																				1.0
																			],
																			"theme_override_colors/font_shadow_color": [
																				0.0,
																				0.0,
																				0.0,
																				1.0
																			],
																			"theme_override_constants/shadow_offset_y": 5,
																			"theme_override_font_sizes/normal_font_size": 70,
																			"theme_override_fonts/normal_font": "res://art/fonts/MatrixTypeDisplay-Bold.ttf",
																			"vertical_alignment": 1
																		},
																		"script": "",
																		"type": "RichTextLabel"
																	}
																],
																"groups": [],
																"name": "Panel",
																"properties": {
																	"position": [
																		512.0,
																		0.0
																	],
																	"rotation": 1.57079994678497,
																	"size": [
																		512.0,
																		512.0
																	],
																	"theme_override_styles/panel": "res://scenes/3d/InfoScreens.tscn::StyleBoxTexture_picoh"
																},
																"script": "",
																"type": "Panel"
															}
														],
														"groups": [],
														"name": "LogViewport",
														"properties": {

														},
														"script": "",
														"type": "SubViewport"
													}
												],
												"groups": [],
												"name": "EnemyInfoScreen_BottomRight",
												"properties": {
													"mesh": "<ArrayMesh#-9223368735568345815>",
													"position": [
														0.0,
														0.0266105998307467,
														0.0
													],
													"scale": [
														11.013500213623,
														0.0658802017569542,
														6.18556022644043
													],
													"skeleton": "",
													"surface_material_override/0": "<ShaderMaterial#-9223368734981143254>"
												},
												"script": "",
												"type": "MeshInstance3D"
											},
											{
												"children": [
													{
														"children": [
															{
																"children": [
																	{
																		"children": [],
																		"groups": [],
																		"name": "EnemyInfoTopLeftLabel",
																		"properties": {
																			"layout_mode": 1,
																			"position": [
																				35.0,
																				50.0
																			],
																			"scale": [
																				0.600000023841858,
																				1.0
																			],
																			"scroll_active": false,
																			"size": [
																				700.0,
																				450.0
																			],
																			"text": "InternalInternalInternalInternalInternal",
																			"theme_override_colors/default_color": [
																				0.0,
																				0.0,
																				0.0,
																				1.0
																			],
																			"theme_override_colors/font_shadow_color": [
																				0.0,
																				0.0,
																				0.0,
																				1.0
																			],
																			"theme_override_constants/shadow_offset_y": 5,
																			"theme_override_font_sizes/normal_font_size": 70,
																			"theme_override_fonts/normal_font": "res://art/fonts/MatrixTypeDisplay-Bold.ttf",
																			"vertical_alignment": 1
																		},
																		"script": "",
																		"type": "RichTextLabel"
																	}
																],
																"groups": [],
																"name": "Panel",
																"properties": {
																	"position": [
																		512.0,
																		0.0
																	],
																	"rotation": 1.57079994678497,
																	"size": [
																		512.0,
																		512.0
																	],
																	"theme_override_styles/panel": "res://scenes/3d/InfoScreens.tscn::StyleBoxTexture_picoh"
																},
																"script": "",
																"type": "Panel"
															}
														],
														"groups": [],
														"name": "LogViewport",
														"properties": {

														},
														"script": "",
														"type": "SubViewport"
													}
												],
												"groups": [],
												"name": "EnemyInfoScreen_TopLeft",
												"properties": {
													"mesh": "res://scenes/3d/InfoScreens.tscn::ArrayMesh_hu2oy",
													"position": [
														0.0,
														0.0266105998307467,
														0.0
													],
													"scale": [
														11.013500213623,
														0.0658802017569542,
														6.18556022644043
													],
													"skeleton": "",
													"surface_material_override/0": "<ShaderMaterial#-9223368734125505225>"
												},
												"script": "",
												"type": "MeshInstance3D"
											},
											{
												"children": [
													{
														"children": [
															{
																"children": [
																	{
																		"children": [],
																		"groups": [],
																		"name": "EnemyInfoTopRightLabel",
																		"properties": {
																			"layout_mode": 1,
																			"position": [
																				35.0,
																				50.0
																			],
																			"scale": [
																				0.600000023841858,
																				1.0
																			],
																			"scroll_active": false,
																			"size": [
																				700.0,
																				450.0
																			],
																			"text": "InternalInternalInternalInternalInternal",
																			"theme_override_colors/default_color": [
																				0.0,
																				0.0,
																				0.0,
																				1.0
																			],
																			"theme_override_colors/font_shadow_color": [
																				0.0,
																				0.0,
																				0.0,
																				1.0
																			],
																			"theme_override_constants/shadow_offset_y": 5,
																			"theme_override_font_sizes/normal_font_size": 70,
																			"theme_override_fonts/normal_font": "res://art/fonts/MatrixTypeDisplay-Bold.ttf",
																			"vertical_alignment": 1
																		},
																		"script": "",
																		"type": "RichTextLabel"
																	}
																],
																"groups": [],
																"name": "Panel",
																"properties": {
																	"position": [
																		512.0,
																		0.0
																	],
																	"rotation": 1.57079994678497,
																	"size": [
																		512.0,
																		512.0
																	],
																	"theme_override_styles/panel": "res://scenes/3d/InfoScreens.tscn::StyleBoxTexture_picoh"
																},
																"script": "",
																"type": "Panel"
															}
														],
														"groups": [],
														"name": "LogViewport",
														"properties": {

														},
														"script": "",
														"type": "SubViewport"
													}
												],
												"groups": [],
												"name": "EnemyInfoScreen_TopRight",
												"properties": {
													"mesh": "res://scenes/3d/InfoScreens.tscn::ArrayMesh_jn7jt",
													"position": [
														0.0,
														0.0266105998307467,
														0.0
													],
													"scale": [
														11.013500213623,
														0.0658802017569542,
														6.18556022644043
													],
													"skeleton": "",
													"surface_material_override/0": "<ShaderMaterial#-9223368733269867196>"
												},
												"script": "",
												"type": "MeshInstance3D"
											},
											{
												"children": [],
												"groups": [],
												"name": "EnemyInfoScreensGlass",
												"properties": {
													"mesh": "res://scenes/3d/InfoScreens.tscn::ArrayMesh_e7c38",
													"position": [
														0.0,
														0.0294032990932465,
														0.0
													],
													"scale": [
														11.013500213623,
														0.0658802017569542,
														6.18556022644043
													],
													"skeleton": "",
													"surface_material_override/0": "<Object#null>"
												},
												"script": "",
												"type": "MeshInstance3D"
											},
											{
												"children": [
													{
														"children": [
															{
																"children": [
																	{
																		"children": [],
																		"groups": [],
																		"name": "GameLogLabel",
																		"properties": {
																			"layout_mode": 1,
																			"position": [
																				210.0,
																				10.0
																			],
																			"rotation": 1.57079994678497,
																			"scroll_active": false,
																			"size": [
																				575.0,
																				200.0
																			],
																			"text": "Internal Test\nInternal Test\nInternal Test\nInternal Test\nInternal Test\nInternal Test\nInternal Test\nInternal Test\nInternal Test\nInternal Test\nInternal Test\nInternal Test",
																			"theme_override_colors/default_color": [
																				0.0,
																				0.0,
																				0.0,
																				1.0
																			],
																			"theme_override_colors/font_shadow_color": [
																				0.0,
																				0.0,
																				0.0,
																				1.0
																			],
																			"theme_override_font_sizes/normal_font_size": 16,
																			"theme_override_fonts/normal_font": "res://art/fonts/MatrixTypeDisplay-Regular.ttf"
																		},
																		"script": "",
																		"type": "RichTextLabel"
																	}
																],
																"groups": [],
																"name": "Panel",
																"properties": {
																	"size": [
																		220.0,
																		575.0
																	],
																	"theme_override_styles/panel": "<StyleBoxTexture#-9223368732179348132>"
																},
																"script": "",
																"type": "Panel"
															}
														],
														"groups": [],
														"name": "LogViewport",
														"properties": {
															"size": "(285, 575)"
														},
														"script": "",
														"type": "SubViewport"
													}
												],
												"groups": [],
												"name": "GameLogScreen",
												"properties": {
													"mesh": "<ArrayMesh#-9223368732967877294>",
													"position": [
														0.0,
														0.0266105998307467,
														0.0
													],
													"rotation_order": 0,
													"scale": [
														11.013500213623,
														0.0658802017569542,
														6.18556022644043
													],
													"skeleton": "",
													"surface_material_override/0": "<ShaderMaterial#-9223368732363897516>"
												},
												"script": "",
												"type": "MeshInstance3D"
											},
											{
												"children": [
													{
														"children": [
															{
																"children": [
																	{
																		"children": [],
																		"groups": [],
																		"name": "PlayerInfoLabel",
																		"properties": {
																			"custom_minimum_size": [
																				500.0,
																				500.0
																			],
																			"layout_mode": 1,
																			"position": [
																				470.0,
																				30.0
																			],
																			"rotation": 1.57079994678497,
																			"scale": [
																				0.600000023841858,
																				1.0
																			],
																			"scroll_active": false,
																			"size": [
																				500.0,
																				500.0
																			],
																			"text": "Internal\nInternal\nInternal\nInternal",
																			"theme_override_colors/default_color": [
																				0.0,
																				0.0,
																				0.0,
																				1.0
																			],
																			"theme_override_colors/font_shadow_color": [
																				0.0,
																				0.0,
																				0.0,
																				1.0
																			],
																			"theme_override_font_sizes/normal_font_size": 50,
																			"theme_override_fonts/normal_font": "res://art/fonts/MatrixTypeDisplay-Regular.ttf"
																		},
																		"script": "",
																		"type": "RichTextLabel"
																	}
																],
																"groups": [],
																"name": "Panel",
																"properties": {
																	"position": [
																		390.0,
																		0.0
																	],
																	"rotation": 1.57079994678497,
																	"size": [
																		512.0,
																		512.0
																	],
																	"theme_override_styles/panel": "res://scenes/3d/InfoScreens.tscn::StyleBoxTexture_picoh"
																},
																"script": "",
																"type": "Panel"
															}
														],
														"groups": [],
														"name": "LogViewport",
														"properties": {

														},
														"script": "",
														"type": "SubViewport"
													}
												],
												"groups": [],
												"name": "PlayerInfoScreen",
												"properties": {
													"mesh": "<ArrayMesh#-9223368731827026577>",
													"position": [
														0.0,
														0.0266105998307467,
														0.0
													],
													"scale": [
														11.013500213623,
														0.0658802017569542,
														6.18556022644043
													],
													"skeleton": "",
													"surface_material_override/0": "<Object#null>"
												},
												"script": "",
												"type": "MeshInstance3D"
											},
											{
												"children": [],
												"groups": [],
												"name": "DEFCONStatus",
												"properties": {
													"mesh": "res://scenes/3d/InfoScreens.tscn::ArrayMesh_0if53",
													"position": [
														-0.360617011785507,
														0.0308532994240522,
														0.219675004482269
													],
													"rotation": [
														1.57079637050629,
														0.0,
														0.0
													],
													"scale": [
														0.470079988241196,
														0.470079988241196,
														0.470079988241196
													],
													"skeleton": "",
													"surface_material_override/0": "<Object#null>"
												},
												"script": "",
												"type": "MeshInstance3D"
											}
										],
										"groups": [],
										"name": "console",
										"properties": {

										},
										"script": "",
										"type": "Node3D"
									}
								],
								"groups": [],
								"name": "InfoScreens",
								"properties": {

								},
								"script": "",
								"type": "Node3D"
							},
							{
								"children": [
									{
										"children": [
											{
												"children": [
													{
														"children": [
															{
																"children": [],
																"groups": [],
																"name": "AvatarImage_BottomLeft",
																"properties": {
																	"anchors_preset": 15,
																	"flip_v": true,
																	"position": [
																		72.5,
																		115.0
																	],
																	"scale": [
																		0.232999995350838,
																		0.310000002384186
																	],
																	"stretch_mode": 5
																},
																"script": "",
																"type": "TextureRect"
															}
														],
														"groups": [],
														"name": "SubViewport",
														"properties": {
															"transparent_bg": true
														},
														"script": "",
														"type": "SubViewport"
													}
												],
												"groups": [],
												"name": "EnemyAvatarScreen_BottomLeft",
												"properties": {
													"mesh": "res://scenes/3d/AvatarScreens.tscn::ArrayMesh_qht4b",
													"position": [
														0.000684947008267045,
														0.0277525000274181,
														-0.116474002599716
													],
													"scale": [
														0.927972018718719,
														0.181508004665375,
														0.730261981487274
													],
													"skeleton": "",
													"surface_material_override/0": "<StandardMaterial3D#-9223368730853948029>"
												},
												"script": "",
												"type": "MeshInstance3D"
											},
											{
												"children": [
													{
														"children": [
															{
																"children": [],
																"groups": [],
																"name": "AvatarImage_BottomRight",
																"properties": {
																	"anchors_preset": 15,
																	"flip_v": true,
																	"position": [
																		72.5,
																		115.0
																	],
																	"scale": [
																		0.232999995350838,
																		0.310000002384186
																	],
																	"stretch_mode": 5
																},
																"script": "",
																"type": "TextureRect"
															}
														],
														"groups": [],
														"name": "SubViewport",
														"properties": {
															"transparent_bg": true
														},
														"script": "",
														"type": "SubViewport"
													}
												],
												"groups": [],
												"name": "EnemyAvatarScreen_BottomRight",
												"properties": {
													"mesh": "res://scenes/3d/AvatarScreens.tscn::ArrayMesh_wtkkl",
													"position": [
														0.000684947008267045,
														0.0277525000274181,
														-0.116474002599716
													],
													"scale": [
														0.927972018718719,
														0.181508004665375,
														0.730261981487274
													],
													"skeleton": "",
													"surface_material_override/0": "<StandardMaterial3D#-9223368730652621428>"
												},
												"script": "",
												"type": "MeshInstance3D"
											},
											{
												"children": [
													{
														"children": [
															{
																"children": [],
																"groups": [],
																"name": "AvatarImage_TopLeft",
																"properties": {
																	"anchors_preset": 15,
																	"flip_v": true,
																	"position": [
																		72.5,
																		115.0
																	],
																	"scale": [
																		0.232999995350838,
																		0.310000002384186
																	],
																	"stretch_mode": 5
																},
																"script": "",
																"type": "TextureRect"
															}
														],
														"groups": [],
														"name": "SubViewport",
														"properties": {
															"transparent_bg": true
														},
														"script": "",
														"type": "SubViewport"
													}
												],
												"groups": [],
												"name": "EnemyAvatarScreen_TopLeft",
												"properties": {
													"mesh": "res://scenes/3d/AvatarScreens.tscn::ArrayMesh_ff3a4",
													"position": [
														0.000684947008267045,
														0.0277525000274181,
														-0.116474002599716
													],
													"scale": [
														0.927972018718719,
														0.181508004665375,
														0.730261981487274
													],
													"skeleton": "",
													"surface_material_override/0": "<StandardMaterial3D#-9223368730484849260>"
												},
												"script": "",
												"type": "MeshInstance3D"
											},
											{
												"children": [
													{
														"children": [
															{
																"children": [],
																"groups": [],
																"name": "AvatarImage_TopRight",
																"properties": {
																	"anchors_preset": 15,
																	"flip_v": true,
																	"position": [
																		72.5,
																		115.0
																	],
																	"scale": [
																		0.232999995350838,
																		0.310000002384186
																	],
																	"stretch_mode": 5
																},
																"script": "",
																"type": "TextureRect"
															}
														],
														"groups": [],
														"name": "SubViewport",
														"properties": {
															"handle_input_locally": false,
															"transparent_bg": true
														},
														"script": "",
														"type": "SubViewport"
													}
												],
												"groups": [],
												"name": "EnemyAvatarScreen_TopRight",
												"properties": {
													"mesh": "res://scenes/3d/AvatarScreens.tscn::ArrayMesh_o7vyu",
													"position": [
														0.000684947008267045,
														0.0277525000274181,
														-0.116474002599716
													],
													"scale": [
														0.927972018718719,
														0.181508004665375,
														0.730261981487274
													],
													"skeleton": "",
													"surface_material_override/0": "<StandardMaterial3D#-9223368730317077092>"
												},
												"script": "",
												"type": "MeshInstance3D"
											},
											{
												"children": [],
												"groups": [],
												"name": "EnemyAvatarScreenGlass",
												"properties": {
													"mesh": "res://scenes/3d/AvatarScreens.tscn::ArrayMesh_ar3b6",
													"position": [
														0.000709593005012721,
														0.0314780995249748,
														-0.116499997675419
													],
													"scale": [
														0.927972018718719,
														0.181508004665375,
														0.730261981487274
													],
													"skeleton": "",
													"surface_material_override/0": "<Object#null>"
												},
												"script": "",
												"type": "MeshInstance3D"
											}
										],
										"groups": [],
										"name": "console",
										"properties": {

										},
										"script": "",
										"type": "Node3D"
									}
								],
								"groups": [],
								"name": "AvatarScreens",
								"properties": {

								},
								"script": "",
								"type": "Node3D"
							}
						],
						"groups": [],
						"name": "console",
						"properties": {

						},
						"script": "",
						"type": "Node3D"
					},
					{
						"children": [],
						"groups": [],
						"name": "Camera3D",
						"properties": {
							"fov": 35.0,
							"position": [
								0.0,
								1.0,
								0.0
							],
							"rotation": [
								-1.57079637050629,
								0.0,
								0.0
							],
							"script": "res://scripts/3d/InteractionController.gd"
						},
						"script": "res://scripts/3d/InteractionController.gd",
						"type": "Camera3D"
					},
					{
						"children": [],
						"groups": [],
						"name": "WorldEnvironment",
						"properties": {
							"environment": "<Environment#-9223368730098973273>"
						},
						"script": "",
						"type": "WorldEnvironment"
					},
					{
						"children": [],
						"groups": [],
						"name": "SpotLight3D",
						"properties": {
							"light_color": [
								1.0,
								0.94651198387146,
								0.84258097410202,
								1.0
							],
							"light_energy": 5.0,
							"light_indirect_energy": 0.0,
							"light_size": 0.791000008583069,
							"light_specular": 1.8639999628067,
							"position": [
								0.0,
								1.21806001663208,
								-2.42370009422302
							],
							"rotation": [
								-2.71789717674255,
								0.0,
								0.0
							],
							"shadow_enabled": true,
							"spot_angle": 15.0823001861572,
							"spot_angle_attenuation": 0.659753978252411,
							"spot_attenuation": 1.3400000333786,
							"spot_range": 4.56400012969971
						},
						"script": "",
						"type": "SpotLight3D"
					},
					{
						"children": [],
						"groups": [],
						"name": "OmniLight3D",
						"properties": {
							"omni_range": 1.39999997615814,
							"position": [
								-1.12276995182037,
								0.350142002105713,
								-0.11871100217104
							]
						},
						"script": "",
						"type": "OmniLight3D"
					},
					{
						"children": [],
						"groups": [],
						"name": "OmniLight3D2",
						"properties": {
							"omni_range": 1.39999997615814,
							"position": [
								1.09184002876282,
								0.350142002105713,
								-0.11871100217104
							]
						},
						"script": "",
						"type": "OmniLight3D"
					},
					{
						"children": [],
						"groups": [],
						"name": "OmniLight3D3",
						"properties": {
							"light_energy": 0.5,
							"position": [
								-0.000057339701015735,
								0.810835003852844,
								1.08393001556396
							]
						},
						"script": "",
						"type": "OmniLight3D"
					}
				],
				"groups": [],
				"name": "Console3D",
				"properties": {
					"script": "res://scenes/3d/ConsoleController.gd"
				},
				"script": "res://scenes/3d/ConsoleController.gd",
				"type": "Node3D"
			}
		},
		{
			"path": "res:///scenes/3d/InfoScreens.tscn",
			"root_node": {
				"children": [
					{
						"children": [
							{
								"children": [
									{
										"children": [
											{
												"children": [
													{
														"children": [],
														"groups": [],
														"name": "EnemyInfoBottomLeftLabel",
														"properties": {
															"layout_mode": 1,
															"position": [
																35.0,
																50.0
															],
															"scale": [
																0.600000023841858,
																1.0
															],
															"scroll_active": false,
															"size": [
																700.0,
																450.0
															],
															"text": "InternalInternalInternalInternalInternal",
															"theme_override_colors/default_color": [
																0.0,
																0.0,
																0.0,
																1.0
															],
															"theme_override_colors/font_shadow_color": [
																0.0,
																0.0,
																0.0,
																1.0
															],
															"theme_override_constants/shadow_offset_y": 5,
															"theme_override_font_sizes/normal_font_size": 70,
															"theme_override_fonts/normal_font": "res://art/fonts/MatrixTypeDisplay-Bold.ttf",
															"vertical_alignment": 1
														},
														"script": "",
														"type": "RichTextLabel"
													}
												],
												"groups": [],
												"name": "Panel",
												"properties": {
													"position": [
														512.0,
														0.0
													],
													"rotation": 1.57079994678497,
													"size": [
														512.0,
														512.0
													],
													"theme_override_styles/panel": "res://scenes/3d/InfoScreens.tscn::StyleBoxTexture_picoh"
												},
												"script": "",
												"type": "Panel"
											}
										],
										"groups": [],
										"name": "LogViewport",
										"properties": {

										},
										"script": "",
										"type": "SubViewport"
									}
								],
								"groups": [],
								"name": "EnemyInfoScreen_BottomLeft",
								"properties": {
									"mesh": "res://scenes/3d/InfoScreens.tscn::ArrayMesh_gtbua",
									"position": [
										0.0,
										0.0266105998307467,
										0.0
									],
									"scale": [
										11.013500213623,
										0.0658802017569542,
										6.18556022644043
									],
									"skeleton": "",
									"surface_material_override/0": "<ShaderMaterial#-9223368726038886813>"
								},
								"script": "",
								"type": "MeshInstance3D"
							},
							{
								"children": [
									{
										"children": [
											{
												"children": [
													{
														"children": [],
														"groups": [],
														"name": "EnemyInfoBottomRightLabel",
														"properties": {
															"layout_mode": 1,
															"position": [
																35.0,
																50.0
															],
															"scale": [
																0.600000023841858,
																1.0
															],
															"scroll_active": false,
															"size": [
																700.0,
																450.0
															],
															"text": "InternalInternalInternalInternalInternal",
															"theme_override_colors/default_color": [
																0.0,
																0.0,
																0.0,
																1.0
															],
															"theme_override_colors/font_shadow_color": [
																0.0,
																0.0,
																0.0,
																1.0
															],
															"theme_override_constants/shadow_offset_y": 5,
															"theme_override_font_sizes/normal_font_size": 70,
															"theme_override_fonts/normal_font": "res://art/fonts/MatrixTypeDisplay-Bold.ttf",
															"vertical_alignment": 1
														},
														"script": "",
														"type": "RichTextLabel"
													}
												],
												"groups": [],
												"name": "Panel",
												"properties": {
													"position": [
														512.0,
														0.0
													],
													"rotation": 1.57079994678497,
													"size": [
														512.0,
														512.0
													],
													"theme_override_styles/panel": "res://scenes/3d/InfoScreens.tscn::StyleBoxTexture_picoh"
												},
												"script": "",
												"type": "Panel"
											}
										],
										"groups": [],
										"name": "LogViewport",
										"properties": {

										},
										"script": "",
										"type": "SubViewport"
									}
								],
								"groups": [],
								"name": "EnemyInfoScreen_BottomRight",
								"properties": {
									"mesh": "<ArrayMesh#-9223368725753674128>",
									"position": [
										0.0,
										0.0266105998307467,
										0.0
									],
									"scale": [
										11.013500213623,
										0.0658802017569542,
										6.18556022644043
									],
									"skeleton": "",
									"surface_material_override/0": "<ShaderMaterial#-9223368725166471567>"
								},
								"script": "",
								"type": "MeshInstance3D"
							},
							{
								"children": [
									{
										"children": [
											{
												"children": [
													{
														"children": [],
														"groups": [],
														"name": "EnemyInfoTopLeftLabel",
														"properties": {
															"layout_mode": 1,
															"position": [
																35.0,
																50.0
															],
															"scale": [
																0.600000023841858,
																1.0
															],
															"scroll_active": false,
															"size": [
																700.0,
																450.0
															],
															"text": "InternalInternalInternalInternalInternal",
															"theme_override_colors/default_color": [
																0.0,
																0.0,
																0.0,
																1.0
															],
															"theme_override_colors/font_shadow_color": [
																0.0,
																0.0,
																0.0,
																1.0
															],
															"theme_override_constants/shadow_offset_y": 5,
															"theme_override_font_sizes/normal_font_size": 70,
															"theme_override_fonts/normal_font": "res://art/fonts/MatrixTypeDisplay-Bold.ttf",
															"vertical_alignment": 1
														},
														"script": "",
														"type": "RichTextLabel"
													}
												],
												"groups": [],
												"name": "Panel",
												"properties": {
													"position": [
														512.0,
														0.0
													],
													"rotation": 1.57079994678497,
													"size": [
														512.0,
														512.0
													],
													"theme_override_styles/panel": "res://scenes/3d/InfoScreens.tscn::StyleBoxTexture_picoh"
												},
												"script": "",
												"type": "Panel"
											}
										],
										"groups": [],
										"name": "LogViewport",
										"properties": {

										},
										"script": "",
										"type": "SubViewport"
									}
								],
								"groups": [],
								"name": "EnemyInfoScreen_TopLeft",
								"properties": {
									"mesh": "res://scenes/3d/InfoScreens.tscn::ArrayMesh_hu2oy",
									"position": [
										0.0,
										0.0266105998307467,
										0.0
									],
									"scale": [
										11.013500213623,
										0.0658802017569542,
										6.18556022644043
									],
									"skeleton": "",
									"surface_material_override/0": "<ShaderMaterial#-9223368724310833538>"
								},
								"script": "",
								"type": "MeshInstance3D"
							},
							{
								"children": [
									{
										"children": [
											{
												"children": [
													{
														"children": [],
														"groups": [],
														"name": "EnemyInfoTopRightLabel",
														"properties": {
															"layout_mode": 1,
															"position": [
																35.0,
																50.0
															],
															"scale": [
																0.600000023841858,
																1.0
															],
															"scroll_active": false,
															"size": [
																700.0,
																450.0
															],
															"text": "InternalInternalInternalInternalInternal",
															"theme_override_colors/default_color": [
																0.0,
																0.0,
																0.0,
																1.0
															],
															"theme_override_colors/font_shadow_color": [
																0.0,
																0.0,
																0.0,
																1.0
															],
															"theme_override_constants/shadow_offset_y": 5,
															"theme_override_font_sizes/normal_font_size": 70,
															"theme_override_fonts/normal_font": "res://art/fonts/MatrixTypeDisplay-Bold.ttf",
															"vertical_alignment": 1
														},
														"script": "",
														"type": "RichTextLabel"
													}
												],
												"groups": [],
												"name": "Panel",
												"properties": {
													"position": [
														512.0,
														0.0
													],
													"rotation": 1.57079994678497,
													"size": [
														512.0,
														512.0
													],
													"theme_override_styles/panel": "res://scenes/3d/InfoScreens.tscn::StyleBoxTexture_picoh"
												},
												"script": "",
												"type": "Panel"
											}
										],
										"groups": [],
										"name": "LogViewport",
										"properties": {

										},
										"script": "",
										"type": "SubViewport"
									}
								],
								"groups": [],
								"name": "EnemyInfoScreen_TopRight",
								"properties": {
									"mesh": "res://scenes/3d/InfoScreens.tscn::ArrayMesh_jn7jt",
									"position": [
										0.0,
										0.0266105998307467,
										0.0
									],
									"scale": [
										11.013500213623,
										0.0658802017569542,
										6.18556022644043
									],
									"skeleton": "",
									"surface_material_override/0": "<ShaderMaterial#-9223368723455195509>"
								},
								"script": "",
								"type": "MeshInstance3D"
							},
							{
								"children": [],
								"groups": [],
								"name": "EnemyInfoScreensGlass",
								"properties": {
									"mesh": "res://scenes/3d/InfoScreens.tscn::ArrayMesh_e7c38",
									"position": [
										0.0,
										0.0294032990932465,
										0.0
									],
									"scale": [
										11.013500213623,
										0.0658802017569542,
										6.18556022644043
									],
									"skeleton": "",
									"surface_material_override/0": "<Object#null>"
								},
								"script": "",
								"type": "MeshInstance3D"
							},
							{
								"children": [
									{
										"children": [
											{
												"children": [
													{
														"children": [],
														"groups": [],
														"name": "GameLogLabel",
														"properties": {
															"layout_mode": 1,
															"position": [
																210.0,
																10.0
															],
															"rotation": 1.57079994678497,
															"scroll_active": false,
															"size": [
																575.0,
																200.0
															],
															"text": "Internal Test\nInternal Test\nInternal Test\nInternal Test\nInternal Test\nInternal Test\nInternal Test\nInternal Test\nInternal Test\nInternal Test\nInternal Test\nInternal Test",
															"theme_override_colors/default_color": [
																0.0,
																0.0,
																0.0,
																1.0
															],
															"theme_override_colors/font_shadow_color": [
																0.0,
																0.0,
																0.0,
																1.0
															],
															"theme_override_font_sizes/normal_font_size": 16,
															"theme_override_fonts/normal_font": "res://art/fonts/MatrixTypeDisplay-Regular.ttf"
														},
														"script": "",
														"type": "RichTextLabel"
													}
												],
												"groups": [],
												"name": "Panel",
												"properties": {
													"size": [
														220.0,
														575.0
													],
													"theme_override_styles/panel": "<StyleBoxTexture#-9223368722364676445>"
												},
												"script": "",
												"type": "Panel"
											}
										],
										"groups": [],
										"name": "LogViewport",
										"properties": {
											"size": "(285, 575)"
										},
										"script": "",
										"type": "SubViewport"
									}
								],
								"groups": [],
								"name": "GameLogScreen",
								"properties": {
									"mesh": "<ArrayMesh#-9223368723153205607>",
									"position": [
										0.0,
										0.0266105998307467,
										0.0
									],
									"rotation_order": 0,
									"scale": [
										11.013500213623,
										0.0658802017569542,
										6.18556022644043
									],
									"skeleton": "",
									"surface_material_override/0": "<ShaderMaterial#-9223368722549225829>"
								},
								"script": "",
								"type": "MeshInstance3D"
							},
							{
								"children": [
									{
										"children": [
											{
												"children": [
													{
														"children": [],
														"groups": [],
														"name": "PlayerInfoLabel",
														"properties": {
															"custom_minimum_size": [
																500.0,
																500.0
															],
															"layout_mode": 1,
															"position": [
																470.0,
																30.0
															],
															"rotation": 1.57079994678497,
															"scale": [
																0.600000023841858,
																1.0
															],
															"scroll_active": false,
															"size": [
																500.0,
																500.0
															],
															"text": "Internal\nInternal\nInternal\nInternal",
															"theme_override_colors/default_color": [
																0.0,
																0.0,
																0.0,
																1.0
															],
															"theme_override_colors/font_shadow_color": [
																0.0,
																0.0,
																0.0,
																1.0
															],
															"theme_override_font_sizes/normal_font_size": 50,
															"theme_override_fonts/normal_font": "res://art/fonts/MatrixTypeDisplay-Regular.ttf"
														},
														"script": "",
														"type": "RichTextLabel"
													}
												],
												"groups": [],
												"name": "Panel",
												"properties": {
													"position": [
														390.0,
														0.0
													],
													"rotation": 1.57079994678497,
													"size": [
														512.0,
														512.0
													],
													"theme_override_styles/panel": "res://scenes/3d/InfoScreens.tscn::StyleBoxTexture_picoh"
												},
												"script": "",
												"type": "Panel"
											}
										],
										"groups": [],
										"name": "LogViewport",
										"properties": {

										},
										"script": "",
										"type": "SubViewport"
									}
								],
								"groups": [],
								"name": "PlayerInfoScreen",
								"properties": {
									"mesh": "<ArrayMesh#-9223368722012354890>",
									"position": [
										0.0,
										0.0266105998307467,
										0.0
									],
									"scale": [
										11.013500213623,
										0.0658802017569542,
										6.18556022644043
									],
									"skeleton": "",
									"surface_material_override/0": "<Object#null>"
								},
								"script": "",
								"type": "MeshInstance3D"
							},
							{
								"children": [],
								"groups": [],
								"name": "DEFCONStatus",
								"properties": {
									"mesh": "res://scenes/3d/InfoScreens.tscn::ArrayMesh_0if53",
									"position": [
										-0.360617011785507,
										0.0308532994240522,
										0.219675004482269
									],
									"rotation": [
										1.57079637050629,
										0.0,
										0.0
									],
									"scale": [
										0.470079988241196,
										0.470079988241196,
										0.470079988241196
									],
									"skeleton": "",
									"surface_material_override/0": "<Object#null>"
								},
								"script": "",
								"type": "MeshInstance3D"
							}
						],
						"groups": [],
						"name": "console",
						"properties": {

						},
						"script": "",
						"type": "Node3D"
					}
				],
				"groups": [],
				"name": "InfoScreens",
				"properties": {
					"script": "res://scenes/3d/ConsoleController.gd"
				},
				"script": "res://scenes/3d/ConsoleController.gd",
				"type": "Node3D"
			}
		},
		{
			"path": "res:///scenes/3d/MainScreen.tscn",
			"root_node": {
				"children": [
					{
						"children": [
							{
								"children": [],
								"groups": [],
								"name": "MainScreenGlass",
								"properties": {
									"mesh": "res://scenes/3d/MainScreen.tscn::ArrayMesh_f127i",
									"skeleton": "",
									"surface_material_override/0": "<Object#null>"
								},
								"script": "",
								"type": "MeshInstance3D"
							},
							{
								"children": [
									{
										"children": [
											{
												"children": [
													{
														"children": [],
														"groups": [],
														"name": "InputShield",
														"properties": {
															"anchors_preset": 15,
															"color": [
																1.0,
																0.0,
																0.0166663993149996,
																0.0
															],
															"layout_mode": 1,
															"position": [
																-125.0,
																-72.5
															],
															"theme": "res://art/ui/card_menu-theme.tres"
														},
														"script": "",
														"type": "ColorRect"
													},
													{
														"children": [
															{
																"children": [
																	{
																		"children": [
																			{
																				"children": [],
																				"groups": [],
																				"name": "TitleLabel",
																				"properties": {
																					"anchors_preset": 15,
																					"autowrap_mode": 3,
																					"horizontal_alignment": 1,
																					"layout_mode": 1,
																					"position": [
																						-0.5,
																						-11.5
																					],
																					"size": [
																						1.0,
																						23.0
																					],
																					"text": "BUTTON SELECTION",
																					"theme_override_colors/font_color": [
																						0.0,
																						0.0,
																						0.0,
																						1.0
																					],
																					"theme_override_font_sizes/font_size": 40,
																					"theme_override_fonts/font": "res://art/fonts/AcPlus_IBM_VGA_8x14.ttf",
																					"vertical_alignment": 1
																				},
																				"script": "",
																				"type": "Label"
																			}
																		],
																		"groups": [],
																		"name": "TitleBar",
																		"properties": {
																			"custom_minimum_size": [
																				500.0,
																				75.0
																			],
																			"layout_mode": 2,
																			"mouse_filter": 1,
																			"size_flags_vertical": 0,
																			"theme": "res://art/ui/card_menu-theme.tres"
																		},
																		"script": "",
																		"type": "Panel"
																	},
																	{
																		"children": [
																			{
																				"children": [],
																				"groups": [],
																				"name": "Panel",
																				"properties": {
																					"layout_mode": 2,
																					"size_flags_vertical": 3,
																					"theme_override_styles/panel": "res://scenes/ui/DeploymentScreen.tscn::StyleBoxFlat_nt86h"
																				},
																				"script": "",
																				"type": "Panel"
																			}
																		],
																		"groups": [],
																		"name": "OptionsList",
																		"properties": {
																			"custom_minimum_size": [
																				500.0,
																				0.0
																			],
																			"layout_mode": 2,
																			"size_flags_vertical": 3,
																			"theme": "res://art/ui/card_menu-theme.tres"
																		},
																		"script": "",
																		"type": "VBoxContainer"
																	}
																],
																"groups": [],
																"name": "CardChooserUI",
																"properties": {
																	"layout_mode": 2,
																	"theme": "res://art/ui/card_menu-theme.tres"
																},
																"script": "",
																"type": "VBoxContainer"
															},
															{
																"children": [
																	{
																		"children": [
																			{
																				"children": [],
																				"groups": [],
																				"name": "Visualizer_Art",
																				"properties": {
																					"custom_minimum_size": [
																						450.0,
																						450.0
																					],
																					"layout_mode": 2,
																					"size_flags_horizontal": 4,
																					"size_flags_vertical": 0
																				},
																				"script": "",
																				"type": "TextureRect"
																			},
																			{
																				"children": [],
																				"groups": [],
																				"name": "Visualizer_Description",
																				"properties": {
																					"autowrap_mode": 3,
																					"custom_minimum_size": [
																						0.0,
																						150.0
																					],
																					"horizontal_alignment": 1,
																					"layout_mode": 2,
																					"size_flags_vertical": 0,
																					"text": "Card Description Card Description Card Description Card Description Card Description Card Description Card Description Card Description Card Description Card Descriptio",
																					"theme_override_colors/font_color": [
																						0.0,
																						0.0,
																						0.0,
																						1.0
																					],
																					"theme_override_font_sizes/font_size": 28,
																					"theme_override_fonts/font": "res://art/fonts/AcPlus_IBM_VGA_8x14.ttf",
																					"theme_override_styles/normal": "<StyleBoxFlat#-9223368718539471058>",
																					"vertical_alignment": 1
																				},
																				"script": "",
																				"type": "Label"
																			}
																		],
																		"groups": [],
																		"name": "VisualizerContent",
																		"properties": {
																			"layout_mode": 2
																		},
																		"script": "",
																		"type": "VBoxContainer"
																	}
																],
																"groups": [],
																"name": "CardVisualsOverlay",
																"properties": {
																	"custom_minimum_size": [
																		450.0,
																		600.0
																	],
																	"layout_mode": 2,
																	"mouse_filter": 1,
																	"size_flags_horizontal": 10,
																	"size_flags_vertical": 4,
																	"theme_override_styles/panel": "res://art/ui/dark_green_box_flat.tres"
																},
																"script": "",
																"type": "PanelContainer"
															}
														],
														"groups": [],
														"name": "ContentBox",
														"properties": {
															"layout_mode": 2,
															"size": [
																954.0,
																604.0
															],
															"theme": "res://art/ui/card_menu-theme.tres"
														},
														"script": "",
														"type": "HBoxContainer"
													}
												],
												"groups": [],
												"name": "DeploymentScreen",
												"properties": {
													"anchors_preset": 15,
													"custom_minimum_size": [
														1210.0,
														750.0
													],
													"mouse_default_cursor_shape": 2,
													"position": [
														-295.0,
														-445.0
													],
													"rotation": 1.57079994678497,
													"scale": [
														1.0,
														-0.699999988079071
													],
													"script": "res://scenes/ui/DeploymentUI.gd",
													"size": [
														1210.0,
														750.0
													],
													"theme": "res://art/ui/card_menu-theme.tres"
												},
												"script": "res://scenes/ui/DeploymentUI.gd",
												"type": "Control"
											}
										],
										"groups": [],
										"name": "SubViewport",
										"properties": {
											"size": "(750, 1210)",
											"transparent_bg": true
										},
										"script": "",
										"type": "SubViewport"
									},
									{
										"children": [
											{
												"children": [],
												"groups": [],
												"name": "InputShield_CollisionShape",
												"properties": {
													"position": [
														0.0000504505987919401,
														-0.178965002298355,
														-0.000296690006507561
													],
													"shape": "res://scenes/3d/MainScreen.tscn::BoxShape3D_picoh"
												},
												"script": "",
												"type": "CollisionShape3D"
											}
										],
										"groups": [],
										"name": "InputShield_StaticBody",
										"properties": {
											"position": [
												0.0,
												0.0,
												0.00100000004749745
											]
										},
										"script": "",
										"type": "StaticBody3D"
									}
								],
								"groups": [],
								"name": "MainScreen",
								"properties": {
									"mesh": "res://scenes/3d/MainScreen.tscn::ArrayMesh_picoh",
									"position": [
										0.0,
										0.0129289999604225,
										-0.0777985975146294
									],
									"rotation": [
										0.0,
										-3.14159274101257,
										0.0
									],
									"scale": [
										-6.7805700302124,
										-0.0969522967934608,
										-4.20753002166748
									],
									"script": "res://scripts/3d/MainScreen3DController.gd",
									"skeleton": "",
									"surface_material_override/0": "<ShaderMaterial#-9223368719059564783>"
								},
								"script": "res://scripts/3d/MainScreen3DController.gd",
								"type": "MeshInstance3D"
							}
						],
						"groups": [],
						"name": "console",
						"properties": {

						},
						"script": "",
						"type": "Node3D"
					}
				],
				"groups": [],
				"name": "MainScreen3D",
				"properties": {

				},
				"script": "",
				"type": "Node3D"
			}
		},
		{
			"path": "res:///scenes/3d/Pyshical3DButtons.tscn",
			"root_node": {
				"children": [
					{
						"children": [
							{
								"children": [
									{
										"children": [
											{
												"children": [],
												"groups": [],
												"name": "CollisionShape3D",
												"properties": {
													"position": [
														0.000848353025503457,
														0.0103638004511595,
														0.000439449999248609
													],
													"shape": "res://scenes/3d/Pyshical3DButtons.tscn::BoxShape3D_gq6r3"
												},
												"script": "",
												"type": "CollisionShape3D"
											}
										],
										"groups": [],
										"name": "StaticBody3D",
										"properties": {
											"script": "res://scripts/3d/PhysicalButton3D.gd"
										},
										"script": "res://scripts/3d/PhysicalButton3D.gd",
										"type": "StaticBody3D"
									}
								],
								"groups": [],
								"name": "BuildButton",
								"properties": {
									"mesh": "res://scenes/3d/Pyshical3DButtons.tscn::ArrayMesh_e35wv",
									"position": [
										-0.271239012479782,
										0.0315230004489422,
										0.182622998952866
									],
									"skeleton": "",
									"surface_material_override/0": "<Object#null>"
								},
								"script": "",
								"type": "MeshInstance3D"
							},
							{
								"children": [
									{
										"children": [
											{
												"children": [],
												"groups": [],
												"name": "CollisionShape3D",
												"properties": {
													"position": [
														0.0,
														0.00111327995546162,
														-0.000380859011784196
													],
													"shape": "res://scenes/3d/Pyshical3DButtons.tscn::BoxShape3D_3o28w"
												},
												"script": "",
												"type": "CollisionShape3D"
											}
										],
										"groups": [],
										"name": "StaticBody3D",
										"properties": {
											"script": "res://scripts/3d/PhysicalButton3D.gd"
										},
										"script": "res://scripts/3d/PhysicalButton3D.gd",
										"type": "StaticBody3D"
									}
								],
								"groups": [],
								"name": "DefenseButton",
								"properties": {
									"mesh": "res://scenes/3d/Pyshical3DButtons.tscn::ArrayMesh_ewdgv",
									"position": [
										0.16015699505806,
										0.0315230004489422,
										0.256601005792618
									],
									"skeleton": "",
									"surface_material_override/0": "<Object#null>"
								},
								"script": "",
								"type": "MeshInstance3D"
							},
							{
								"children": [
									{
										"children": [
											{
												"children": [],
												"groups": [],
												"name": "CollisionShape3D",
												"properties": {
													"position": [
														0.0,
														0.00111327995546162,
														-0.000380859011784196
													],
													"shape": "res://scenes/3d/Pyshical3DButtons.tscn::BoxShape3D_3o28w"
												},
												"script": "",
												"type": "CollisionShape3D"
											}
										],
										"groups": [],
										"name": "StaticBody3D",
										"properties": {
											"script": "res://scripts/3d/PhysicalButton3D.gd"
										},
										"script": "res://scripts/3d/PhysicalButton3D.gd",
										"type": "StaticBody3D"
									}
								],
								"groups": [],
								"name": "DeliveryButton",
								"properties": {
									"mesh": "res://scenes/3d/Pyshical3DButtons.tscn::ArrayMesh_0043a",
									"position": [
										-0.159162998199463,
										0.0315230004489422,
										0.182622998952866
									],
									"skeleton": "",
									"surface_material_override/0": "<Object#null>"
								},
								"script": "",
								"type": "MeshInstance3D"
							},
							{
								"children": [
									{
										"children": [
											{
												"children": [],
												"groups": [],
												"name": "CollisionShape3D",
												"properties": {
													"position": [
														0.000848353025503457,
														0.0103638004511595,
														0.000439449999248609
													],
													"shape": "res://scenes/3d/Pyshical3DButtons.tscn::BoxShape3D_gq6r3"
												},
												"script": "",
												"type": "CollisionShape3D"
											}
										],
										"groups": [],
										"name": "StaticBody3D",
										"properties": {
											"script": "res://scripts/3d/PhysicalButton3D.gd"
										},
										"script": "res://scripts/3d/PhysicalButton3D.gd",
										"type": "StaticBody3D"
									}
								],
								"groups": [],
								"name": "InfoWarButton",
								"properties": {
									"mesh": "res://scenes/3d/Pyshical3DButtons.tscn::ArrayMesh_41hpi",
									"position": [
										-0.271239012479782,
										0.0315230004489422,
										0.257016003131866
									],
									"skeleton": "",
									"surface_material_override/0": "<Object#null>"
								},
								"script": "",
								"type": "MeshInstance3D"
							},
							{
								"children": [
									{
										"children": [
											{
												"children": [],
												"groups": [],
												"name": "CollisionShape3D",
												"properties": {
													"position": [
														0.0,
														0.00111327995546162,
														-0.000380859011784196
													],
													"shape": "res://scenes/3d/Pyshical3DButtons.tscn::BoxShape3D_3o28w"
												},
												"script": "",
												"type": "CollisionShape3D"
											}
										],
										"groups": [],
										"name": "StaticBody3D",
										"properties": {
											"script": "res://scripts/3d/PhysicalButton3D.gd"
										},
										"script": "res://scripts/3d/PhysicalButton3D.gd",
										"type": "StaticBody3D"
									}
								],
								"groups": [],
								"name": "PayloadButton",
								"properties": {
									"mesh": "res://scenes/3d/Pyshical3DButtons.tscn::ArrayMesh_ghkgd",
									"position": [
										-0.159162998199463,
										0.0315230004489422,
										0.256601005792618
									],
									"skeleton": "",
									"surface_material_override/0": "<Object#null>"
								},
								"script": "",
								"type": "MeshInstance3D"
							},
							{
								"children": [
									{
										"children": [
											{
												"children": [],
												"groups": [],
												"name": "CollisionShape3D",
												"properties": {
													"position": [
														0.0,
														0.00111327995546162,
														-0.000380859011784196
													],
													"shape": "res://scenes/3d/Pyshical3DButtons.tscn::BoxShape3D_3o28w"
												},
												"script": "",
												"type": "CollisionShape3D"
											}
										],
										"groups": [],
										"name": "StaticBody3D",
										"properties": {
											"script": "res://scripts/3d/PhysicalButton3D.gd"
										},
										"script": "res://scripts/3d/PhysicalButton3D.gd",
										"type": "StaticBody3D"
									}
								],
								"groups": [],
								"name": "UtilityButton",
								"properties": {
									"mesh": "res://scenes/3d/Pyshical3DButtons.tscn::ArrayMesh_mijjt",
									"position": [
										0.16015699505806,
										0.0315230004489422,
										0.182692006230354
									],
									"skeleton": "",
									"surface_material_override/0": "<Object#null>"
								},
								"script": "",
								"type": "MeshInstance3D"
							},
							{
								"children": [
									{
										"children": [
											{
												"children": [],
												"groups": [],
												"name": "CollisionShape3D",
												"properties": {
													"position": [
														0.0,
														0.0109999999403954,
														0.0
													],
													"scale": [
														0.0399999991059303,
														0.0399999991059303,
														0.0399999991059303
													],
													"shape": "res://scenes/3d/Pyshical3DButtons.tscn::CylinderShape3D_sqqf1"
												},
												"script": "",
												"type": "CollisionShape3D"
											}
										],
										"groups": [],
										"name": "StaticBody3D",
										"properties": {
											"script": "res://scripts/3d/PhysicalButton3D.gd"
										},
										"script": "res://scripts/3d/PhysicalButton3D.gd",
										"type": "StaticBody3D"
									}
								],
								"groups": [],
								"name": "EndTurnButton",
								"properties": {
									"mesh": "res://scenes/3d/Pyshical3DButtons.tscn::ArrayMesh_bouml",
									"position": [
										-0.456000000238419,
										0.0410000011324883,
										0.219999998807907
									],
									"scale": [
										2.54446005821228,
										1.0,
										2.54446005821228
									],
									"skeleton": "",
									"surface_material_override/0": "<Object#null>"
								},
								"script": "",
								"type": "MeshInstance3D"
							},
							{
								"children": [
									{
										"children": [
											{
												"children": [],
												"groups": [],
												"name": "CollisionShape3D",
												"properties": {
													"shape": "res://scenes/3d/Pyshical3DButtons.tscn::CylinderShape3D_gq6r3"
												},
												"script": "",
												"type": "CollisionShape3D"
											}
										],
										"groups": [],
										"name": "StaticBody3D",
										"properties": {
											"script": "res://scripts/3d/PhysicalButton3D.gd"
										},
										"script": "res://scripts/3d/PhysicalButton3D.gd",
										"type": "StaticBody3D"
									}
								],
								"groups": [],
								"name": "EnemyButtonBottomLeft",
								"properties": {
									"mesh": "res://scenes/3d/Pyshical3DButtons.tscn::ArrayMesh_bf3gj",
									"position": [
										-0.363564014434814,
										0.039995800703764,
										0.102797001600266
									],
									"scale": [
										1.52617001533508,
										1.52617001533508,
										1.52617001533508
									],
									"skeleton": "",
									"surface_material_override/0": "<Object#null>"
								},
								"script": "",
								"type": "MeshInstance3D"
							},
							{
								"children": [
									{
										"children": [
											{
												"children": [],
												"groups": [],
												"name": "CollisionShape3D",
												"properties": {
													"shape": "res://scenes/3d/Pyshical3DButtons.tscn::CylinderShape3D_gq6r3"
												},
												"script": "",
												"type": "CollisionShape3D"
											}
										],
										"groups": [],
										"name": "StaticBody3D",
										"properties": {
											"script": "res://scripts/3d/PhysicalButton3D.gd"
										},
										"script": "res://scripts/3d/PhysicalButton3D.gd",
										"type": "StaticBody3D"
									}
								],
								"groups": [],
								"name": "EnemyButtonBottomRight",
								"properties": {
									"mesh": "res://scenes/3d/Pyshical3DButtons.tscn::ArrayMesh_rfd2w",
									"position": [
										0.365797013044357,
										0.039995800703764,
										0.102797001600266
									],
									"scale": [
										1.52617001533508,
										1.52617001533508,
										1.52617001533508
									],
									"skeleton": "",
									"surface_material_override/0": "<Object#null>"
								},
								"script": "",
								"type": "MeshInstance3D"
							},
							{
								"children": [
									{
										"children": [
											{
												"children": [],
												"groups": [],
												"name": "CollisionShape3D",
												"properties": {
													"shape": "res://scenes/3d/Pyshical3DButtons.tscn::CylinderShape3D_gq6r3"
												},
												"script": "",
												"type": "CollisionShape3D"
											}
										],
										"groups": [],
										"name": "StaticBody3D",
										"properties": {
											"script": "res://scripts/3d/PhysicalButton3D.gd"
										},
										"script": "res://scripts/3d/PhysicalButton3D.gd",
										"type": "StaticBody3D"
									}
								],
								"groups": [],
								"name": "EnemyButtonTopLeft",
								"properties": {
									"mesh": "res://scenes/3d/Pyshical3DButtons.tscn::ArrayMesh_avc7c",
									"position": [
										-0.363564014434814,
										0.039995800703764,
										-0.118046000599861
									],
									"scale": [
										1.52617001533508,
										1.52617001533508,
										1.52617001533508
									],
									"skeleton": "",
									"surface_material_override/0": "<Object#null>"
								},
								"script": "",
								"type": "MeshInstance3D"
							},
							{
								"children": [
									{
										"children": [
											{
												"children": [],
												"groups": [],
												"name": "CollisionShape3D",
												"properties": {
													"shape": "res://scenes/3d/Pyshical3DButtons.tscn::CylinderShape3D_gq6r3"
												},
												"script": "",
												"type": "CollisionShape3D"
											}
										],
										"groups": [],
										"name": "StaticBody3D",
										"properties": {
											"script": "res://scripts/3d/PhysicalButton3D.gd"
										},
										"script": "res://scripts/3d/PhysicalButton3D.gd",
										"type": "StaticBody3D"
									}
								],
								"groups": [],
								"name": "EnemyButtonTopRight",
								"properties": {
									"mesh": "res://scenes/3d/Pyshical3DButtons.tscn::ArrayMesh_e1yf7",
									"position": [
										0.365797013044357,
										0.039995800703764,
										-0.118046000599861
									],
									"scale": [
										1.52617001533508,
										1.52617001533508,
										1.52617001533508
									],
									"skeleton": "",
									"surface_material_override/0": "<Object#null>"
								},
								"script": "",
								"type": "MeshInstance3D"
							},
							{
								"children": [],
								"groups": [],
								"name": "EnemyButtonRim_BottomLeft",
								"properties": {
									"mesh": "res://scenes/3d/Pyshical3DButtons.tscn::ArrayMesh_ljhfw",
									"position": [
										-0.363564014434814,
										0.039995800703764,
										0.102797001600266
									],
									"rotation": [
										0.0,
										0.132716491818428,
										0.0
									],
									"scale": [
										1.5261709690094,
										1.52617001533508,
										1.5261709690094
									],
									"skeleton": "",
									"surface_material_override/0": "<Object#null>"
								},
								"script": "",
								"type": "MeshInstance3D"
							},
							{
								"children": [],
								"groups": [],
								"name": "EnemyButtonRim_BottomRight",
								"properties": {
									"mesh": "res://scenes/3d/Pyshical3DButtons.tscn::ArrayMesh_6rtmn",
									"position": [
										0.365797013044357,
										0.039995800703764,
										0.102797001600266
									],
									"rotation": [
										0.0,
										-3.07770013809204,
										0.0
									],
									"scale": [
										1.52616393566132,
										1.52617001533508,
										1.52616393566132
									],
									"skeleton": "",
									"surface_material_override/0": "<Object#null>"
								},
								"script": "",
								"type": "MeshInstance3D"
							},
							{
								"children": [],
								"groups": [],
								"name": "EnemyButtonRim_TopLeft",
								"properties": {
									"mesh": "res://scenes/3d/Pyshical3DButtons.tscn::ArrayMesh_ggp0d",
									"position": [
										-0.363564014434814,
										0.039995800703764,
										-0.118046000599861
									],
									"scale": [
										1.52617001533508,
										1.52617001533508,
										1.52617001533508
									],
									"skeleton": "",
									"surface_material_override/0": "<Object#null>"
								},
								"script": "",
								"type": "MeshInstance3D"
							},
							{
								"children": [],
								"groups": [],
								"name": "EnemyButtonRim_TopRight",
								"properties": {
									"mesh": "res://scenes/3d/Pyshical3DButtons.tscn::ArrayMesh_qtjy4",
									"position": [
										0.365797013044357,
										0.039995800703764,
										-0.118046000599861
									],
									"rotation": [
										0.0,
										-1.72854113578796,
										0.0
									],
									"scale": [
										1.52616882324219,
										1.52617001533508,
										1.52616882324219
									],
									"skeleton": "",
									"surface_material_override/0": "<Object#null>"
								},
								"script": "",
								"type": "MeshInstance3D"
							},
							{
								"children": [],
								"groups": [],
								"name": "RedButtonRim",
								"properties": {
									"mesh": "res://scenes/3d/Pyshical3DButtons.tscn::ArrayMesh_11er3",
									"position": [
										-0.456099987030029,
										0.0277586001902819,
										0.219675004482269
									],
									"scale": [
										0.0683659017086029,
										0.0122867003083229,
										0.0683659017086029
									],
									"skeleton": "",
									"surface_material_override/0": "<Object#null>"
								},
								"script": "",
								"type": "MeshInstance3D"
							},
							{
								"children": [],
								"groups": [],
								"name": "RedButtonModule",
								"properties": {
									"mesh": "res://scenes/3d/Pyshical3DButtons.tscn::ArrayMesh_igkik",
									"position": [
										-0.456099987030029,
										0.0277586001902819,
										0.219675004482269
									],
									"scale": [
										0.0683657974004745,
										0.0122867003083229,
										0.0683657974004745
									],
									"skeleton": "",
									"surface_material_override/0": "<Object#null>"
								},
								"script": "",
								"type": "MeshInstance3D"
							}
						],
						"groups": [],
						"name": "console",
						"properties": {

						},
						"script": "",
						"type": "Node3D"
					},
					{
						"children": [],
						"groups": [],
						"name": "AnimationPlayer",
						"properties": {
							"libraries": {
								"": "<AnimationLibrary#-9223369379024911867>"
							}
						},
						"script": "",
						"type": "AnimationPlayer"
					}
				],
				"groups": [],
				"name": "Physical3DButtons",
				"properties": {
					"script": "res://scenes/3d/ConsoleController.gd"
				},
				"script": "res://scenes/3d/ConsoleController.gd",
				"type": "Node3D"
			}
		},
		{
			"path": "res:///scenes/effects/FloatingText.tscn",
			"root_node": {
				"children": [],
				"groups": [],
				"name": "FloatingText",
				"properties": {
					"position": [
						53.0,
						492.0
					],
					"script": "res://FloatingText.gd",
					"size": [
						422.0,
						137.0
					],
					"text": "BOOOM!",
					"theme_override_colors/font_color": [
						1.0,
						0.0,
						0.0,
						1.0
					],
					"theme_override_font_sizes/font_size": 100,
					"theme_override_fonts/font": "res://scenes/effects/FloatingText.tscn::SystemFont_30oou"
				},
				"script": "res://FloatingText.gd",
				"type": "Label"
			}
		},
		{
			"path": "res:///scenes/ui/AvatarScreen2D.tscn",
			"root_node": {
				"children": [
					{
						"children": [
							{
								"children": [],
								"groups": [],
								"name": "AvatarImage",
								"properties": {
									"anchors_preset": 15,
									"stretch_mode": 5
								},
								"script": "",
								"type": "TextureRect"
							}
						],
						"groups": [],
						"name": "SubViewport",
						"properties": {
							"transparent_bg": true
						},
						"script": "",
						"type": "SubViewport"
					}
				],
				"groups": [],
				"name": "AvatarScreen2D",
				"properties": {
					"script": "res://scripts/ui/AvatarScreen2D.gd",
					"size": [
						40.0,
						40.0
					]
				},
				"script": "res://scripts/ui/AvatarScreen2D.gd",
				"type": "SubViewportContainer"
			}
		},
		{
			"path": "res:///scenes/ui/Card.tscn",
			"root_node": {
				"children": [
					{
						"children": [
							{
								"children": [
									{
										"children": [],
										"groups": [],
										"name": "NameLabel",
										"properties": {
											"layout_mode": 2
										},
										"script": "",
										"type": "Label"
									},
									{
										"children": [],
										"groups": [],
										"name": "Art",
										"properties": {
											"layout_mode": 2
										},
										"script": "",
										"type": "TextureRect"
									},
									{
										"children": [],
										"groups": [],
										"name": "TypeLabel",
										"properties": {
											"layout_mode": 2
										},
										"script": "",
										"type": "Label"
									},
									{
										"children": [],
										"groups": [],
										"name": "DescriptionLabel",
										"properties": {
											"layout_mode": 2
										},
										"script": "",
										"type": "Label"
									}
								],
								"groups": [],
								"name": "VBoxContainer",
								"properties": {
									"layout_mode": 2
								},
								"script": "",
								"type": "VBoxContainer"
							}
						],
						"groups": [],
						"name": "MarginContainer",
						"properties": {
							"layout_mode": 2,
							"theme_override_constants/margin_bottom": 10,
							"theme_override_constants/margin_left": 10,
							"theme_override_constants/margin_right": 10,
							"theme_override_constants/margin_top": 10
						},
						"script": "",
						"type": "MarginContainer"
					}
				],
				"groups": [],
				"name": "Card",
				"properties": {
					"custom_minimum_size": [
						240.0,
						350.0
					],
					"position": [
						-120.0,
						-175.0
					],
					"script": "res://scenes/ui/Card.gd",
					"size": [
						240.0,
						350.0
					]
				},
				"script": "res://scenes/ui/Card.gd",
				"type": "PanelContainer"
			}
		},
		{
			"path": "res:///scenes/ui/CardChooser.tscn",
			"root_node": {
				"children": [
					{
						"children": [
							{
								"children": [
									{
										"children": [],
										"groups": [],
										"name": "TitleLabel",
										"properties": {
											"layout_mode": 2
										},
										"script": "",
										"type": "Label"
									},
									{
										"children": [],
										"groups": [],
										"name": "CardGrid",
										"properties": {
											"columns": 3,
											"layout_mode": 2
										},
										"script": "",
										"type": "GridContainer"
									}
								],
								"groups": [],
								"name": "VBoxContainer",
								"properties": {
									"layout_mode": 2
								},
								"script": "",
								"type": "VBoxContainer"
							}
						],
						"groups": [],
						"name": "MarginContainer",
						"properties": {
							"layout_mode": 2
						},
						"script": "",
						"type": "MarginContainer"
					}
				],
				"groups": [],
				"name": "CardChooser",
				"properties": {
					"position": [
						-20.0,
						-20.0
					],
					"script": "res://scenes/ui/CardChooser.gd",
					"size": [
						40.0,
						40.0
					]
				},
				"script": "res://scenes/ui/CardChooser.gd",
				"type": "PanelContainer"
			}
		},
		{
			"path": "res:///scenes/ui/DeploymentScreen.tscn",
			"root_node": {
				"children": [
					{
						"children": [],
						"groups": [],
						"name": "InputShield",
						"properties": {
							"anchors_preset": 15,
							"color": [
								1.0,
								0.0,
								0.0166663993149996,
								0.0
							],
							"layout_mode": 1,
							"position": [
								-125.0,
								-72.5
							],
							"theme": "res://art/ui/card_menu-theme.tres"
						},
						"script": "",
						"type": "ColorRect"
					},
					{
						"children": [
							{
								"children": [
									{
										"children": [
											{
												"children": [],
												"groups": [],
												"name": "TitleLabel",
												"properties": {
													"anchors_preset": 15,
													"autowrap_mode": 3,
													"horizontal_alignment": 1,
													"layout_mode": 1,
													"position": [
														-0.5,
														-11.5
													],
													"size": [
														1.0,
														23.0
													],
													"text": "BUTTON SELECTION",
													"theme_override_colors/font_color": [
														0.0,
														0.0,
														0.0,
														1.0
													],
													"theme_override_font_sizes/font_size": 40,
													"theme_override_fonts/font": "res://art/fonts/AcPlus_IBM_VGA_8x14.ttf",
													"vertical_alignment": 1
												},
												"script": "",
												"type": "Label"
											}
										],
										"groups": [],
										"name": "TitleBar",
										"properties": {
											"custom_minimum_size": [
												500.0,
												75.0
											],
											"layout_mode": 2,
											"mouse_filter": 1,
											"size_flags_vertical": 0,
											"theme": "res://art/ui/card_menu-theme.tres"
										},
										"script": "",
										"type": "Panel"
									},
									{
										"children": [
											{
												"children": [],
												"groups": [],
												"name": "Panel",
												"properties": {
													"layout_mode": 2,
													"size_flags_vertical": 3,
													"theme_override_styles/panel": "res://scenes/ui/DeploymentScreen.tscn::StyleBoxFlat_nt86h"
												},
												"script": "",
												"type": "Panel"
											}
										],
										"groups": [],
										"name": "OptionsList",
										"properties": {
											"custom_minimum_size": [
												500.0,
												0.0
											],
											"layout_mode": 2,
											"size_flags_vertical": 3,
											"theme": "res://art/ui/card_menu-theme.tres"
										},
										"script": "",
										"type": "VBoxContainer"
									}
								],
								"groups": [],
								"name": "CardChooserUI",
								"properties": {
									"layout_mode": 2,
									"theme": "res://art/ui/card_menu-theme.tres"
								},
								"script": "",
								"type": "VBoxContainer"
							},
							{
								"children": [
									{
										"children": [
											{
												"children": [],
												"groups": [],
												"name": "Visualizer_Art",
												"properties": {
													"custom_minimum_size": [
														450.0,
														450.0
													],
													"layout_mode": 2,
													"size_flags_horizontal": 4,
													"size_flags_vertical": 0
												},
												"script": "",
												"type": "TextureRect"
											},
											{
												"children": [],
												"groups": [],
												"name": "Visualizer_Description",
												"properties": {
													"autowrap_mode": 3,
													"custom_minimum_size": [
														0.0,
														150.0
													],
													"horizontal_alignment": 1,
													"layout_mode": 2,
													"size_flags_vertical": 0,
													"text": "Card Description Card Description Card Description Card Description Card Description Card Description Card Description Card Description Card Description Card Descriptio",
													"theme_override_colors/font_color": [
														0.0,
														0.0,
														0.0,
														1.0
													],
													"theme_override_font_sizes/font_size": 28,
													"theme_override_fonts/font": "res://art/fonts/AcPlus_IBM_VGA_8x14.ttf",
													"theme_override_styles/normal": "<StyleBoxFlat#-9223368714596825088>",
													"vertical_alignment": 1
												},
												"script": "",
												"type": "Label"
											}
										],
										"groups": [],
										"name": "VisualizerContent",
										"properties": {
											"layout_mode": 2
										},
										"script": "",
										"type": "VBoxContainer"
									}
								],
								"groups": [],
								"name": "CardVisualsOverlay",
								"properties": {
									"custom_minimum_size": [
										450.0,
										600.0
									],
									"layout_mode": 2,
									"mouse_filter": 1,
									"size_flags_horizontal": 10,
									"size_flags_vertical": 4,
									"theme_override_styles/panel": "res://art/ui/dark_green_box_flat.tres"
								},
								"script": "",
								"type": "PanelContainer"
							}
						],
						"groups": [],
						"name": "ContentBox",
						"properties": {
							"layout_mode": 2,
							"size": [
								954.0,
								604.0
							],
							"theme": "res://art/ui/card_menu-theme.tres"
						},
						"script": "",
						"type": "HBoxContainer"
					}
				],
				"groups": [],
				"name": "DeploymentScreen_Root",
				"properties": {
					"anchors_preset": 15,
					"custom_minimum_size": [
						1210.0,
						750.0
					],
					"position": [
						-960.0,
						-540.0
					],
					"script": "res://scenes/ui/DeploymentUI.gd",
					"size": [
						1210.0,
						750.0
					],
					"theme": "res://art/ui/card_menu-theme.tres"
				},
				"script": "res://scenes/ui/DeploymentUI.gd",
				"type": "Control"
			}
		},
		{
			"path": "res:///scenes/ui/LogScreen2D.tscn",
			"root_node": {
				"children": [
					{
						"children": [
							{
								"children": [
									{
										"children": [],
										"groups": [],
										"name": "GameLogLabel",
										"properties": {
											"anchors_preset": 15,
											"horizontal_alignment": 1,
											"layout_mode": 1,
											"position": [
												-0.5,
												0.0
											],
											"size": [
												1.0,
												0.0
											],
											"text": "TESTING 123",
											"theme_override_colors/default_color": [
												0.0,
												0.0,
												0.0,
												1.0
											],
											"theme_override_font_sizes/normal_font_size": 50,
											"theme_override_fonts/normal_font": "res://art/fonts/MatrixType-Bold.ttf",
											"vertical_alignment": 1
										},
										"script": "",
										"type": "RichTextLabel"
									}
								],
								"groups": [],
								"name": "LCD_Panel",
								"properties": {
									"anchors_preset": 15,
									"theme_override_styles/panel": "res://scenes/ui/LogScreen2D.tscn::StyleBoxFlat_gcqd2"
								},
								"script": "",
								"type": "Panel"
							}
						],
						"groups": [],
						"name": "SubViewport",
						"properties": {
							"handle_input_locally": false,
							"render_target_update_mode": 4
						},
						"script": "",
						"type": "SubViewport"
					}
				],
				"groups": [],
				"name": "LogScreen2D",
				"properties": {
					"size": [
						40.0,
						40.0
					]
				},
				"script": "",
				"type": "SubViewportContainer"
			}
		},
		{
			"path": "res:///scenes/ui/OptionButton.tscn",
			"root_node": {
				"children": [],
				"groups": [],
				"name": "OptionButton",
				"properties": {
					"custom_minimum_size": [
						0.0,
						50.0
					],
					"mouse_default_cursor_shape": 2,
					"size_flags_horizontal": 3,
					"text": "Option Text",
					"theme_override_colors/font_color": [
						0.0405000001192093,
						0.810000002384186,
						0.335474997758865,
						1.0
					],
					"theme_override_colors/font_hover_color": [
						1.0,
						1.0,
						1.0,
						1.0
					],
					"theme_override_font_sizes/font_size": 28,
					"theme_override_fonts/font": "res://art/fonts/AcPlus_IBM_VGA_8x14.ttf",
					"theme_override_styles/hover": "res://scenes/ui/OptionButton.tscn::StyleBoxFlat_2",
					"theme_override_styles/normal": "res://scenes/ui/OptionButton.tscn::StyleBoxFlat_1"
				},
				"script": "",
				"type": "Button"
			}
		},
		{
			"path": "res:///scenes/ui/PlaceholderButton.tscn",
			"root_node": {
				"children": [],
				"groups": [],
				"name": "PlaceholderButton",
				"properties": {
					"custom_minimum_size": [
						100.0,
						100.0
					],
					"size": [
						100.0,
						100.0
					],
					"theme_override_styles/disabled": "res://scenes/ui/PlaceholderButton.tscn::StyleBoxFlat_ppoe3",
					"theme_override_styles/hover": "res://scenes/ui/PlaceholderButton.tscn::StyleBoxFlat_8cbmw",
					"theme_override_styles/hover_pressed": "res://scenes/ui/PlaceholderButton.tscn::StyleBoxFlat_odomo",
					"theme_override_styles/normal": "res://scenes/ui/PlaceholderButton.tscn::StyleBoxFlat_0fhw7"
				},
				"script": "",
				"type": "Button"
			}
		},
		{
			"path": "res:///scenes/ui/PlayerPanel.tscn",
			"root_node": {
				"children": [
					{
						"children": [
							{
								"children": [
									{
										"children": [
											{
												"children": [
													{
														"children": [],
														"groups": [],
														"name": "FactionNameLabel",
														"properties": {
															"layout_mode": 2
														},
														"script": "",
														"type": "Label"
													},
													{
														"children": [],
														"groups": [],
														"name": "LeaderNameLabel",
														"properties": {
															"layout_mode": 2
														},
														"script": "",
														"type": "Label"
													},
													{
														"children": [],
														"groups": [],
														"name": "PopulationLabel",
														"properties": {
															"layout_mode": 2
														},
														"script": "",
														"type": "Label"
													}
												],
												"groups": [],
												"name": "VBoxContainer",
												"properties": {
													"layout_mode": 2,
													"mouse_filter": 2
												},
												"script": "",
												"type": "VBoxContainer"
											}
										],
										"groups": [],
										"name": "HBoxContainer",
										"properties": {
											"layout_mode": 2,
											"mouse_filter": 2
										},
										"script": "",
										"type": "HBoxContainer"
									}
								],
								"groups": [],
								"name": "MarginContainer",
								"properties": {
									"layout_mode": 2,
									"mouse_filter": 2
								},
								"script": "",
								"type": "MarginContainer"
							}
						],
						"groups": [],
						"name": "PanelContainer",
						"properties": {
							"layout_mode": 0,
							"mouse_filter": 2,
							"size": [
								1151.0,
								170.0
							]
						},
						"script": "",
						"type": "PanelContainer"
					}
				],
				"groups": [],
				"name": "PlayerPanel",
				"properties": {
					"anchors_preset": 15,
					"mouse_filter": 2,
					"script": "res://scenes/ui/PlayerPanel.gd"
				},
				"script": "res://scenes/ui/PlayerPanel.gd",
				"type": "Control"
			}
		},
		{
			"path": "res:///Main.tscn",
			"root_node": {
				"children": [
					{
						"children": [
							{
								"children": [
									{
										"children": [
											{
												"children": [
													{
														"children": [],
														"groups": [],
														"name": "ConsoleBasePlate",
														"properties": {
															"mesh": "res://scenes/3d/Console3D.tscn::ArrayMesh_mrlnu",
															"skeleton": "",
															"surface_material_override/0": "<Object#null>"
														},
														"script": "",
														"type": "MeshInstance3D"
													},
													{
														"children": [
															{
																"children": [
																	{
																		"children": [
																			{
																				"children": [
																					{
																						"children": [],
																						"groups": [],
																						"name": "CollisionShape3D",
																						"properties": {
																							"position": [
																								0.000848353025503457,
																								0.0103638004511595,
																								0.000439449999248609
																							],
																							"shape": "res://scenes/3d/Pyshical3DButtons.tscn::BoxShape3D_gq6r3"
																						},
																						"script": "",
																						"type": "CollisionShape3D"
																					}
																				],
																				"groups": [],
																				"name": "StaticBody3D",
																				"properties": {
																					"script": "res://scripts/3d/PhysicalButton3D.gd"
																				},
																				"script": "res://scripts/3d/PhysicalButton3D.gd",
																				"type": "StaticBody3D"
																			}
																		],
																		"groups": [],
																		"name": "BuildButton",
																		"properties": {
																			"mesh": "res://scenes/3d/Pyshical3DButtons.tscn::ArrayMesh_e35wv",
																			"position": [
																				-0.271239012479782,
																				0.0315230004489422,
																				0.182622998952866
																			],
																			"skeleton": "",
																			"surface_material_override/0": "<Object#null>"
																		},
																		"script": "",
																		"type": "MeshInstance3D"
																	},
																	{
																		"children": [
																			{
																				"children": [
																					{
																						"children": [],
																						"groups": [],
																						"name": "CollisionShape3D",
																						"properties": {
																							"position": [
																								0.0,
																								0.00111327995546162,
																								-0.000380859011784196
																							],
																							"shape": "res://scenes/3d/Pyshical3DButtons.tscn::BoxShape3D_3o28w"
																						},
																						"script": "",
																						"type": "CollisionShape3D"
																					}
																				],
																				"groups": [],
																				"name": "StaticBody3D",
																				"properties": {
																					"script": "res://scripts/3d/PhysicalButton3D.gd"
																				},
																				"script": "res://scripts/3d/PhysicalButton3D.gd",
																				"type": "StaticBody3D"
																			}
																		],
																		"groups": [],
																		"name": "DefenseButton",
																		"properties": {
																			"mesh": "res://scenes/3d/Pyshical3DButtons.tscn::ArrayMesh_ewdgv",
																			"position": [
																				0.16015699505806,
																				0.0315230004489422,
																				0.256601005792618
																			],
																			"skeleton": "",
																			"surface_material_override/0": "<Object#null>"
																		},
																		"script": "",
																		"type": "MeshInstance3D"
																	},
																	{
																		"children": [
																			{
																				"children": [
																					{
																						"children": [],
																						"groups": [],
																						"name": "CollisionShape3D",
																						"properties": {
																							"position": [
																								0.0,
																								0.00111327995546162,
																								-0.000380859011784196
																							],
																							"shape": "res://scenes/3d/Pyshical3DButtons.tscn::BoxShape3D_3o28w"
																						},
																						"script": "",
																						"type": "CollisionShape3D"
																					}
																				],
																				"groups": [],
																				"name": "StaticBody3D",
																				"properties": {
																					"script": "res://scripts/3d/PhysicalButton3D.gd"
																				},
																				"script": "res://scripts/3d/PhysicalButton3D.gd",
																				"type": "StaticBody3D"
																			}
																		],
																		"groups": [],
																		"name": "DeliveryButton",
																		"properties": {
																			"mesh": "res://scenes/3d/Pyshical3DButtons.tscn::ArrayMesh_0043a",
																			"position": [
																				-0.159162998199463,
																				0.0315230004489422,
																				0.182622998952866
																			],
																			"skeleton": "",
																			"surface_material_override/0": "<Object#null>"
																		},
																		"script": "",
																		"type": "MeshInstance3D"
																	},
																	{
																		"children": [
																			{
																				"children": [
																					{
																						"children": [],
																						"groups": [],
																						"name": "CollisionShape3D",
																						"properties": {
																							"position": [
																								0.000848353025503457,
																								0.0103638004511595,
																								0.000439449999248609
																							],
																							"shape": "res://scenes/3d/Pyshical3DButtons.tscn::BoxShape3D_gq6r3"
																						},
																						"script": "",
																						"type": "CollisionShape3D"
																					}
																				],
																				"groups": [],
																				"name": "StaticBody3D",
																				"properties": {
																					"script": "res://scripts/3d/PhysicalButton3D.gd"
																				},
																				"script": "res://scripts/3d/PhysicalButton3D.gd",
																				"type": "StaticBody3D"
																			}
																		],
																		"groups": [],
																		"name": "InfoWarButton",
																		"properties": {
																			"mesh": "res://scenes/3d/Pyshical3DButtons.tscn::ArrayMesh_41hpi",
																			"position": [
																				-0.271239012479782,
																				0.0315230004489422,
																				0.257016003131866
																			],
																			"skeleton": "",
																			"surface_material_override/0": "<Object#null>"
																		},
																		"script": "",
																		"type": "MeshInstance3D"
																	},
																	{
																		"children": [
																			{
																				"children": [
																					{
																						"children": [],
																						"groups": [],
																						"name": "CollisionShape3D",
																						"properties": {
																							"position": [
																								0.0,
																								0.00111327995546162,
																								-0.000380859011784196
																							],
																							"shape": "res://scenes/3d/Pyshical3DButtons.tscn::BoxShape3D_3o28w"
																						},
																						"script": "",
																						"type": "CollisionShape3D"
																					}
																				],
																				"groups": [],
																				"name": "StaticBody3D",
																				"properties": {
																					"script": "res://scripts/3d/PhysicalButton3D.gd"
																				},
																				"script": "res://scripts/3d/PhysicalButton3D.gd",
																				"type": "StaticBody3D"
																			}
																		],
																		"groups": [],
																		"name": "PayloadButton",
																		"properties": {
																			"mesh": "res://scenes/3d/Pyshical3DButtons.tscn::ArrayMesh_ghkgd",
																			"position": [
																				-0.159162998199463,
																				0.0315230004489422,
																				0.256601005792618
																			],
																			"skeleton": "",
																			"surface_material_override/0": "<Object#null>"
																		},
																		"script": "",
																		"type": "MeshInstance3D"
																	},
																	{
																		"children": [
																			{
																				"children": [
																					{
																						"children": [],
																						"groups": [],
																						"name": "CollisionShape3D",
																						"properties": {
																							"position": [
																								0.0,
																								0.00111327995546162,
																								-0.000380859011784196
																							],
																							"shape": "res://scenes/3d/Pyshical3DButtons.tscn::BoxShape3D_3o28w"
																						},
																						"script": "",
																						"type": "CollisionShape3D"
																					}
																				],
																				"groups": [],
																				"name": "StaticBody3D",
																				"properties": {
																					"script": "res://scripts/3d/PhysicalButton3D.gd"
																				},
																				"script": "res://scripts/3d/PhysicalButton3D.gd",
																				"type": "StaticBody3D"
																			}
																		],
																		"groups": [],
																		"name": "UtilityButton",
																		"properties": {
																			"mesh": "res://scenes/3d/Pyshical3DButtons.tscn::ArrayMesh_mijjt",
																			"position": [
																				0.16015699505806,
																				0.0315230004489422,
																				0.182692006230354
																			],
																			"skeleton": "",
																			"surface_material_override/0": "<Object#null>"
																		},
																		"script": "",
																		"type": "MeshInstance3D"
																	},
																	{
																		"children": [
																			{
																				"children": [
																					{
																						"children": [],
																						"groups": [],
																						"name": "CollisionShape3D",
																						"properties": {
																							"position": [
																								0.0,
																								0.0109999999403954,
																								0.0
																							],
																							"scale": [
																								0.0399999991059303,
																								0.0399999991059303,
																								0.0399999991059303
																							],
																							"shape": "res://scenes/3d/Pyshical3DButtons.tscn::CylinderShape3D_sqqf1"
																						},
																						"script": "",
																						"type": "CollisionShape3D"
																					}
																				],
																				"groups": [],
																				"name": "StaticBody3D",
																				"properties": {
																					"script": "res://scripts/3d/PhysicalButton3D.gd"
																				},
																				"script": "res://scripts/3d/PhysicalButton3D.gd",
																				"type": "StaticBody3D"
																			}
																		],
																		"groups": [],
																		"name": "EndTurnButton",
																		"properties": {
																			"mesh": "res://scenes/3d/Pyshical3DButtons.tscn::ArrayMesh_bouml",
																			"position": [
																				-0.456000000238419,
																				0.0410000011324883,
																				0.219999998807907
																			],
																			"scale": [
																				2.54446005821228,
																				1.0,
																				2.54446005821228
																			],
																			"skeleton": "",
																			"surface_material_override/0": "<Object#null>"
																		},
																		"script": "",
																		"type": "MeshInstance3D"
																	},
																	{
																		"children": [
																			{
																				"children": [
																					{
																						"children": [],
																						"groups": [],
																						"name": "CollisionShape3D",
																						"properties": {
																							"shape": "res://scenes/3d/Pyshical3DButtons.tscn::CylinderShape3D_gq6r3"
																						},
																						"script": "",
																						"type": "CollisionShape3D"
																					}
																				],
																				"groups": [],
																				"name": "StaticBody3D",
																				"properties": {
																					"script": "res://scripts/3d/PhysicalButton3D.gd"
																				},
																				"script": "res://scripts/3d/PhysicalButton3D.gd",
																				"type": "StaticBody3D"
																			}
																		],
																		"groups": [],
																		"name": "EnemyButtonBottomLeft",
																		"properties": {
																			"mesh": "res://scenes/3d/Pyshical3DButtons.tscn::ArrayMesh_bf3gj",
																			"position": [
																				-0.363564014434814,
																				0.039995800703764,
																				0.102797001600266
																			],
																			"scale": [
																				1.52617001533508,
																				1.52617001533508,
																				1.52617001533508
																			],
																			"skeleton": "",
																			"surface_material_override/0": "<Object#null>"
																		},
																		"script": "",
																		"type": "MeshInstance3D"
																	},
																	{
																		"children": [
																			{
																				"children": [
																					{
																						"children": [],
																						"groups": [],
																						"name": "CollisionShape3D",
																						"properties": {
																							"shape": "res://scenes/3d/Pyshical3DButtons.tscn::CylinderShape3D_gq6r3"
																						},
																						"script": "",
																						"type": "CollisionShape3D"
																					}
																				],
																				"groups": [],
																				"name": "StaticBody3D",
																				"properties": {
																					"script": "res://scripts/3d/PhysicalButton3D.gd"
																				},
																				"script": "res://scripts/3d/PhysicalButton3D.gd",
																				"type": "StaticBody3D"
																			}
																		],
																		"groups": [],
																		"name": "EnemyButtonBottomRight",
																		"properties": {
																			"mesh": "res://scenes/3d/Pyshical3DButtons.tscn::ArrayMesh_rfd2w",
																			"position": [
																				0.365797013044357,
																				0.039995800703764,
																				0.102797001600266
																			],
																			"scale": [
																				1.52617001533508,
																				1.52617001533508,
																				1.52617001533508
																			],
																			"skeleton": "",
																			"surface_material_override/0": "<Object#null>"
																		},
																		"script": "",
																		"type": "MeshInstance3D"
																	},
																	{
																		"children": [
																			{
																				"children": [
																					{
																						"children": [],
																						"groups": [],
																						"name": "CollisionShape3D",
																						"properties": {
																							"shape": "res://scenes/3d/Pyshical3DButtons.tscn::CylinderShape3D_gq6r3"
																						},
																						"script": "",
																						"type": "CollisionShape3D"
																					}
																				],
																				"groups": [],
																				"name": "StaticBody3D",
																				"properties": {
																					"script": "res://scripts/3d/PhysicalButton3D.gd"
																				},
																				"script": "res://scripts/3d/PhysicalButton3D.gd",
																				"type": "StaticBody3D"
																			}
																		],
																		"groups": [],
																		"name": "EnemyButtonTopLeft",
																		"properties": {
																			"mesh": "res://scenes/3d/Pyshical3DButtons.tscn::ArrayMesh_avc7c",
																			"position": [
																				-0.363564014434814,
																				0.039995800703764,
																				-0.118046000599861
																			],
																			"scale": [
																				1.52617001533508,
																				1.52617001533508,
																				1.52617001533508
																			],
																			"skeleton": "",
																			"surface_material_override/0": "<Object#null>"
																		},
																		"script": "",
																		"type": "MeshInstance3D"
																	},
																	{
																		"children": [
																			{
																				"children": [
																					{
																						"children": [],
																						"groups": [],
																						"name": "CollisionShape3D",
																						"properties": {
																							"shape": "res://scenes/3d/Pyshical3DButtons.tscn::CylinderShape3D_gq6r3"
																						},
																						"script": "",
																						"type": "CollisionShape3D"
																					}
																				],
																				"groups": [],
																				"name": "StaticBody3D",
																				"properties": {
																					"script": "res://scripts/3d/PhysicalButton3D.gd"
																				},
																				"script": "res://scripts/3d/PhysicalButton3D.gd",
																				"type": "StaticBody3D"
																			}
																		],
																		"groups": [],
																		"name": "EnemyButtonTopRight",
																		"properties": {
																			"mesh": "res://scenes/3d/Pyshical3DButtons.tscn::ArrayMesh_e1yf7",
																			"position": [
																				0.365797013044357,
																				0.039995800703764,
																				-0.118046000599861
																			],
																			"scale": [
																				1.52617001533508,
																				1.52617001533508,
																				1.52617001533508
																			],
																			"skeleton": "",
																			"surface_material_override/0": "<Object#null>"
																		},
																		"script": "",
																		"type": "MeshInstance3D"
																	},
																	{
																		"children": [],
																		"groups": [],
																		"name": "EnemyButtonRim_BottomLeft",
																		"properties": {
																			"mesh": "res://scenes/3d/Pyshical3DButtons.tscn::ArrayMesh_ljhfw",
																			"position": [
																				-0.363564014434814,
																				0.039995800703764,
																				0.102797001600266
																			],
																			"rotation": [
																				0.0,
																				0.132716491818428,
																				0.0
																			],
																			"scale": [
																				1.5261709690094,
																				1.52617001533508,
																				1.5261709690094
																			],
																			"skeleton": "",
																			"surface_material_override/0": "<Object#null>"
																		},
																		"script": "",
																		"type": "MeshInstance3D"
																	},
																	{
																		"children": [],
																		"groups": [],
																		"name": "EnemyButtonRim_BottomRight",
																		"properties": {
																			"mesh": "res://scenes/3d/Pyshical3DButtons.tscn::ArrayMesh_6rtmn",
																			"position": [
																				0.365797013044357,
																				0.039995800703764,
																				0.102797001600266
																			],
																			"rotation": [
																				0.0,
																				-3.07770013809204,
																				0.0
																			],
																			"scale": [
																				1.52616393566132,
																				1.52617001533508,
																				1.52616393566132
																			],
																			"skeleton": "",
																			"surface_material_override/0": "<Object#null>"
																		},
																		"script": "",
																		"type": "MeshInstance3D"
																	},
																	{
																		"children": [],
																		"groups": [],
																		"name": "EnemyButtonRim_TopLeft",
																		"properties": {
																			"mesh": "res://scenes/3d/Pyshical3DButtons.tscn::ArrayMesh_ggp0d",
																			"position": [
																				-0.363564014434814,
																				0.039995800703764,
																				-0.118046000599861
																			],
																			"scale": [
																				1.52617001533508,
																				1.52617001533508,
																				1.52617001533508
																			],
																			"skeleton": "",
																			"surface_material_override/0": "<Object#null>"
																		},
																		"script": "",
																		"type": "MeshInstance3D"
																	},
																	{
																		"children": [],
																		"groups": [],
																		"name": "EnemyButtonRim_TopRight",
																		"properties": {
																			"mesh": "res://scenes/3d/Pyshical3DButtons.tscn::ArrayMesh_qtjy4",
																			"position": [
																				0.365797013044357,
																				0.039995800703764,
																				-0.118046000599861
																			],
																			"rotation": [
																				0.0,
																				-1.72854113578796,
																				0.0
																			],
																			"scale": [
																				1.52616882324219,
																				1.52617001533508,
																				1.52616882324219
																			],
																			"skeleton": "",
																			"surface_material_override/0": "<Object#null>"
																		},
																		"script": "",
																		"type": "MeshInstance3D"
																	},
																	{
																		"children": [],
																		"groups": [],
																		"name": "RedButtonRim",
																		"properties": {
																			"mesh": "res://scenes/3d/Pyshical3DButtons.tscn::ArrayMesh_11er3",
																			"position": [
																				-0.456099987030029,
																				0.0277586001902819,
																				0.219675004482269
																			],
																			"scale": [
																				0.0683659017086029,
																				0.0122867003083229,
																				0.0683659017086029
																			],
																			"skeleton": "",
																			"surface_material_override/0": "<Object#null>"
																		},
																		"script": "",
																		"type": "MeshInstance3D"
																	},
																	{
																		"children": [],
																		"groups": [],
																		"name": "RedButtonModule",
																		"properties": {
																			"mesh": "res://scenes/3d/Pyshical3DButtons.tscn::ArrayMesh_igkik",
																			"position": [
																				-0.456099987030029,
																				0.0277586001902819,
																				0.219675004482269
																			],
																			"scale": [
																				0.0683657974004745,
																				0.0122867003083229,
																				0.0683657974004745
																			],
																			"skeleton": "",
																			"surface_material_override/0": "<Object#null>"
																		},
																		"script": "",
																		"type": "MeshInstance3D"
																	}
																],
																"groups": [],
																"name": "console",
																"properties": {

																},
																"script": "",
																"type": "Node3D"
															},
															{
																"children": [],
																"groups": [],
																"name": "AnimationPlayer",
																"properties": {
																	"libraries": {
																		"": "<AnimationLibrary#-9223369379024911867>"
																	}
																},
																"script": "",
																"type": "AnimationPlayer"
															}
														],
														"groups": [],
														"name": "Physical3DButtons",
														"properties": {

														},
														"script": "",
														"type": "Node3D"
													},
													{
														"children": [
															{
																"children": [
																	{
																		"children": [],
																		"groups": [],
																		"name": "MainScreenGlass",
																		"properties": {
																			"mesh": "res://scenes/3d/MainScreen.tscn::ArrayMesh_f127i",
																			"skeleton": "",
																			"surface_material_override/0": "<Object#null>"
																		},
																		"script": "",
																		"type": "MeshInstance3D"
																	},
																	{
																		"children": [
																			{
																				"children": [
																					{
																						"children": [
																							{
																								"children": [],
																								"groups": [],
																								"name": "InputShield",
																								"properties": {
																									"anchors_preset": 15,
																									"color": [
																										1.0,
																										0.0,
																										0.0166663993149996,
																										0.0
																									],
																									"layout_mode": 1,
																									"position": [
																										-125.0,
																										-72.5
																									],
																									"theme": "res://art/ui/card_menu-theme.tres"
																								},
																								"script": "",
																								"type": "ColorRect"
																							},
																							{
																								"children": [
																									{
																										"children": [
																											{
																												"children": [
																													{
																														"children": [],
																														"groups": [],
																														"name": "TitleLabel",
																														"properties": {
																															"anchors_preset": 15,
																															"autowrap_mode": 3,
																															"horizontal_alignment": 1,
																															"layout_mode": 1,
																															"position": [
																																-0.5,
																																-11.5
																															],
																															"size": [
																																1.0,
																																23.0
																															],
																															"text": "BUTTON SELECTION",
																															"theme_override_colors/font_color": [
																																0.0,
																																0.0,
																																0.0,
																																1.0
																															],
																															"theme_override_font_sizes/font_size": 40,
																															"theme_override_fonts/font": "res://art/fonts/AcPlus_IBM_VGA_8x14.ttf",
																															"vertical_alignment": 1
																														},
																														"script": "",
																														"type": "Label"
																													}
																												],
																												"groups": [],
																												"name": "TitleBar",
																												"properties": {
																													"custom_minimum_size": [
																														500.0,
																														75.0
																													],
																													"layout_mode": 2,
																													"mouse_filter": 1,
																													"size_flags_vertical": 0,
																													"theme": "res://art/ui/card_menu-theme.tres"
																												},
																												"script": "",
																												"type": "Panel"
																											},
																											{
																												"children": [
																													{
																														"children": [],
																														"groups": [],
																														"name": "Panel",
																														"properties": {
																															"layout_mode": 2,
																															"size_flags_vertical": 3,
																															"theme_override_styles/panel": "res://scenes/ui/DeploymentScreen.tscn::StyleBoxFlat_nt86h"
																														},
																														"script": "",
																														"type": "Panel"
																													}
																												],
																												"groups": [],
																												"name": "OptionsList",
																												"properties": {
																													"custom_minimum_size": [
																														500.0,
																														0.0
																													],
																													"layout_mode": 2,
																													"size_flags_vertical": 3,
																													"theme": "res://art/ui/card_menu-theme.tres"
																												},
																												"script": "",
																												"type": "VBoxContainer"
																											}
																										],
																										"groups": [],
																										"name": "CardChooserUI",
																										"properties": {
																											"layout_mode": 2,
																											"theme": "res://art/ui/card_menu-theme.tres"
																										},
																										"script": "",
																										"type": "VBoxContainer"
																									},
																									{
																										"children": [
																											{
																												"children": [
																													{
																														"children": [],
																														"groups": [],
																														"name": "Visualizer_Art",
																														"properties": {
																															"custom_minimum_size": [
																																450.0,
																																450.0
																															],
																															"layout_mode": 2,
																															"size_flags_horizontal": 4,
																															"size_flags_vertical": 0
																														},
																														"script": "",
																														"type": "TextureRect"
																													},
																													{
																														"children": [],
																														"groups": [],
																														"name": "Visualizer_Description",
																														"properties": {
																															"autowrap_mode": 3,
																															"custom_minimum_size": [
																																0.0,
																																150.0
																															],
																															"horizontal_alignment": 1,
																															"layout_mode": 2,
																															"size_flags_vertical": 0,
																															"text": "Card Description Card Description Card Description Card Description Card Description Card Description Card Description Card Description Card Description Card Descriptio",
																															"theme_override_colors/font_color": [
																																0.0,
																																0.0,
																																0.0,
																																1.0
																															],
																															"theme_override_font_sizes/font_size": 28,
																															"theme_override_fonts/font": "res://art/fonts/AcPlus_IBM_VGA_8x14.ttf",
																															"theme_override_styles/normal": "<StyleBoxFlat#-9223368709764986693>",
																															"vertical_alignment": 1
																														},
																														"script": "",
																														"type": "Label"
																													}
																												],
																												"groups": [],
																												"name": "VisualizerContent",
																												"properties": {
																													"layout_mode": 2
																												},
																												"script": "",
																												"type": "VBoxContainer"
																											}
																										],
																										"groups": [],
																										"name": "CardVisualsOverlay",
																										"properties": {
																											"custom_minimum_size": [
																												450.0,
																												600.0
																											],
																											"layout_mode": 2,
																											"mouse_filter": 1,
																											"size_flags_horizontal": 10,
																											"size_flags_vertical": 4,
																											"theme_override_styles/panel": "res://art/ui/dark_green_box_flat.tres"
																										},
																										"script": "",
																										"type": "PanelContainer"
																									}
																								],
																								"groups": [],
																								"name": "ContentBox",
																								"properties": {
																									"layout_mode": 2,
																									"size": [
																										954.0,
																										604.0
																									],
																									"theme": "res://art/ui/card_menu-theme.tres"
																								},
																								"script": "",
																								"type": "HBoxContainer"
																							}
																						],
																						"groups": [],
																						"name": "DeploymentScreen",
																						"properties": {
																							"anchors_preset": 15,
																							"custom_minimum_size": [
																								1210.0,
																								750.0
																							],
																							"mouse_default_cursor_shape": 2,
																							"position": [
																								-295.0,
																								-445.0
																							],
																							"rotation": 1.57079994678497,
																							"scale": [
																								1.0,
																								-0.699999988079071
																							],
																							"script": "res://scenes/ui/DeploymentUI.gd",
																							"size": [
																								1210.0,
																								750.0
																							],
																							"theme": "res://art/ui/card_menu-theme.tres"
																						},
																						"script": "res://scenes/ui/DeploymentUI.gd",
																						"type": "Control"
																					}
																				],
																				"groups": [],
																				"name": "SubViewport",
																				"properties": {
																					"size": "(750, 1210)",
																					"transparent_bg": true
																				},
																				"script": "",
																				"type": "SubViewport"
																			},
																			{
																				"children": [
																					{
																						"children": [],
																						"groups": [],
																						"name": "InputShield_CollisionShape",
																						"properties": {
																							"position": [
																								0.0000504505987919401,
																								-0.178965002298355,
																								-0.000296690006507561
																							],
																							"shape": "res://scenes/3d/MainScreen.tscn::BoxShape3D_picoh"
																						},
																						"script": "",
																						"type": "CollisionShape3D"
																					}
																				],
																				"groups": [],
																				"name": "InputShield_StaticBody",
																				"properties": {
																					"position": [
																						0.0,
																						0.0,
																						0.00100000004749745
																					]
																				},
																				"script": "",
																				"type": "StaticBody3D"
																			}
																		],
																		"groups": [],
																		"name": "MainScreen",
																		"properties": {
																			"mesh": "res://scenes/3d/MainScreen.tscn::ArrayMesh_picoh",
																			"position": [
																				0.0,
																				0.0129289999604225,
																				-0.0777985975146294
																			],
																			"rotation": [
																				0.0,
																				-3.14159274101257,
																				0.0
																			],
																			"scale": [
																				-6.7805700302124,
																				-0.0969522967934608,
																				-4.20753002166748
																			],
																			"script": "res://scripts/3d/MainScreen3DController.gd",
																			"skeleton": "",
																			"surface_material_override/0": "<ShaderMaterial#-9223368710285080418>"
																		},
																		"script": "res://scripts/3d/MainScreen3DController.gd",
																		"type": "MeshInstance3D"
																	}
																],
																"groups": [],
																"name": "console",
																"properties": {

																},
																"script": "",
																"type": "Node3D"
															}
														],
														"groups": [],
														"name": "MainScreen3D",
														"properties": {

														},
														"script": "",
														"type": "Node3D"
													},
													{
														"children": [
															{
																"children": [
																	{
																		"children": [
																			{
																				"children": [
																					{
																						"children": [
																							{
																								"children": [],
																								"groups": [],
																								"name": "EnemyInfoBottomLeftLabel",
																								"properties": {
																									"layout_mode": 1,
																									"position": [
																										35.0,
																										50.0
																									],
																									"scale": [
																										0.600000023841858,
																										1.0
																									],
																									"scroll_active": false,
																									"size": [
																										700.0,
																										450.0
																									],
																									"text": "InternalInternalInternalInternalInternal",
																									"theme_override_colors/default_color": [
																										0.0,
																										0.0,
																										0.0,
																										1.0
																									],
																									"theme_override_colors/font_shadow_color": [
																										0.0,
																										0.0,
																										0.0,
																										1.0
																									],
																									"theme_override_constants/shadow_offset_y": 5,
																									"theme_override_font_sizes/normal_font_size": 70,
																									"theme_override_fonts/normal_font": "res://art/fonts/MatrixTypeDisplay-Bold.ttf",
																									"vertical_alignment": 1
																								},
																								"script": "",
																								"type": "RichTextLabel"
																							}
																						],
																						"groups": [],
																						"name": "Panel",
																						"properties": {
																							"position": [
																								512.0,
																								0.0
																							],
																							"rotation": 1.57079994678497,
																							"size": [
																								512.0,
																								512.0
																							],
																							"theme_override_styles/panel": "res://scenes/3d/InfoScreens.tscn::StyleBoxTexture_picoh"
																						},
																						"script": "",
																						"type": "Panel"
																					}
																				],
																				"groups": [],
																				"name": "LogViewport",
																				"properties": {

																				},
																				"script": "",
																				"type": "SubViewport"
																			}
																		],
																		"groups": [],
																		"name": "EnemyInfoScreen_BottomLeft",
																		"properties": {
																			"mesh": "res://scenes/3d/InfoScreens.tscn::ArrayMesh_gtbua",
																			"position": [
																				0.0,
																				0.0266105998307467,
																				0.0
																			],
																			"scale": [
																				11.013500213623,
																				0.0658802017569542,
																				6.18556022644043
																			],
																			"skeleton": "",
																			"surface_material_override/0": "<ShaderMaterial#-9223368709093898047>"
																		},
																		"script": "",
																		"type": "MeshInstance3D"
																	},
																	{
																		"children": [
																			{
																				"children": [
																					{
																						"children": [
																							{
																								"children": [],
																								"groups": [],
																								"name": "EnemyInfoBottomRightLabel",
																								"properties": {
																									"layout_mode": 1,
																									"position": [
																										35.0,
																										50.0
																									],
																									"scale": [
																										0.600000023841858,
																										1.0
																									],
																									"scroll_active": false,
																									"size": [
																										700.0,
																										450.0
																									],
																									"text": "InternalInternalInternalInternalInternal",
																									"theme_override_colors/default_color": [
																										0.0,
																										0.0,
																										0.0,
																										1.0
																									],
																									"theme_override_colors/font_shadow_color": [
																										0.0,
																										0.0,
																										0.0,
																										1.0
																									],
																									"theme_override_constants/shadow_offset_y": 5,
																									"theme_override_font_sizes/normal_font_size": 70,
																									"theme_override_fonts/normal_font": "res://art/fonts/MatrixTypeDisplay-Bold.ttf",
																									"vertical_alignment": 1
																								},
																								"script": "",
																								"type": "RichTextLabel"
																							}
																						],
																						"groups": [],
																						"name": "Panel",
																						"properties": {
																							"position": [
																								512.0,
																								0.0
																							],
																							"rotation": 1.57079994678497,
																							"size": [
																								512.0,
																								512.0
																							],
																							"theme_override_styles/panel": "res://scenes/3d/InfoScreens.tscn::StyleBoxTexture_picoh"
																						},
																						"script": "",
																						"type": "Panel"
																					}
																				],
																				"groups": [],
																				"name": "LogViewport",
																				"properties": {

																				},
																				"script": "",
																				"type": "SubViewport"
																			}
																		],
																		"groups": [],
																		"name": "EnemyInfoScreen_BottomRight",
																		"properties": {
																			"mesh": "<ArrayMesh#-9223368708808685362>",
																			"position": [
																				0.0,
																				0.0266105998307467,
																				0.0
																			],
																			"scale": [
																				11.013500213623,
																				0.0658802017569542,
																				6.18556022644043
																			],
																			"skeleton": "",
																			"surface_material_override/0": "<ShaderMaterial#-9223368708221482801>"
																		},
																		"script": "",
																		"type": "MeshInstance3D"
																	},
																	{
																		"children": [
																			{
																				"children": [
																					{
																						"children": [
																							{
																								"children": [],
																								"groups": [],
																								"name": "EnemyInfoTopLeftLabel",
																								"properties": {
																									"layout_mode": 1,
																									"position": [
																										35.0,
																										50.0
																									],
																									"scale": [
																										0.600000023841858,
																										1.0
																									],
																									"scroll_active": false,
																									"size": [
																										700.0,
																										450.0
																									],
																									"text": "InternalInternalInternalInternalInternal",
																									"theme_override_colors/default_color": [
																										0.0,
																										0.0,
																										0.0,
																										1.0
																									],
																									"theme_override_colors/font_shadow_color": [
																										0.0,
																										0.0,
																										0.0,
																										1.0
																									],
																									"theme_override_constants/shadow_offset_y": 5,
																									"theme_override_font_sizes/normal_font_size": 70,
																									"theme_override_fonts/normal_font": "res://art/fonts/MatrixTypeDisplay-Bold.ttf",
																									"vertical_alignment": 1
																								},
																								"script": "",
																								"type": "RichTextLabel"
																							}
																						],
																						"groups": [],
																						"name": "Panel",
																						"properties": {
																							"position": [
																								512.0,
																								0.0
																							],
																							"rotation": 1.57079994678497,
																							"size": [
																								512.0,
																								512.0
																							],
																							"theme_override_styles/panel": "res://scenes/3d/InfoScreens.tscn::StyleBoxTexture_picoh"
																						},
																						"script": "",
																						"type": "Panel"
																					}
																				],
																				"groups": [],
																				"name": "LogViewport",
																				"properties": {

																				},
																				"script": "",
																				"type": "SubViewport"
																			}
																		],
																		"groups": [],
																		"name": "EnemyInfoScreen_TopLeft",
																		"properties": {
																			"mesh": "res://scenes/3d/InfoScreens.tscn::ArrayMesh_hu2oy",
																			"position": [
																				0.0,
																				0.0266105998307467,
																				0.0
																			],
																			"scale": [
																				11.013500213623,
																				0.0658802017569542,
																				6.18556022644043
																			],
																			"skeleton": "",
																			"surface_material_override/0": "<ShaderMaterial#-9223368707365844772>"
																		},
																		"script": "",
																		"type": "MeshInstance3D"
																	},
																	{
																		"children": [
																			{
																				"children": [
																					{
																						"children": [
																							{
																								"children": [],
																								"groups": [],
																								"name": "EnemyInfoTopRightLabel",
																								"properties": {
																									"layout_mode": 1,
																									"position": [
																										35.0,
																										50.0
																									],
																									"scale": [
																										0.600000023841858,
																										1.0
																									],
																									"scroll_active": false,
																									"size": [
																										700.0,
																										450.0
																									],
																									"text": "InternalInternalInternalInternalInternal",
																									"theme_override_colors/default_color": [
																										0.0,
																										0.0,
																										0.0,
																										1.0
																									],
																									"theme_override_colors/font_shadow_color": [
																										0.0,
																										0.0,
																										0.0,
																										1.0
																									],
																									"theme_override_constants/shadow_offset_y": 5,
																									"theme_override_font_sizes/normal_font_size": 70,
																									"theme_override_fonts/normal_font": "res://art/fonts/MatrixTypeDisplay-Bold.ttf",
																									"vertical_alignment": 1
																								},
																								"script": "",
																								"type": "RichTextLabel"
																							}
																						],
																						"groups": [],
																						"name": "Panel",
																						"properties": {
																							"position": [
																								512.0,
																								0.0
																							],
																							"rotation": 1.57079994678497,
																							"size": [
																								512.0,
																								512.0
																							],
																							"theme_override_styles/panel": "res://scenes/3d/InfoScreens.tscn::StyleBoxTexture_picoh"
																						},
																						"script": "",
																						"type": "Panel"
																					}
																				],
																				"groups": [],
																				"name": "LogViewport",
																				"properties": {

																				},
																				"script": "",
																				"type": "SubViewport"
																			}
																		],
																		"groups": [],
																		"name": "EnemyInfoScreen_TopRight",
																		"properties": {
																			"mesh": "res://scenes/3d/InfoScreens.tscn::ArrayMesh_jn7jt",
																			"position": [
																				0.0,
																				0.0266105998307467,
																				0.0
																			],
																			"scale": [
																				11.013500213623,
																				0.0658802017569542,
																				6.18556022644043
																			],
																			"skeleton": "",
																			"surface_material_override/0": "<ShaderMaterial#-9223368706510206743>"
																		},
																		"script": "",
																		"type": "MeshInstance3D"
																	},
																	{
																		"children": [],
																		"groups": [],
																		"name": "EnemyInfoScreensGlass",
																		"properties": {
																			"mesh": "res://scenes/3d/InfoScreens.tscn::ArrayMesh_e7c38",
																			"position": [
																				0.0,
																				0.0294032990932465,
																				0.0
																			],
																			"scale": [
																				11.013500213623,
																				0.0658802017569542,
																				6.18556022644043
																			],
																			"skeleton": "",
																			"surface_material_override/0": "<Object#null>"
																		},
																		"script": "",
																		"type": "MeshInstance3D"
																	},
																	{
																		"children": [
																			{
																				"children": [
																					{
																						"children": [
																							{
																								"children": [],
																								"groups": [],
																								"name": "GameLogLabel",
																								"properties": {
																									"layout_mode": 1,
																									"position": [
																										210.0,
																										10.0
																									],
																									"rotation": 1.57079994678497,
																									"scroll_active": false,
																									"size": [
																										575.0,
																										200.0
																									],
																									"text": "Internal Test\nInternal Test\nInternal Test\nInternal Test\nInternal Test\nInternal Test\nInternal Test\nInternal Test\nInternal Test\nInternal Test\nInternal Test\nInternal Test",
																									"theme_override_colors/default_color": [
																										0.0,
																										0.0,
																										0.0,
																										1.0
																									],
																									"theme_override_colors/font_shadow_color": [
																										0.0,
																										0.0,
																										0.0,
																										1.0
																									],
																									"theme_override_font_sizes/normal_font_size": 16,
																									"theme_override_fonts/normal_font": "res://art/fonts/MatrixTypeDisplay-Regular.ttf"
																								},
																								"script": "",
																								"type": "RichTextLabel"
																							}
																						],
																						"groups": [],
																						"name": "Panel",
																						"properties": {
																							"size": [
																								220.0,
																								575.0
																							],
																							"theme_override_styles/panel": "<StyleBoxTexture#-9223368705419687679>"
																						},
																						"script": "",
																						"type": "Panel"
																					}
																				],
																				"groups": [],
																				"name": "LogViewport",
																				"properties": {
																					"size": "(285, 575)"
																				},
																				"script": "",
																				"type": "SubViewport"
																			}
																		],
																		"groups": [],
																		"name": "GameLogScreen",
																		"properties": {
																			"mesh": "<ArrayMesh#-9223368706208216841>",
																			"position": [
																				0.0,
																				0.0266105998307467,
																				0.0
																			],
																			"rotation_order": 0,
																			"scale": [
																				11.013500213623,
																				0.0658802017569542,
																				6.18556022644043
																			],
																			"skeleton": "",
																			"surface_material_override/0": "<ShaderMaterial#-9223368705604237063>"
																		},
																		"script": "",
																		"type": "MeshInstance3D"
																	},
																	{
																		"children": [
																			{
																				"children": [
																					{
																						"children": [
																							{
																								"children": [],
																								"groups": [],
																								"name": "PlayerInfoLabel",
																								"properties": {
																									"custom_minimum_size": [
																										500.0,
																										500.0
																									],
																									"layout_mode": 1,
																									"position": [
																										470.0,
																										30.0
																									],
																									"rotation": 1.57079994678497,
																									"scale": [
																										0.600000023841858,
																										1.0
																									],
																									"scroll_active": false,
																									"size": [
																										500.0,
																										500.0
																									],
																									"text": "Internal\nInternal\nInternal\nInternal",
																									"theme_override_colors/default_color": [
																										0.0,
																										0.0,
																										0.0,
																										1.0
																									],
																									"theme_override_colors/font_shadow_color": [
																										0.0,
																										0.0,
																										0.0,
																										1.0
																									],
																									"theme_override_font_sizes/normal_font_size": 50,
																									"theme_override_fonts/normal_font": "res://art/fonts/MatrixTypeDisplay-Regular.ttf"
																								},
																								"script": "",
																								"type": "RichTextLabel"
																							}
																						],
																						"groups": [],
																						"name": "Panel",
																						"properties": {
																							"position": [
																								390.0,
																								0.0
																							],
																							"rotation": 1.57079994678497,
																							"size": [
																								512.0,
																								512.0
																							],
																							"theme_override_styles/panel": "res://scenes/3d/InfoScreens.tscn::StyleBoxTexture_picoh"
																						},
																						"script": "",
																						"type": "Panel"
																					}
																				],
																				"groups": [],
																				"name": "LogViewport",
																				"properties": {

																				},
																				"script": "",
																				"type": "SubViewport"
																			}
																		],
																		"groups": [],
																		"name": "PlayerInfoScreen",
																		"properties": {
																			"mesh": "<ArrayMesh#-9223368705067366124>",
																			"position": [
																				0.0,
																				0.0266105998307467,
																				0.0
																			],
																			"scale": [
																				11.013500213623,
																				0.0658802017569542,
																				6.18556022644043
																			],
																			"skeleton": "",
																			"surface_material_override/0": "<Object#null>"
																		},
																		"script": "",
																		"type": "MeshInstance3D"
																	},
																	{
																		"children": [],
																		"groups": [],
																		"name": "DEFCONStatus",
																		"properties": {
																			"mesh": "res://scenes/3d/InfoScreens.tscn::ArrayMesh_0if53",
																			"position": [
																				-0.360617011785507,
																				0.0308532994240522,
																				0.219675004482269
																			],
																			"rotation": [
																				1.57079637050629,
																				0.0,
																				0.0
																			],
																			"scale": [
																				0.470079988241196,
																				0.470079988241196,
																				0.470079988241196
																			],
																			"skeleton": "",
																			"surface_material_override/0": "<Object#null>"
																		},
																		"script": "",
																		"type": "MeshInstance3D"
																	}
																],
																"groups": [],
																"name": "console",
																"properties": {

																},
																"script": "",
																"type": "Node3D"
															}
														],
														"groups": [],
														"name": "InfoScreens",
														"properties": {

														},
														"script": "",
														"type": "Node3D"
													},
													{
														"children": [
															{
																"children": [
																	{
																		"children": [
																			{
																				"children": [
																					{
																						"children": [],
																						"groups": [],
																						"name": "AvatarImage_BottomLeft",
																						"properties": {
																							"anchors_preset": 15,
																							"flip_v": true,
																							"position": [
																								72.5,
																								115.0
																							],
																							"scale": [
																								0.232999995350838,
																								0.310000002384186
																							],
																							"stretch_mode": 5
																						},
																						"script": "",
																						"type": "TextureRect"
																					}
																				],
																				"groups": [],
																				"name": "SubViewport",
																				"properties": {
																					"transparent_bg": true
																				},
																				"script": "",
																				"type": "SubViewport"
																			}
																		],
																		"groups": [],
																		"name": "EnemyAvatarScreen_BottomLeft",
																		"properties": {
																			"mesh": "res://scenes/3d/AvatarScreens.tscn::ArrayMesh_qht4b",
																			"position": [
																				0.000684947008267045,
																				0.0277525000274181,
																				-0.116474002599716
																			],
																			"scale": [
																				0.927972018718719,
																				0.181508004665375,
																				0.730261981487274
																			],
																			"skeleton": "",
																			"surface_material_override/0": "<StandardMaterial3D#-9223368704094287576>"
																		},
																		"script": "",
																		"type": "MeshInstance3D"
																	},
																	{
																		"children": [
																			{
																				"children": [
																					{
																						"children": [],
																						"groups": [],
																						"name": "AvatarImage_BottomRight",
																						"properties": {
																							"anchors_preset": 15,
																							"flip_v": true,
																							"position": [
																								72.5,
																								115.0
																							],
																							"scale": [
																								0.232999995350838,
																								0.310000002384186
																							],
																							"stretch_mode": 5
																						},
																						"script": "",
																						"type": "TextureRect"
																					}
																				],
																				"groups": [],
																				"name": "SubViewport",
																				"properties": {
																					"transparent_bg": true
																				},
																				"script": "",
																				"type": "SubViewport"
																			}
																		],
																		"groups": [],
																		"name": "EnemyAvatarScreen_BottomRight",
																		"properties": {
																			"mesh": "res://scenes/3d/AvatarScreens.tscn::ArrayMesh_wtkkl",
																			"position": [
																				0.000684947008267045,
																				0.0277525000274181,
																				-0.116474002599716
																			],
																			"scale": [
																				0.927972018718719,
																				0.181508004665375,
																				0.730261981487274
																			],
																			"skeleton": "",
																			"surface_material_override/0": "<StandardMaterial3D#-9223368703892960975>"
																		},
																		"script": "",
																		"type": "MeshInstance3D"
																	},
																	{
																		"children": [
																			{
																				"children": [
																					{
																						"children": [],
																						"groups": [],
																						"name": "AvatarImage_TopLeft",
																						"properties": {
																							"anchors_preset": 15,
																							"flip_v": true,
																							"position": [
																								72.5,
																								115.0
																							],
																							"scale": [
																								0.232999995350838,
																								0.310000002384186
																							],
																							"stretch_mode": 5
																						},
																						"script": "",
																						"type": "TextureRect"
																					}
																				],
																				"groups": [],
																				"name": "SubViewport",
																				"properties": {
																					"transparent_bg": true
																				},
																				"script": "",
																				"type": "SubViewport"
																			}
																		],
																		"groups": [],
																		"name": "EnemyAvatarScreen_TopLeft",
																		"properties": {
																			"mesh": "res://scenes/3d/AvatarScreens.tscn::ArrayMesh_ff3a4",
																			"position": [
																				0.000684947008267045,
																				0.0277525000274181,
																				-0.116474002599716
																			],
																			"scale": [
																				0.927972018718719,
																				0.181508004665375,
																				0.730261981487274
																			],
																			"skeleton": "",
																			"surface_material_override/0": "<StandardMaterial3D#-9223368703725188807>"
																		},
																		"script": "",
																		"type": "MeshInstance3D"
																	},
																	{
																		"children": [
																			{
																				"children": [
																					{
																						"children": [],
																						"groups": [],
																						"name": "AvatarImage_TopRight",
																						"properties": {
																							"anchors_preset": 15,
																							"flip_v": true,
																							"position": [
																								72.5,
																								115.0
																							],
																							"scale": [
																								0.232999995350838,
																								0.310000002384186
																							],
																							"stretch_mode": 5
																						},
																						"script": "",
																						"type": "TextureRect"
																					}
																				],
																				"groups": [],
																				"name": "SubViewport",
																				"properties": {
																					"handle_input_locally": false,
																					"transparent_bg": true
																				},
																				"script": "",
																				"type": "SubViewport"
																			}
																		],
																		"groups": [],
																		"name": "EnemyAvatarScreen_TopRight",
																		"properties": {
																			"mesh": "res://scenes/3d/AvatarScreens.tscn::ArrayMesh_o7vyu",
																			"position": [
																				0.000684947008267045,
																				0.0277525000274181,
																				-0.116474002599716
																			],
																			"scale": [
																				0.927972018718719,
																				0.181508004665375,
																				0.730261981487274
																			],
																			"skeleton": "",
																			"surface_material_override/0": "<StandardMaterial3D#-9223368703557416639>"
																		},
																		"script": "",
																		"type": "MeshInstance3D"
																	},
																	{
																		"children": [],
																		"groups": [],
																		"name": "EnemyAvatarScreenGlass",
																		"properties": {
																			"mesh": "res://scenes/3d/AvatarScreens.tscn::ArrayMesh_ar3b6",
																			"position": [
																				0.000709593005012721,
																				0.0314780995249748,
																				-0.116499997675419
																			],
																			"scale": [
																				0.927972018718719,
																				0.181508004665375,
																				0.730261981487274
																			],
																			"skeleton": "",
																			"surface_material_override/0": "<Object#null>"
																		},
																		"script": "",
																		"type": "MeshInstance3D"
																	}
																],
																"groups": [],
																"name": "console",
																"properties": {

																},
																"script": "",
																"type": "Node3D"
															}
														],
														"groups": [],
														"name": "AvatarScreens",
														"properties": {

														},
														"script": "",
														"type": "Node3D"
													}
												],
												"groups": [],
												"name": "console",
												"properties": {

												},
												"script": "",
												"type": "Node3D"
											},
											{
												"children": [],
												"groups": [],
												"name": "Camera3D",
												"properties": {
													"fov": 35.0,
													"position": [
														0.0,
														1.0,
														0.0
													],
													"rotation": [
														-1.57079637050629,
														0.0,
														0.0
													],
													"script": "res://scripts/3d/InteractionController.gd"
												},
												"script": "res://scripts/3d/InteractionController.gd",
												"type": "Camera3D"
											},
											{
												"children": [],
												"groups": [],
												"name": "WorldEnvironment",
												"properties": {
													"environment": "<Environment#-9223368703339312820>"
												},
												"script": "",
												"type": "WorldEnvironment"
											},
											{
												"children": [],
												"groups": [],
												"name": "SpotLight3D",
												"properties": {
													"light_color": [
														1.0,
														0.94651198387146,
														0.84258097410202,
														1.0
													],
													"light_energy": 5.0,
													"light_indirect_energy": 0.0,
													"light_size": 0.791000008583069,
													"light_specular": 1.8639999628067,
													"position": [
														0.0,
														1.21806001663208,
														-2.42370009422302
													],
													"rotation": [
														-2.71789717674255,
														0.0,
														0.0
													],
													"shadow_enabled": true,
													"spot_angle": 15.0823001861572,
													"spot_angle_attenuation": 0.659753978252411,
													"spot_attenuation": 1.3400000333786,
													"spot_range": 4.56400012969971
												},
												"script": "",
												"type": "SpotLight3D"
											},
											{
												"children": [],
												"groups": [],
												"name": "OmniLight3D",
												"properties": {
													"omni_range": 1.39999997615814,
													"position": [
														-1.12276995182037,
														0.350142002105713,
														-0.11871100217104
													]
												},
												"script": "",
												"type": "OmniLight3D"
											},
											{
												"children": [],
												"groups": [],
												"name": "OmniLight3D2",
												"properties": {
													"omni_range": 1.39999997615814,
													"position": [
														1.09184002876282,
														0.350142002105713,
														-0.11871100217104
													]
												},
												"script": "",
												"type": "OmniLight3D"
											},
											{
												"children": [],
												"groups": [],
												"name": "OmniLight3D3",
												"properties": {
													"light_energy": 0.5,
													"position": [
														-0.000057339701015735,
														0.810835003852844,
														1.08393001556396
													]
												},
												"script": "",
												"type": "OmniLight3D"
											}
										],
										"groups": [],
										"name": "Console3D",
										"properties": {
											"script": "res://scenes/3d/ConsoleController.gd"
										},
										"script": "res://scenes/3d/ConsoleController.gd",
										"type": "Node3D"
									}
								],
								"groups": [],
								"name": "SubViewport",
								"properties": {
									"handle_input_locally": false,
									"render_target_update_mode": 4,
									"size": "(1920, 1080)"
								},
								"script": "",
								"type": "SubViewport"
							}
						],
						"groups": [],
						"name": "SubViewportContainer",
						"properties": {
							"anchors_preset": 15,
							"mouse_filter": 2,
							"size": [
								1920.0,
								1080.0
							],
							"stretch": true
						},
						"script": "",
						"type": "SubViewportContainer"
					}
				],
				"groups": [],
				"name": "Main",
				"properties": {
					"script": "res://main_controller.gd"
				},
				"script": "res://main_controller.gd",
				"type": "Node2D"
			}
		}
	],
	"scripts": [
		{
			"content": "@tool\nextends RefCounted\n\nfunc export_project_structure() -> bool:\n\tvar output = {\n\t\t\"project_name\": ProjectSettings.get_setting(\"application/config/name\", \"Unknown\"),\n\t\t\"generated_timestamp\": Time.get_datetime_string_from_system(),\n\t\t\"scenes\": [],\n\t\t\"scripts\": [],\n\t\t\"autoloads\": {},\n\t\t\"project_settings\": get_relevant_project_settings()\n\t}\n\t\n\t# Get all scene files\n\tvar scene_files = find_files_recursive(\"res://\", \"tscn\")\n\tvar total_files = scene_files.size()\n\t\n\tprint(\"AI Context Generator: Found %d scenes to process...\" % total_files)\n\t\n\t# Process each scene\n\tfor i in range(scene_files.size()):\n\t\tvar scene_path = scene_files[i]\n\t\t\n\t\tprint(\"AI Context Generator: Processing scene %d/%d: %s\" % [i+1, total_files, scene_path.get_file()])\n\t\t\n\t\tvar scene_data = parse_scene_structure(scene_path)\n\t\tif scene_data:\n\t\t\toutput.scenes.append(scene_data)\n\t\n\t# Get all script files\n\tvar script_files = find_files_recursive(\"res://\", \"gd\")\n\tscript_files.append_array(find_files_recursive(\"res://\", \"cs\"))\n\t\n\tprint(\"AI Context Generator: Processing %d scripts...\" % script_files.size())\n\t\n\t# Process each script\n\tfor i in range(script_files.size()):\n\t\tvar script_path = script_files[i]\n\t\t\n\t\tvar script_data = extract_script_info(script_path)\n\t\tif script_data:\n\t\t\toutput.scripts.append(script_data)\n\t\n\t# Get autoloads\n\toutput.autoloads = get_autoloads()\n\t\n\t# Save to file\n\tvar json_string = JSON.stringify(output, \"\\t\")\n\tvar file = FileAccess.open(\"res://ai_context_export.json\", FileAccess.WRITE)\n\t\n\tif file:\n\t\tfile.store_string(json_string)\n\t\tfile.close()\n\t\t\n\t\t# Copy to clipboard\n\t\tDisplayServer.clipboard_set(json_string)\n\t\t\n\t\tprint(\"AI Context Generator: Successfully generated ai_context_export.json\")\n\t\tprint(\"AI Context Generator: JSON data copied to clipboard!\")\n\t\treturn true\n\telse:\n\t\tprint(\"AI Context Generator: Failed to write export file\")\n\t\treturn false\n\nfunc find_files_recursive(path: String, extension: String) -> Array[String]:\n\tvar files: Array[String] = []\n\tvar dir = DirAccess.open(path)\n\t\n\tif dir:\n\t\tdir.list_dir_begin()\n\t\tvar file_name = dir.get_next()\n\t\t\n\t\twhile file_name != \"\":\n\t\t\tvar full_path = path + \"/\" + file_name\n\t\t\t\n\t\t\tif dir.current_is_dir() and not file_name.begins_with(\".\"):\n\t\t\t\tfiles.append_array(find_files_recursive(full_path, extension))\n\t\t\telif file_name.get_extension() == extension:\n\t\t\t\tfiles.append(full_path)\n\t\t\t\n\t\t\tfile_name = dir.get_next()\n\t\t\n\t\tdir.list_dir_end()\n\t\n\treturn files\n\nfunc parse_scene_structure(scene_path: String) -> Dictionary:\n\tvar scene = load(scene_path) as PackedScene\n\tif not scene:\n\t\treturn {}\n\t\n\tvar instance = scene.instantiate()\n\tif not instance:\n\t\treturn {}\n\t\n\tvar scene_data = {\n\t\t\"path\": scene_path,\n\t\t\"root_node\": parse_node_recursive(instance)\n\t}\n\t\n\tinstance.queue_free()\n\treturn scene_data\n\nfunc parse_node_recursive(node: Node) -> Dictionary:\n\tvar node_data = {\n\t\t\"name\": node.name,\n\t\t\"type\": node.get_class(),\n\t\t\"script\": \"\",\n\t\t\"properties\": {},\n\t\t\"groups\": [],\n\t\t\"children\": []\n\t}\n\t\n\t# Get script path if attached\n\tif node.get_script():\n\t\tnode_data.script = node.get_script().resource_path\n\t\n\t# Get non-default properties\n\tnode_data.properties = get_non_default_properties(node)\n\t\n\t# Get groups\n\tfor group in node.get_groups():\n\t\tnode_data.groups.append(group)\n\t\n\t# Process children\n\tfor child in node.get_children():\n\t\tnode_data.children.append(parse_node_recursive(child))\n\t\n\treturn node_data\n\nfunc get_non_default_properties(node: Node) -> Dictionary:\n\tvar properties = {}\n\t\n\t# Create a default instance of the same type for comparison\n\tvar default_node = null\n\tvar node_class = node.get_class()\n\t\n\t# Try to create default instance\n\tif ClassDB.can_instantiate(node_class):\n\t\tdefault_node = ClassDB.instantiate(node_class)\n\t\n\tif not default_node:\n\t\treturn properties\n\t\n\t# Get all properties\n\tvar property_list = node.get_property_list()\n\t\n\tfor prop in property_list:\n\t\t# Only include editor-visible properties that aren't built-in engine properties\n\t\tif (prop.usage & PROPERTY_USAGE_EDITOR) and not prop.name.begins_with(\"_\"):\n\t\t\tvar current_value = node.get(prop.name)\n\t\t\tvar default_value = default_node.get(prop.name)\n\t\t\t\n\t\t\t# Compare values (handle different types appropriately)\n\t\t\tif not values_equal(current_value, default_value):\n\t\t\t\tproperties[prop.name] = serialize_value(current_value)\n\t\n\tdefault_node.queue_free()\n\treturn properties\n\nfunc values_equal(a, b) -> bool:\n\t# Handle Vector2, Vector3, Color, etc.\n\tif typeof(a) != typeof(b):\n\t\treturn false\n\t\n\tif a is Vector2 or a is Vector3 or a is Vector4:\n\t\treturn a.is_equal_approx(b)\n\telif a is Color:\n\t\treturn a.is_equal_approx(b)\n\telse:\n\t\treturn a == b\n\nfunc serialize_value(value):\n\t# Convert complex types to serializable formats\n\tif value is Vector2:\n\t\treturn [value.x, value.y]\n\telif value is Vector3:\n\t\treturn [value.x, value.y, value.z]\n\telif value is Vector4:\n\t\treturn [value.x, value.y, value.z, value.w]\n\telif value is Color:\n\t\treturn [value.r, value.g, value.b, value.a]\n\telif value is Resource and value.resource_path != \"\":\n\t\treturn value.resource_path\n\telse:\n\t\treturn value\n\nfunc extract_script_info(script_path: String) -> Dictionary:\n\tvar file = FileAccess.open(script_path, FileAccess.READ)\n\tif not file:\n\t\treturn {}\n\t\n\tvar content = file.get_as_text()\n\tfile.close()\n\t\n\tvar script_data = {\n\t\t\"path\": script_path,\n\t\t\"language\": script_path.get_extension(),\n\t\t\"content\": content,\n\t\t\"exports\": extract_exported_variables(content),\n\t\t\"signals\": extract_signals(content),\n\t\t\"functions\": extract_functions(content)\n\t}\n\t\n\treturn script_data\n\nfunc extract_exported_variables(content: String) -> Array:\n\tvar exports = []\n\tvar lines = content.split(\"\\n\")\n\t\n\tfor line in lines:\n\t\tline = line.strip_edges()\n\t\tif line.begins_with(\"@export\"):\n\t\t\texports.append(line)\n\t\n\treturn exports\n\nfunc extract_signals(content: String) -> Array:\n\tvar signals = []\n\tvar lines = content.split(\"\\n\")\n\t\n\tfor line in lines:\n\t\tline = line.strip_edges()\n\t\tif line.begins_with(\"signal \"):\n\t\t\tsignals.append(line)\n\t\n\treturn signals\n\nfunc extract_functions(content: String) -> Array:\n\tvar functions = []\n\tvar lines = content.split(\"\\n\")\n\t\n\tfor line in lines:\n\t\tline = line.strip_edges()\n\t\tif line.begins_with(\"func \"):\n\t\t\tfunctions.append(line)\n\t\n\treturn functions\n\nfunc get_autoloads() -> Dictionary:\n\tvar autoloads = {}\n\t\n\t# Get autoload settings from project settings\n\tvar settings = ProjectSettings.get_property_list()\n\t\n\tfor setting in settings:\n\t\tif setting.name.begins_with(\"autoload/\"):\n\t\t\tvar autoload_name = setting.name.substr(9)  # Remove \"autoload/\" prefix\n\t\t\tvar autoload_path = ProjectSettings.get_setting(setting.name)\n\t\t\tautoloads[autoload_name] = autoload_path\n\t\n\treturn autoloads\n\nfunc get_relevant_project_settings() -> Dictionary:\n\tvar settings = {\n\t\t\"application\": {},\n\t\t\"display\": {},\n\t\t\"input\": {},\n\t\t\"physics\": {},\n\t\t\"rendering\": {}\n\t}\n\t\n\t# Application settings\n\tsettings.application[\"name\"] = ProjectSettings.get_setting(\"application/config/name\", \"\")\n\tsettings.application[\"description\"] = ProjectSettings.get_setting(\"application/config/description\", \"\")\n\tsettings.application[\"main_scene\"] = ProjectSettings.get_setting(\"application/run/main_scene\", \"\")\n\t\n\t# Display settings\n\tsettings.display[\"width\"] = ProjectSettings.get_setting(\"display/window/size/viewport_width\", 0)\n\tsettings.display[\"height\"] = ProjectSettings.get_setting(\"display/window/size/viewport_height\", 0)\n\t\n\t# Input map\n\tvar input_map = {}\n\tfor action in InputMap.get_actions():\n\t\tinput_map[action] = []\n\t\tfor event in InputMap.action_get_events(action):\n\t\t\tinput_map[action].append(str(event))\n\tsettings.input[\"map\"] = input_map\n\t\n\treturn settings\n",
			"exports": [],
			"functions": [
				"func export_project_structure() -> bool:",
				"func find_files_recursive(path: String, extension: String) -> Array[String]:",
				"func parse_scene_structure(scene_path: String) -> Dictionary:",
				"func parse_node_recursive(node: Node) -> Dictionary:",
				"func get_non_default_properties(node: Node) -> Dictionary:",
				"func values_equal(a, b) -> bool:",
				"func serialize_value(value):",
				"func extract_script_info(script_path: String) -> Dictionary:",
				"func extract_exported_variables(content: String) -> Array:",
				"func extract_signals(content: String) -> Array:",
				"func extract_functions(content: String) -> Array:",
				"func get_autoloads() -> Dictionary:",
				"func get_relevant_project_settings() -> Dictionary:"
			],
			"language": "gd",
			"path": "res:///addons/ai_context_generator/ai_context_generator.gd",
			"signals": []
		},
		{
			"content": "@tool\nextends EditorPlugin\n\nconst AIContextGenerator = preload(\"res://addons/ai_context_generator/ai_context_generator.gd\")\n\nfunc _enter_tree():\n\t# Add a simple menu item to the Project menu\n\tadd_tool_menu_item(\"Generate AI Context\", _on_generate_context)\n\nfunc _exit_tree():\n\t# Clean up\n\tremove_tool_menu_item(\"Generate AI Context\")\n\nfunc _on_generate_context():\n\tvar generator = AIContextGenerator.new()\n\tgenerator.export_project_structure()\n",
			"exports": [],
			"functions": [
				"func _enter_tree():",
				"func _exit_tree():",
				"func _on_generate_context():"
			],
			"language": "gd",
			"path": "res:///addons/ai_context_generator/plugin.gd",
			"signals": []
		},
		{
			"content": "@tool\n@icon(\"res://addons/crt/icon.svg\")\nclass_name CRT\nextends CanvasLayer\n\n# Material and update control\nvar material: ShaderMaterial\n@export var update_in_editor: bool = true:\n\tset(value):\n\t\tupdate_in_editor = value\n\t\tif _should_update():\n\t\t\tvisible = true\n\t\telse:\n\t\t\tvisible = false\n\n# Base resolution for pixel-perfect effects\n@export var resolution: Vector2 = Vector2(320.0, 180.0):\n\tset(value):\n\t\tresolution = value\n\t\t_set_shader_param(\"resolution\", resolution)\n\n# Scanline effect\n@export_range(0.0, 1.0) var scan_line_amount: float = 1.0:\n\tset(value):\n\t\tscan_line_amount = value\n\t\t_set_shader_param(\"scan_line_amount\", value)\n\n@export_range(-12.0, -1.0) var scan_line_strength: float = -8.0:\n\tset(value):\n\t\tscan_line_strength = value\n\t\t_set_shader_param(\"scan_line_strength\", value)\n\n# Screen curvature/warp effect\n@export_range(0.0, 5.0) var warp_amount: float = 0.1:\n\tset(value):\n\t\twarp_amount = value\n\t\t_set_shader_param(\"warp_amount\", value)\n\n# Visual noise/interference\n@export_range(0.0, 0.3) var noise_amount: float = 0.03:\n\tset(value):\n\t\tnoise_amount = value\n\t\t_set_shader_param(\"noise_amount\", value)\n\n@export_range(0.0, 1.0) var interference_amount: float = 0.2:\n\tset(value):\n\t\tinterference_amount = value\n\t\t_set_shader_param(\"interference_amount\", value)\n\n# Shadow mask/grille\n@export_range(0.0, 1.0) var grille_amount: float = 0.1:\n\tset(value):\n\t\tgrille_amount = value\n\t\t_set_shader_param(\"grille_amount\", value)\n\n@export_range(1.0, 5.0) var grille_size: float = 1.0:\n\tset(value):\n\t\tgrille_size = value\n\t\t_set_shader_param(\"grille_size\", value)\n\n# Vignette\n@export_range(0.0, 2.0) var vignette_amount: float = 0.6:\n\tset(value):\n\t\tvignette_amount = value\n\t\t_set_shader_param(\"vignette_amount\", value)\n\n@export_range(0.0, 1.0) var vignette_intensity: float = 0.4:\n\tset(value):\n\t\tvignette_intensity = value\n\t\t_set_shader_param(\"vignette_intensity\", value)\n\n# Chromatic aberration\n@export_range(0.0, 1.0) var aberation_amount: float = 0.5:\n\tset(value):\n\t\taberation_amount = value\n\t\t_set_shader_param(\"aberation_amount\", value)\n\n# Rolling line effect\n@export_range(0.0, 1.0) var roll_line_amount: float = 0.3:\n\tset(value):\n\t\troll_line_amount = value\n\t\t_set_shader_param(\"roll_line_amount\", value)\n\n@export_range(-8.0, 8.0) var roll_speed: float = 1.0:\n\tset(value):\n\t\troll_speed = value\n\t\t_set_shader_param(\"roll_speed\", value)\n\n# Pixel sharpness/softness\n@export_range(-4.0, 0.0) var pixel_strength: float = -2.0:\n\tset(value):\n\t\tpixel_strength = value\n\t\t_set_shader_param(\"pixel_strength\", value)\n\n\nfunc _ready() -> void:\n\tvar color_rect = ColorRect.new()\n\tcolor_rect.color = Color.WHITE\n\tcolor_rect.set_anchors_preset(Control.PRESET_FULL_RECT)\n\n\tmaterial = ShaderMaterial.new()\n\tmaterial.shader = load(\"res://addons/crt/crt.gdshader\")\n\n\t# Initialize all shader parameters\n\t_set_shader_param(\"resolution\", resolution)\n\t_set_shader_param(\"scan_line_amount\", scan_line_amount)\n\t_set_shader_param(\"scan_line_strength\", scan_line_strength)\n\t_set_shader_param(\"warp_amount\", warp_amount)\n\t_set_shader_param(\"noise_amount\", noise_amount)\n\t_set_shader_param(\"interference_amount\", interference_amount)\n\t_set_shader_param(\"grille_amount\", grille_amount)\n\t_set_shader_param(\"grille_size\", grille_size)\n\t_set_shader_param(\"vignette_amount\", vignette_amount)\n\t_set_shader_param(\"vignette_intensity\", vignette_intensity)\n\t_set_shader_param(\"aberation_amount\", aberation_amount)\n\t_set_shader_param(\"roll_line_amount\", roll_line_amount)\n\t_set_shader_param(\"roll_speed\", roll_speed)\n\t_set_shader_param(\"pixel_strength\", pixel_strength)\n\n\tcolor_rect.material = material\n\tadd_child(color_rect)\n\tif _should_update():\n\t\tvisible = true\n\telse:\n\t\tvisible = false\n\n\n# Helper function to safely set shader parameters\nfunc _set_shader_param(param_name: String, value) -> void:\n\tif material:\n\t\tmaterial.set_shader_parameter(param_name, value)\n\n\nfunc _should_update() -> bool:\n\tif Engine.is_editor_hint():\n\t\treturn update_in_editor\n\treturn true\n",
			"exports": [
				"@export var update_in_editor: bool = true:",
				"@export var resolution: Vector2 = Vector2(320.0, 180.0):",
				"@export_range(0.0, 1.0) var scan_line_amount: float = 1.0:",
				"@export_range(-12.0, -1.0) var scan_line_strength: float = -8.0:",
				"@export_range(0.0, 5.0) var warp_amount: float = 0.1:",
				"@export_range(0.0, 0.3) var noise_amount: float = 0.03:",
				"@export_range(0.0, 1.0) var interference_amount: float = 0.2:",
				"@export_range(0.0, 1.0) var grille_amount: float = 0.1:",
				"@export_range(1.0, 5.0) var grille_size: float = 1.0:",
				"@export_range(0.0, 2.0) var vignette_amount: float = 0.6:",
				"@export_range(0.0, 1.0) var vignette_intensity: float = 0.4:",
				"@export_range(0.0, 1.0) var aberation_amount: float = 0.5:",
				"@export_range(0.0, 1.0) var roll_line_amount: float = 0.3:",
				"@export_range(-8.0, 8.0) var roll_speed: float = 1.0:",
				"@export_range(-4.0, 0.0) var pixel_strength: float = -2.0:"
			],
			"functions": [
				"func _ready() -> void:",
				"func _set_shader_param(param_name: String, value) -> void:",
				"func _should_update() -> bool:"
			],
			"language": "gd",
			"path": "res:///addons/crt/crt.gd",
			"signals": []
		},
		{
			"content": "@tool\nextends EditorPlugin\n",
			"exports": [],
			"functions": [],
			"language": "gd",
			"path": "res:///addons/crt/plugin.gd",
			"signals": []
		},
		{
			"content": "extends Resource\n\n## Abilities to detect \"Flags\" from filename or sth else.\n## Currently only 2 types of flag are supported.\n\n\n# FlagsInfo object, parse flags from name when initialized.\nclass FlagsInfo:\n\tvar DO_NOT_IMPORT := false\n\tvar IMPORT_AS_COLLISION := false\n\n\t# I hate those ugly strings\n\tconst FLAGS = {\n\t\t\"--noimp\": \"DO_NOT_IMPORT\",\n\t\t\"--collision\": \"IMPORT_AS_COLLISION\",\n\t\t\"-col\": \"IMPORT_AS_COLLISION\",\n\t}\n\n\tfunc _init(name: String) -> void:\n\t\tfor flag in FLAGS.keys():\n\t\t\tif name.find(flag) != -1:\n\t\t\t\tself[FLAGS[flag]] = true\n\n\tfunc _to_string() -> String:\n\t\treturn (\n\t\t\t\"DO_NOT_IMPORT: \"\n\t\t\t+ str(self.DO_NOT_IMPORT)\n\t\t\t+ \", IMPORT_AS_COLLISION: \"\n\t\t\t+ str(self.IMPORT_AS_COLLISION)\n\t\t)\n\n\n## a file should be imported or not\nstatic func do_not_import(name: String) -> bool:\n\treturn FlagsInfo.new(name).DO_NOT_IMPORT == true\n\n\n## a file should be imported as collision or not\nstatic func import_as_collision(name: String) -> bool:\n\treturn FlagsInfo.new(name).IMPORT_AS_COLLISION == true\n",
			"exports": [],
			"functions": [
				"func _init(name: String) -> void:",
				"func _to_string() -> String:"
			],
			"language": "gd",
			"path": "res:///addons/gltf2meshlib/flagsdetect.gd",
			"signals": []
		},
		{
			"content": "@tool\nextends EditorPlugin\n\nvar importer: EditorImportPlugin\n\n\n# Init importer\nfunc _enter_tree():\n\timporter = preload(\"importer.gd\").new()\n\tadd_import_plugin(importer)\n\n\n# deactivate importer\nfunc _exit_tree():\n\tremove_import_plugin(importer)\n\timporter = null\n",
			"exports": [],
			"functions": [
				"func _enter_tree():",
				"func _exit_tree():"
			],
			"language": "gd",
			"path": "res:///addons/gltf2meshlib/gltf2meshlib.gd",
			"signals": []
		},
		{
			"content": "extends Resource\n\nconst FlagsDetect := preload(\"./flagsdetect.gd\")\n\n\n# Gets all child nodes in any depth, pick the nodes that matches the matcher.\nstatic func find_all_matched_nodes(root_node: Node, matcher: Callable) -> Array[Node]:\n\tvar result: Array[Node] = []\n\n\tfor node: Node in root_node.get_children():\n\t\tvar matches: bool = matcher.call(node)\n\t\tif matches == true:\n\t\t\tresult.append(node)\n\t\telse:\n\t\t\tvar matched_nodes := find_all_matched_nodes(node, matcher)\n\t\t\tresult.append_array(matched_nodes)\n\treturn result\n\n\n## Merge Mesh-related nodes under a single node into one Mesh.\nstatic func merge_meshs_together_recursively(base_node: Node3D) -> ArrayMesh:\n\t# Get the Mesh of the current node:\n\tvar new_mesh: ArrayMesh = null\n\n\tif base_node is MeshInstance3D and not FlagsDetect.import_as_collision(base_node.name):\n\t\tnew_mesh = base_node.mesh as ArrayMesh\n\telif (\n\t\tbase_node is ImporterMeshInstance3D and not FlagsDetect.import_as_collision(base_node.name)\n\t):\n\t\tnew_mesh = base_node.mesh.get_mesh() as ArrayMesh\n\telse:\n\t\tnew_mesh = ArrayMesh.new()\n\n\tfor child in base_node.get_children():\n\t\tnew_mesh = combine_multisurface(\n\t\t\tnew_mesh, merge_meshs_together_recursively(child), child.transform\n\t\t)\n\n\treturn new_mesh\n\n\n## same as above, but only merges nodes with '-col' flags.\nstatic func merge_collisions_together_recursively(base_node: Node3D) -> ArrayMesh:\n\t# Get the Mesh of the current node:\n\tvar new_mesh: ArrayMesh\n\n\tif base_node is MeshInstance3D and FlagsDetect.import_as_collision(base_node.name):\n\t\tnew_mesh = base_node.mesh as ArrayMesh\n\telif base_node is ImporterMeshInstance3D and FlagsDetect.import_as_collision(base_node.name):\n\t\tnew_mesh = base_node.mesh.get_mesh() as ArrayMesh\n\telse:\n\t\tnew_mesh = ArrayMesh.new()\n\n\tfor child in base_node.get_children():\n\t\tnew_mesh = combine_multisurface(\n\t\t\tnew_mesh, merge_collisions_together_recursively(child), child.transform\n\t\t)\n\n\treturn new_mesh\n\n\n## Merging two ArrayMeshes into one. This would keep their Transform.\n## you need your transform from one mesh to another.\nstatic func combine_multisurface(\n\tmesh_base: ArrayMesh, mesh_remote: ArrayMesh, transform_toward_base: Transform3D\n) -> ArrayMesh:\n\tvar new_mesh := ArrayMesh.new()\n\n\t# Make sure the mesh is not null.\n\tif mesh_base == null:\n\t\tmesh_base = ArrayMesh.new()\n\tif mesh_remote == null:\n\t\tmesh_remote = ArrayMesh.new()\n\n\tfor i in range(mesh_base.get_surface_count()):\n\t\t# First, merge all base's surface.\n\t\tvar surface1 := mesh_base.surface_get_arrays(i)\n\t\tnew_mesh.add_surface_from_arrays(Mesh.PRIMITIVE_TRIANGLES, surface1)\n\t\tnew_mesh.surface_set_material(i, mesh_base.surface_get_material(i))\n\n\tfor i in range(mesh_remote.get_surface_count()):\n\t\t# Then we merge all remote's surface, considering the transform.\n\t\t# Note: the parameter of surface_set_material needs to consider the number of surfaces of the base, that is, an offset is made.\n\n\t\tvar surface2 := mesh_remote.surface_get_arrays(i)\n\n\t\tvar vertices2: PackedVector3Array = surface2[ArrayMesh.ARRAY_VERTEX]\n\t\tvar normals2: PackedVector3Array = surface2[ArrayMesh.ARRAY_NORMAL]\n\t\tvar uvs2: PackedVector2Array = surface2[ArrayMesh.ARRAY_TEX_UV]\n\n\t\tvar new_vertices: PackedVector3Array = []\n\t\tvar new_normals: PackedVector3Array = []\n\t\tvar new_uvs: PackedVector2Array = []\n\n\t\tfor j in range(vertices2.size()):\n\t\t\tvar vertex: Vector3 = vertices2[j]\n\t\t\tvar normal: Vector3 = normals2[j]\n\t\t\tvar uv: Vector2 = uvs2[j]\n\n\t\t\tvertex = transform_toward_base * vertex\n\t\t\tnormal = transform_toward_base.basis * (normal)\n\n\t\t\tnew_vertices.append(vertex)\n\t\t\tnew_normals.append(normal)\n\t\t\tnew_uvs.append(uv)\n\n\t\tsurface2[ArrayMesh.ARRAY_VERTEX] = new_vertices\n\t\tsurface2[ArrayMesh.ARRAY_NORMAL] = new_normals\n\t\tsurface2[ArrayMesh.ARRAY_TEX_UV] = new_uvs\n\n\t\tnew_mesh.add_surface_from_arrays(Mesh.PRIMITIVE_TRIANGLES, surface2)\n\t\tnew_mesh.surface_set_material(\n\t\t\ti + mesh_base.get_surface_count(), mesh_remote.surface_get_material(i)\n\t\t)\n\n\treturn new_mesh\n\n\n## Applys a transform3D to an ArrayMesh. returns a new ArrayMesh. It always returns a valid mesh, even if it might be empty.\nstatic func apply_transform_to_arraymesh(\n\tarray_mesh: ArrayMesh, transform: Transform3D\n) -> ArrayMesh:\n\tvar new_mesh := ArrayMesh.new()\n\n\tif not is_instance_valid(array_mesh):\n\t\tpush_warning(\n\t\t\t\"apply_transform_to_arraymesh(): array_mesh {} is not valid.\".format([array_mesh])\n\t\t)\n\t\t# return null\n\telif array_mesh.get_surface_count() <= 0:\n\t\tpush_warning(\n\t\t\t\"apply_transform_to_arraymesh(): array_mesh {} has no surface.\".format([array_mesh])\n\t\t)\n\t\t# return null\n\n\t# loop through all surfaces, apply the transform.\n\tfor i_surf in range(array_mesh.get_surface_count()):\n\t\tvar surface := array_mesh.surface_get_arrays(i_surf)\n\n\t\tvar vertices: PackedVector3Array = surface[ArrayMesh.ARRAY_VERTEX]\n\t\tvar normals: PackedVector3Array = surface[ArrayMesh.ARRAY_NORMAL]\n\t\tvar uvs: PackedVector2Array = surface[ArrayMesh.ARRAY_TEX_UV]\n\n\t\t# in each surface, we loop through all vertices, apply the transform.\n\t\tfor j in range(vertices.size()):\n\t\t\tvar vertex: Vector3 = vertices[j]\n\t\t\tvar normal: Vector3 = normals[j]\n\n\t\t\tvertex = transform * vertex\n\t\t\tnormal = transform.basis * (normal)\n\n\t\t\tvertices[j] = vertex\n\t\t\tnormals[j] = normal\n\n\t\tsurface[ArrayMesh.ARRAY_VERTEX] = vertices\n\t\tsurface[ArrayMesh.ARRAY_NORMAL] = normals\n\n\t\t# build a new ArrayMesh\n\t\tnew_mesh.add_surface_from_arrays(Mesh.PRIMITIVE_TRIANGLES, surface)\n\t\tnew_mesh.surface_set_material(i_surf, array_mesh.surface_get_material(i_surf))\n\n\treturn new_mesh\n",
			"exports": [],
			"functions": [],
			"language": "gd",
			"path": "res:///addons/gltf2meshlib/helpers.gd",
			"signals": []
		},
		{
			"content": "@tool\nclass_name GLTF2MeshLibraryImporter\nextends EditorImportPlugin\n\n# \"Imports\".\nconst Lambdas := preload(\"./lambdas.gd\")\nconst Helpers := preload(\"./helpers.gd\")\nconst FlagsDetect := preload(\"./flagsdetect.gd\")\n\n\n#region plugin_definitions\nfunc _get_importer_name():\n\treturn \"zincles.gltf2meshlib\"\n\n\nfunc _get_visible_name():\n\treturn \"GLTF To MeshLibrary\"\n\n\nfunc _get_recognized_extensions():\n\treturn [\"gltf\", \"glb\"]\n\n\nfunc _get_save_extension():\n\treturn \"meshlib\"\n\n\nfunc _get_resource_type():\n\treturn \"MeshLibrary\"\n\n\nfunc _get_preset_count():\n\treturn 1\n\n\nfunc _get_preset_name(preset_index):\n\treturn \"Default\"\n\n\nfunc _get_import_options(path, preset_index):\n\treturn [\n\t\t# Whether to gen collisionshape simply by mesh. This would ignore \"--collision\" flags.\n\t\t{\"name\": \"generate_collision_shape_by_mesh\", \"default_value\": false},\n\t\t{\"name\": \"generate_preview\", \"default_value\": true},  # Whether to gen preview.\n\t\t{\"name\": \"model_offset\", \"default_value\": Vector3(0, 0, 0)},  # Default model offset\n\t\t{\"name\": \"sort_by_name\", \"default_value\": true}  # Sort by name. preventing unexpected order.\n\t]\n\n\nfunc _get_option_visibility(path, option_name, options):\n\treturn true\n\n\nfunc _get_priority():\n\treturn 0.9\n\n\nfunc _get_import_order():\n\treturn 99\n\n\n#endregion\n\n\n#region importer_logics.\nfunc _import(gltf_path: String, save_path, options, platform_variants, gen_files):\n\tprint(\"Importing: \", gltf_path)\n\n\tvar root_node: Node\n\tvar meshLib: MeshLibrary = MeshLibrary.new()\n\tvar file = FileAccess.open(gltf_path, FileAccess.READ)\n\tif file == null:\n\t\tprint(\"Error: File Not Found!\")\n\t\treturn ERR_FILE_NOT_FOUND\n\n\t# Load the GLTF file and initialize as Node.\n\tvar gltf_document_load := GLTFDocument.new()\n\tvar gltf_state_load := GLTFState.new()\n\tvar error := gltf_document_load.append_from_file(gltf_path, gltf_state_load)\n\tif error == OK:\n\t\troot_node = gltf_document_load.generate_scene(gltf_state_load)\n\telse:\n\t\tprint(\"Error: %s \" % error_string(error))\n\t\treturn error\n\n\t# Find the root node of the items to be imported.\n\t# This is necessary because some programs add an empty node as a parent of the mesh.\n\t# We need to step deeper until we find multiple nodes.\n\tvar items_root = root_node\n\twhile items_root.get_child_count() == 1:\n\t\titems_root = items_root.get_child(0)\n\n\t# Loop through each item, merge their meshes and apply transformations.\n\tvar i := 0\n\n\t# Sort?\n\tvar items_arr: Array[Node] = items_root.get_children()\n\tif options[\"sort_by_name\"]:\n\t\titems_arr.sort_custom(Lambdas.NodeNameSortMethod)\n\n\tfor item: Node3D in items_arr:\n\t\t# Detect flags, see if we should import this item.\n\t\tif FlagsDetect.do_not_import(item.name):\n\t\t\tcontinue\n\n\t\tvar model_mesh: ArrayMesh = Helpers.merge_meshs_together_recursively(item)\n\n\t\tmodel_mesh = Helpers.apply_transform_to_arraymesh(\n\t\t\tmodel_mesh, Transform3D(Basis.IDENTITY, options[\"model_offset\"])\n\t\t)  # implement offset.\n\n\t\t# print(\"Setting up model for \", item.name)\n\t\tmeshLib.create_item(i)\n\t\tmeshLib.set_item_mesh(i, model_mesh)\n\t\tmeshLib.set_item_name(i, item.name)\n\n\t\t# print(\"Setting up collision for \", item.name)\n\t\t# Generate collision by mesh, or by models with '-col' flags.\n\t\tif options.generate_collision_shape_by_mesh:\n\t\t\t# Generate Collision simply by it's Mesh.\n\t\t\tvar shape_mesh := model_mesh.create_trimesh_shape()\n\t\t\tif shape_mesh != null:\n\t\t\t\tmeshLib.set_item_shapes(i, [shape_mesh])\n\t\t\t\tprint(\"> Generated collision simply by mesh. --collision flags are ignored.\")\n\t\telse:\n\t\t\t# Generate Collision with flag tagged Mesh, ignore model mesh. This is the recommended way.\n\t\t\tvar shape_mesh := Helpers.merge_collisions_together_recursively(item)\n\n\t\t\tif shape_mesh.get_surface_count() != 0:\n\t\t\t\t# convexshape = shape_mesh.create_convex_shape()\n\t\t\t\t# print(\"> Creating convex shape.\")\n\t\t\t\tshape_mesh = Helpers.apply_transform_to_arraymesh(\n\t\t\t\t\tshape_mesh, Transform3D(Basis.IDENTITY, options[\"model_offset\"])\n\t\t\t\t)  # implement offset.\n\t\t\t\tvar convexshape = shape_mesh.create_trimesh_shape()\n\t\t\t\tif convexshape != null:\n\t\t\t\t\tmeshLib.set_item_shapes(i, [convexshape])\n\t\t\t\t\tprint(\"> Genrated collision by flag -col tagged mesh.\")\n\n\t\tif options[\"generate_preview\"] == true:\n\t\t\tif model_mesh.get_surface_count() > 0:\n\t\t\t\t# Seems this would raise Error.. with editor with gridmap scene opened. why?\n\t\t\t\tvar preview: Array[Texture2D] = EditorInterface.make_mesh_previews([model_mesh], 64)\n\t\t\t\tmeshLib.set_item_preview(i, preview[0])\n\t\t\tprint(\"> Generated Preview.\")\n\n\t\ti += 1\n\n\tprint(\"Done processing meshes. Saving...\")\n\troot_node.queue_free()\n\n\t# Save the mesh library.\n\tvar filename = save_path + \".\" + _get_save_extension()\n\treturn ResourceSaver.save(meshLib, filename)\n#endregion\n",
			"exports": [],
			"functions": [
				"func _get_importer_name():",
				"func _get_visible_name():",
				"func _get_recognized_extensions():",
				"func _get_save_extension():",
				"func _get_resource_type():",
				"func _get_preset_count():",
				"func _get_preset_name(preset_index):",
				"func _get_import_options(path, preset_index):",
				"func _get_option_visibility(path, option_name, options):",
				"func _get_priority():",
				"func _get_import_order():",
				"func _import(gltf_path: String, save_path, options, platform_variants, gen_files):"
			],
			"language": "gd",
			"path": "res:///addons/gltf2meshlib/importer.gd",
			"signals": []
		},
		{
			"content": "extends Resource\n\n\nstatic func is_ImporterMeshInstance3D(node: Node) -> bool:\n\t#print(\"Node: \", node)\n\tif is_instance_of(node, ImporterMeshInstance3D):\n\t\treturn true\n\treturn false\n\n\nstatic func is_MeshInstance3D(node: Node) -> bool:\n\t#print(\"Node: \", node)\n\tif is_instance_of(node, MeshInstance3D):\n\t\treturn true\n\treturn false\n\n\nstatic func StringSortMethod(str1: String, str2: String) -> bool:\n\treturn str1 < str2\n\n\nstatic func NodeNameSortMethod(node1: Node, node2: Node) -> bool:\n\treturn StringSortMethod(node1.name, node2.name)\n",
			"exports": [],
			"functions": [],
			"language": "gd",
			"path": "res:///addons/gltf2meshlib/lambdas.gd",
			"signals": []
		},
		{
			"content": "extends Object\n\nenum CompletionMessageRole {\n\tSystem,\n\tUser,\n\tAssistant\n}\n\nconst CompletionMessageRoleNames = {\n\t0: 'system',\n\t1: 'user',\n\t2: 'assistant'\n}\n\nvar role : CompletionMessageRole = CompletionMessageRole.System\nvar content : String = \"\"\n\nfunc _init(content : String, role : CompletionMessageRole):\n\tself.content = content\n\tself.role = role\n\n\nfunc to_dictionary() -> Dictionary:\n\treturn {\n\t\t\"role\": CompletionMessageRoleNames[role],\n\t\t\"content\": content\n\t}\n\nfunc get_role_name() -> String:\n\treturn CompletionMessageRoleNames[role]\n",
			"exports": [],
			"functions": [
				"func _init(content : String, role : CompletionMessageRole):",
				"func to_dictionary() -> Dictionary:",
				"func get_role_name() -> String:"
			],
			"language": "gd",
			"path": "res:///addons/lm_studio_api/lib/completions/completion_message.gd",
			"signals": []
		},
		{
			"content": "extends LmStudioApi.Request\nconst CompletionMessage = preload('res://addons/lm_studio_api/lib/completions/completion_message.gd')\n@export var model : String = \"\"\nvar messages : Array[CompletionMessage]\n@export var automatically_add_messages = true\n@export var maximum_message_stored : int = 0\n\n##Advanced Settings\n@export var temperature : float = 0.7\n@export var max_tokens : int = 0\n@export var presence_penalty : float = 0\n@export var frequency_penalty : float = 0\n@export var seed : int = 0\nfunc _init():\n\tself.api_endpoint = '/v1/chat/completions'\n\nfunc generate_body() -> String:\n\tvar body_dictionary : Dictionary = {\n\t\t\"model\": model,\n\t\t\"messages\": messages.map(func(message : CompletionMessage): return message.to_dictionary()),\n\t\t\"temperature\": temperature\n\t}\n\tif(max_tokens):\n\t\tbody_dictionary[\"max_tokens\"] = max_tokens\n\tif(presence_penalty):\n\t\tbody_dictionary[\"presence_penalty\"] = presence_penalty\n\tif(frequency_penalty):\n\t\tbody_dictionary[\"frequency_penalty\"] = presence_penalty\n\tif(seed):\n\t\tbody_dictionary['seed'] = seed\n\t\t\n\tvar json_body : String = JSON.stringify(body_dictionary, config.outgoing_message_json_indent)\n\treturn json_body\n\nfunc raw_add_message(message : CompletionMessage):\n\tmessages.append(message)\n\t\nfunc add_message(content : String, role : CompletionMessage.CompletionMessageRole = CompletionMessage.CompletionMessageRole.User):\n\traw_add_message(\n\t\tCompletionMessage.new(content, role)\n\t)\n\nfunc clear_messages():\n\tmessages = []\n\nfunc _on_success(response):\n\tif(automatically_add_messages):\n\t\tvar returned_message : Dictionary = response['choices'][0]['message']\n\t\tvar convertedMessage = CompletionMessage.new(\n\t\t\treturned_message['content'],\n\t\t\tCompletionMessage.CompletionMessageRole.Assistant\n\t\t)\n\t\tmessages.append(convertedMessage)\n\temit_signal('on_success', response) \n",
			"exports": [
				"@export var model : String = \"\"",
				"@export var automatically_add_messages = true",
				"@export var maximum_message_stored : int = 0",
				"@export var temperature : float = 0.7",
				"@export var max_tokens : int = 0",
				"@export var presence_penalty : float = 0",
				"@export var frequency_penalty : float = 0",
				"@export var seed : int = 0"
			],
			"functions": [
				"func _init():",
				"func generate_body() -> String:",
				"func raw_add_message(message : CompletionMessage):",
				"func add_message(content : String, role : CompletionMessage.CompletionMessageRole = CompletionMessage.CompletionMessageRole.User):",
				"func clear_messages():",
				"func _on_success(response):"
			],
			"language": "gd",
			"path": "res:///addons/lm_studio_api/lib/completions.gd",
			"signals": []
		},
		{
			"content": "@tool\nextends Resource\nclass_name LMStudioConfig\n\nconst SETTINGS_PATH: String = \"addons/lm_studio_api/\"\nconst API_ROOT_SETTINGS_PATH: String = \"api_key\"\n\nvar outgoing_message_json_indent : String = \"\\t\"\n@export var api_root : String = \"\"\n\nfunc get_api_root():\n\tif(api_root && !api_root.is_empty()):\n\t\treturn api_root\n\telif(ProjectSettings.has_setting(get_api_root_value())):\n\t\treturn ProjectSettings.get_setting(get_api_root_value())\n\telse:\n\t\tassert(\"[LmStudioApi] API Root not found. Please set the plugin settings or add a config to your request\")\n\t\t\n\nfunc get_api_root_value() -> String:\n\treturn SETTINGS_PATH+API_ROOT_SETTINGS_PATH\n\n\n#DEFAULT SETTINGS \n#Godot 4.3 has issues resolving localhost, delaying all requests ~30 seconds.\n#Godot Team please resolve, until then access via domain or IP address.\nconst DEFAULT_API_ROOT_VALUE = \"http://127.0.0.1:1234\"\nfunc generate_default_settings():\n\tif (!ProjectSettings.has_setting(get_api_root_value())):\n\t\tProjectSettings.set_setting(get_api_root_value(), DEFAULT_API_ROOT_VALUE)\n\t\t\n",
			"exports": [
				"@export var api_root : String = \"\""
			],
			"functions": [
				"func get_api_root():",
				"func get_api_root_value() -> String:",
				"func generate_default_settings():"
			],
			"language": "gd",
			"path": "res:///addons/lm_studio_api/lib/config.gd",
			"signals": []
		},
		{
			"content": "extends LmStudioApi.Request\n\n@export var model : String = ''\n@export var input : String = ''\n\nfunc _init():\n\tself.api_endpoint = '/v1/embeddings '\n\nfunc generate_body() -> String:\n\tvar body_dictionary : Dictionary = {\n\t\t\"model\": model,\n\t\t\"input\": input\n\t}\n\tvar json_body : String = JSON.stringify(body_dictionary, config.outgoing_message_json_indent)\n\treturn json_body\n",
			"exports": [
				"@export var model : String = ''",
				"@export var input : String = ''"
			],
			"functions": [
				"func _init():",
				"func generate_body() -> String:"
			],
			"language": "gd",
			"path": "res:///addons/lm_studio_api/lib/embeddings.gd",
			"signals": []
		},
		{
			"content": "extends LmStudioApi.Request\n\nfunc _init():\n\tself.api_endpoint = '/v1/models'\n\tself.method = HTTPClient.METHOD_GET\n\t\n",
			"exports": [],
			"functions": [
				"func _init():"
			],
			"language": "gd",
			"path": "res:///addons/lm_studio_api/lib/models.gd",
			"signals": []
		},
		{
			"content": "extends Node\n\n@export var one_shot : bool = false\nvar method : int = HTTPClient.METHOD_POST\n\nvar api_endpoint : String =\"\"\n\nsignal on_success(response : Dictionary)\nsignal on_request_completed(result, response_code, headers, body, response) #Passthrough\nsignal on_failure(code : int, response : Dictionary)\n\n@export var debug = false\n@export var headers : PackedStringArray = []\n\n@export var config : LmStudioApi.Config = LmStudioApi.Config.new()\n@onready var http_request : HTTPRequest = HTTPRequest.new()\n@export var run_on_ready : bool = false\n@export var timeout : float = 0.0\n\nfunc _ready():\n\tadd_child(http_request)\n\thttp_request.use_threads = true\n\thttp_request.request_completed.connect(self._request_completed)\n\tif(run_on_ready):\n\t\trequest()\n\nfunc generate_headers() -> PackedStringArray:\n\tvar pregenerated_headers : PackedStringArray = [\n\t\t\"Content-Type: application/json\",\n\t\t\"Accept: application/json\"\n\t]\n\tpregenerated_headers.append_array(headers)\n\treturn pregenerated_headers\n\nfunc generate_url():\n\treturn config.get_api_root()+api_endpoint\n\t\nfunc generate_body() -> String:\n\treturn \"\"\n\t\nfunc request():\n\tvar error = http_request.request(\n\t\tgenerate_url(),\n\t\tgenerate_headers(),\n\t\tmethod, \n\t\tgenerate_body()\n\t)\n\tif error != OK:\n\t\tpush_error(\"An error occurred in the HTTP request.\")\n\t\t\n\nfunc _request_completed(result, response_code, headers, body):\n\tvar json = JSON.new()\n\tjson.parse(body.get_string_from_utf8())\n\tif(debug):\n\t\tprint(body.get_string_from_utf8())\n\tvar response = json.get_data()\n\temit_signal(\"on_request_completed\", result,response_code,headers,body, response)\n\tif(response_code == 200):\n\t\t_on_success(response)\n\telse:\n\t\temit_signal('on_failure', response_code, response)\n\tif(can_node_die()):\n\t\tself.queue_free()\n\nfunc can_node_die():\n\treturn one_shot\n\t\nfunc _on_success(response):\n\temit_signal('on_success', response)\n",
			"exports": [
				"@export var one_shot : bool = false",
				"@export var debug = false",
				"@export var headers : PackedStringArray = []",
				"@export var config : LmStudioApi.Config = LmStudioApi.Config.new()",
				"@export var run_on_ready : bool = false",
				"@export var timeout : float = 0.0"
			],
			"functions": [
				"func _ready():",
				"func generate_headers() -> PackedStringArray:",
				"func generate_url():",
				"func generate_body() -> String:",
				"func request():",
				"func _request_completed(result, response_code, headers, body):",
				"func can_node_die():",
				"func _on_success(response):"
			],
			"language": "gd",
			"path": "res:///addons/lm_studio_api/lib/request.gd",
			"signals": [
				"signal on_success(response : Dictionary)",
				"signal on_request_completed(result, response_code, headers, body, response) #Passthrough",
				"signal on_failure(code : int, response : Dictionary)"
			]
		},
		{
			"content": "@tool\nextends Node\n\nconst Request = preload(\"res://addons/lm_studio_api/lib/request.gd\")\nconst Completions = preload(\"res://addons/lm_studio_api/lib/completions.gd\")\nconst Embeddings = preload(\"res://addons/lm_studio_api/lib/embeddings.gd\")\nconst Models = preload(\"res://addons/lm_studio_api/lib/models.gd\")\nconst Config = preload(\"res://addons/lm_studio_api/lib/config.gd\")\n\nfunc _init():\n\t#Generate initial configs, a little hacky\n\tConfig.new().generate_default_settings()\n",
			"exports": [],
			"functions": [
				"func _init():"
			],
			"language": "gd",
			"path": "res:///addons/lm_studio_api/lm_studio_api.gd",
			"signals": []
		},
		{
			"content": "@tool\nextends EditorPlugin\n\nconst AUTOLOAD_NAME: String = \"LmStudioApi\"\nconst AUTOLOAD_PATH: String = \"res://addons/lm_studio_api/lm_studio_api.gd\"\n\nconst lm_studio_node_name: String = \"LmStudioApi\"\nconst lm_studio_node_path: String = \"res://addons/lm_studio_api/lib/request.gd\"\nconst lm_studio_node_icon = preload(\"res://addons/lm_studio_api/icons/icon.png\")\n\n\nconst lm_studio_completions_node_name: String = \"LMStudioCompletions\"\nconst lm_studio_completions_node_path: String = \"res://addons/lm_studio_api/lib/completions.gd\"\nconst lm_studio_completions_node_icon = preload(\"res://addons/lm_studio_api/icons/icon.png\")\n\nconst lm_studio_models_node_name: String = \"LMStudioModels\"\nconst lm_studio_models_node_path: String = \"res://addons/lm_studio_api/lib/models.gd\"\nconst lm_studio_models_node_icon = preload(\"res://addons/lm_studio_api/icons/icon.png\")\n\nconst lm_studio_embeddings_node_name: String = \"LmStudioEmbeddings\"\nconst lm_studio_embeddings_node_path: String = \"res://addons/lm_studio_api/lib/embeddings.gd\"\nconst lm_studio_embeddings_node_icon = preload(\"res://addons/lm_studio_api/icons/icon.png\")\n\nfunc _enter_tree():\n\tadd_autoload_singleton(AUTOLOAD_NAME, AUTOLOAD_PATH)\n\tadd_custom_type(lm_studio_node_name, \"Node\", preload(lm_studio_node_path), lm_studio_node_icon)\n\tadd_custom_type(lm_studio_completions_node_name, \"Node\", preload(lm_studio_completions_node_path), lm_studio_completions_node_icon)\n\tadd_custom_type(lm_studio_models_node_name, \"Node\", preload(lm_studio_models_node_path), lm_studio_models_node_icon)\n\tadd_custom_type(lm_studio_embeddings_node_name, \"Node\", preload(lm_studio_embeddings_node_path), lm_studio_embeddings_node_icon)\n\t\n\nfunc _exit_tree():\n\tadd_autoload_singleton(AUTOLOAD_NAME, AUTOLOAD_PATH)\n\tremove_custom_type(lm_studio_node_name)\n\tremove_custom_type(lm_studio_completions_node_name)\n\tremove_custom_type(lm_studio_models_node_name)\n\tremove_custom_type(lm_studio_embeddings_node_name)\n",
			"exports": [],
			"functions": [
				"func _enter_tree():",
				"func _exit_tree():"
			],
			"language": "gd",
			"path": "res:///addons/lm_studio_api/lm_studio_api_plugin.gd",
			"signals": []
		},
		{
			"content": "# (This script is attached to the root of Console3D.tscn)\nclass_name ConsoleController\nextends Node3D\n# --- This script acts as a \"receptionist\" for our 3D console. ---\n# It holds references to all the important nodes within this scene.\n\n# NOTE: The paths below assume the labels are children of a SubViewport system.\n# You will need to adjust these paths to match your exact scene structure.\n# Example: $LogViewport/GameLogLabel\n\n# --- Avatar Screens ---\n# These are the 2D scenes that act as \"slide projectors\"\n# --- References to the TextureRects inside each screen's SubViewport ---\n@onready var avatar_image_tr: TextureRect = $console/AvatarScreens/console/EnemyAvatarScreen_TopRight/SubViewport/AvatarImage_TopRight\n@onready var avatar_image_br: TextureRect = $console/AvatarScreens/console/EnemyAvatarScreen_BottomRight/SubViewport/AvatarImage_BottomRight\n@onready var avatar_image_tl: TextureRect = $console/AvatarScreens/console/EnemyAvatarScreen_TopLeft/SubViewport/AvatarImage_TopLeft\n@onready var avatar_image_bl: TextureRect = $console/AvatarScreens/console/EnemyAvatarScreen_BottomLeft/SubViewport/AvatarImage_BottomLeft\n#@onready var deployment_screen: DeploymentUI = $console/MainScreen/SubViewport/DeploymentScreen\n\n\n# --- Info Labels ---\n# These are the 3D TextMesh nodes that display text\n@onready var game_log_label = $console/InfoScreens/console/GameLogScreen/LogViewport/Panel/GameLogLabel\n@onready var player_info_label = $console/InfoScreens/console/PlayerInfoScreen/LogViewport/Panel/PlayerInfoLabel\n@onready var enemy_info_tl = $console/InfoScreens/console/EnemyInfoScreen_TopLeft/LogViewport/Panel/EnemyInfoTopLeftLabel\n@onready var enemy_info_bl = $console/InfoScreens/console/EnemyInfoScreen_BottomLeft/LogViewport/Panel/EnemyInfoBottomLeftLabel\n@onready var enemy_info_tr = $console/InfoScreens/console/EnemyInfoScreen_TopRight/LogViewport/Panel/EnemyInfoTopRightLabel\n@onready var enemy_info_br = $console/InfoScreens/console/EnemyInfoScreen_BottomRight/LogViewport/Panel/EnemyInfoBottomRightLabel\n\n# This function runs when the node is ready.\nfunc _ready():\n\t# We will now test each of our own paths.\n\tprint(\"--- ConsoleController Self-Check ---\")\n\tif is_instance_valid(game_log_label):\n\t\tprint(\"SUCCESS: Found GameLogLabel.\")\n\telse:\n\t\tprint(\"ERROR: Could not find GameLogLabel at the specified path.\")\n\t\t\n\tif is_instance_valid(player_info_label):\n\t\tprint(\"SUCCESS: Found PlayerInfoLabel.\")\n\telse:\n\t\tprint(\"ERROR: Could not find PlayerInfoLabel at the specified path.\")\n\n\tif is_instance_valid(enemy_info_tr):\n\t\tprint(\"SUCCESS: Found EnemyInfoTopRightLabel.\")\n\telse:\n\t\tprint(\"ERROR: Could not find EnemyInfoTopRightLabel at the specified path.\")\n\n\tif is_instance_valid(enemy_info_tl):\n\t\tprint(\"SUCCESS: Found EnemyInfoTopLeftLabel.\")\n\telse:\n\t\tprint(\"ERROR: Could not find EnemyInfoTopRightLabel at the specified path.\")\n\n\tif is_instance_valid(enemy_info_br):\n\t\tprint(\"SUCCESS: Found EnemyInfoBottomRightLabel.\")\n\telse:\n\t\tprint(\"ERROR: Could not find EnemyInfoTopRightLabel at the specified path.\")\n\n\tif is_instance_valid(enemy_info_bl):\n\t\tprint(\"SUCCESS: Found EnemyInfoBottomLeftLabel.\")\n\telse:\n\t\tprint(\"ERROR: Could not find EnemyInfoTopRightLabel at the specified path.\")\n\n\t# ... (You can add checks for the other enemy labels if you wish)\n\tprint(\"--- Self-Check Complete ---\")\n",
			"exports": [],
			"functions": [
				"func _ready():"
			],
			"language": "gd",
			"path": "res:///scenes/3d/ConsoleController.gd",
			"signals": []
		},
		{
			"content": "class_name Card\nextends PanelContainer\n\n# UPDATED SIGNAL: Instead of just data, it will send a reference to ITSELF.\nsignal card_selected(card_node)\n\n# --- Node References (same as before) ---\n@onready var name_label: Label = $MarginContainer/VBoxContainer/NameLabel\n@onready var art_rect: TextureRect = $MarginContainer/VBoxContainer/Art\n@onready var type_label: Label = $MarginContainer/VBoxContainer/TypeLabel\n@onready var description_label: Label = $MarginContainer/VBoxContainer/DescriptionLabel\n\nvar card_data: CardData\n\nfunc _gui_input(event: InputEvent):\n\tif event is InputEventMouseButton and event.button_index == MOUSE_BUTTON_LEFT and event.is_pressed():\n\t\t# UPDATED: Emit the signal with a reference to this card instance.\n\t\tcard_selected.emit(self)\n\n# --- NEW: VISUAL FEEDBACK FUNCTIONS ---\nfunc select():\n\t# A Tween smoothly animates a property over time.\n\tvar tween = create_tween()\n\t# Animate my \"position:y\" property to -30 over 0.2 seconds.\n\ttween.tween_property(self, \"position:y\", -30, 0.2).set_trans(Tween.TRANS_QUAD)\n\nfunc deselect():\n\tvar tween = create_tween()\n\t# Animate my \"position:y\" property back to 0.\n\ttween.tween_property(self, \"position:y\", 0, 0.2).set_trans(Tween.TRANS_QUAD)\n\n# --- update_display function (same as before) ---\nfunc update_display(p_card_data: CardData):\n\tself.card_data = p_card_data\n\tname_label.text = card_data.card_name\n\ttype_label.text = CardData.CardType.keys()[card_data.card_type]\n\tdescription_label.text = card_data.description\n\t\n\tif card_data.card_art:\n\t\tart_rect.texture = card_data.card_art\n\telse:\n\t\tart_rect.texture = null\n",
			"exports": [],
			"functions": [
				"func _gui_input(event: InputEvent):",
				"func select():",
				"func deselect():",
				"func update_display(p_card_data: CardData):"
			],
			"language": "gd",
			"path": "res:///scenes/ui/Card.gd",
			"signals": [
				"signal card_selected(card_node)"
			]
		},
		{
			"content": "# (This code is indented with tabs)\nclass_name CardChooser\nextends PanelContainer\n\n# This signal is emitted when a card is clicked inside the chooser.\nsignal card_chosen(card_data)\n\nconst CardScene = preload(\"res://scenes/ui/Card.tscn\")\n\n@onready var title_label: Label = $MarginContainer/VBoxContainer/TitleLabel\n@onready var card_grid: GridContainer = $MarginContainer/VBoxContainer/CardGrid\n\n# This is the main function to set up the chooser.\nfunc initialize(title: String, card_ids: Array):\n\ttitle_label.text = title\n\t\n\t# Clear any old cards, just in case.\n\tfor child in card_grid.get_children():\n\t\tchild.queue_free()\n\t\t\n\t# Create a card UI for each card ID we were given.\n\tfor card_id in card_ids:\n\t\tvar card_data = CardDatabase.get_card_data(card_id)\n\t\tif card_data:\n\t\t\tvar new_card = CardScene.instantiate()\n\t\t\tcard_grid.add_child(new_card)\n\t\t\tnew_card.update_display(card_data)\n\t\t\t# Connect the card's signal to our internal handler.\n\t\t\tnew_card.card_selected.connect(_on_card_clicked_in_chooser)\n\n# This internal function is called when a card inside me is clicked.\nfunc _on_card_clicked_in_chooser(card_node: Card):\n\t# Bubble up the event by emitting our own signal.\n\tcard_chosen.emit(card_node.card_data)\n\t# I have served my purpose. Remove myself from the screen.\n\tqueue_free()\n",
			"exports": [],
			"functions": [
				"func initialize(title: String, card_ids: Array):",
				"func _on_card_clicked_in_chooser(card_node: Card):"
			],
			"language": "gd",
			"path": "res:///scenes/ui/CardChooser.gd",
			"signals": [
				"signal card_chosen(card_data)"
			]
		},
		{
			"content": "# (This is the final version that uses the global EventBus)\nclass_name DeploymentUI\nextends Control\n\n# This script no longer needs its own signal.\n\nconst OptionButtonScene = preload(\"res://scenes/ui/OptionButton.tscn\")\n\n@onready var title_label = $ContentBox/CardChooserUI/TitleBar/TitleLabel\n\nfunc _ready():\n\thide()\n\t# Make sure this control receives input events\n\tmouse_filter = MOUSE_FILTER_STOP\n\nfunc show_choices(title: String, choices: Array, choice_type: String):\n\ttitle_label.text = title\n\t_update_visualizer(null)\n\t\n\tvar options_list = get_node(\"ContentBox/CardChooserUI/OptionsList\")\n\tif not options_list:\n\t\tprinterr(\"DeploymentUI Error: OptionsList node not found at the specified path.\")\n\t\treturn\n\t\t\n\t# Clear only the previously added buttons, preserving other nodes.\n\tfor child in options_list.get_children():\n\t\tif child is Button:\n\t\t\tchild.queue_free()\n\t\t\n\tfor i in range(choices.size()):\n\t\tvar choice = choices[i]\n\t\tvar button = OptionButtonScene.instantiate()\n\t\toptions_list.add_child(button)\n\t\t# Ensure the button is added before any non-button nodes (like the background panel)\n\t\toptions_list.move_child(button, i)\n\t\t\n\t\tif choice_type == \"INVESTMENT\":\n\t\t\tbutton.text = \"%s (%d AP, $%d)\" % [choice.name, choice.ap_cost, choice.treasury_cost]\n\t\t\tbutton.pressed.connect(func(): EventBus.deployment_choice_made.emit(choice.id))\n\t\telif choice_type == \"CARD\":\n\t\t\tbutton.text = choice.card_name\n\t\t\tbutton.pressed.connect(func(): EventBus.deployment_choice_made.emit(choice))\n\t\t\tbutton.mouse_entered.connect(func(): \n\t\t\t\tLogger.log(\"Mouse entered button: '%s'\" % choice.card_name)\n\t\t\t\t_update_visualizer(choice)\n\t\t\t)\n\tshow()\n\nfunc hide_screen():\n\thide()\n\nfunc _update_visualizer(card_data: CardData):\n\tvar visualizer_art = get_node(\"ContentBox/CardVisualsOverlay/VisualizerContent/Visualizer_Art\")\n\tvar visualizer_description = get_node(\"ContentBox/CardVisualsOverlay/VisualizerContent/Visualizer_Description\")\n\n\tif not visualizer_art or not visualizer_description:\n\t\tprinterr(\"DeploymentUI Error: Visualizer nodes not found at the specified paths.\")\n\t\treturn\n\n\tif card_data:\n\t\tvisualizer_art.texture = card_data.card_art\n\t\tvisualizer_description.text = card_data.description\n\telse:\n\t\tvisualizer_art.texture = null\n\t\tvisualizer_description.text = \"Select an option from the list.\"\n\nfunc _input(event):\n\t# Handle input events for this control\n\tif event is InputEventMouseButton and event.pressed:\n\t\t# --- DEBUG ---\n\t\tLogger.log(\"--- DeploymentUI _input received MOUSE BUTTON PRESS ---\")\n\t\t# If we're showing the deployment screen, we might want to handle clicks outside\n\t\t# to close the menu, but let's not interfere with button presses\n\t\tpass\n\n# Ensure that this UI can properly process mouse events\nfunc _gui_input(event):\n\tif event is InputEventMouseButton and event.pressed:\n\t\t# --- DEBUG ---\n\t\tLogger.log(\"--- DeploymentUI _gui_input received MOUSE BUTTON PRESS ---\")\n\t\t# This will be called when mouse is pressed on this control or its children\n\t\t# We don't need to do anything special here, but we want to make sure \n\t\t# the control properly accepts input events\n\t\tpass\n",
			"exports": [],
			"functions": [
				"func _ready():",
				"func show_choices(title: String, choices: Array, choice_type: String):",
				"func hide_screen():",
				"func _update_visualizer(card_data: CardData):",
				"func _input(event):",
				"func _gui_input(event):"
			],
			"language": "gd",
			"path": "res:///scenes/ui/DeploymentUI.gd",
			"signals": []
		},
		{
			"content": "class_name PlayerPanel\nextends Control\n\n@onready var faction_name_label: Label = $PanelContainer/MarginContainer/HBoxContainer/VBoxContainer/FactionNameLabel\n@onready var leader_name_label: Label = $PanelContainer/MarginContainer/HBoxContainer/VBoxContainer/LeaderNameLabel\n@onready var population_label: Label = $PanelContainer/MarginContainer/HBoxContainer/VBoxContainer/PopulationLabel\n\nvar player_state: PlayerState\n\nfunc update_display(p_player_state: PlayerState):\n\tself.player_state = p_player_state\n\t# --- THE FIX ---\n\tif player_state and player_state.faction_data:\n\t\tfaction_name_label.text = player_state.faction_data.faction_name\n\t\tleader_name_label.text = player_state.faction_data.leader_name\n\t\tpopulation_label.text = \"Pop: %s Million\" % player_state.current_population\n\telse:\n\t\tprint(\"ERROR: PlayerPanel received null or invalid player state\")\n\t\tfaction_name_label.text = \"ERROR\"\n\t\tleader_name_label.text = \"Invalid Data\"\n\t\tpopulation_label.text = \"Pop: 0 Million\"\n",
			"exports": [],
			"functions": [
				"func update_display(p_player_state: PlayerState):"
			],
			"language": "gd",
			"path": "res:///scenes/ui/PlayerPanel.gd",
			"signals": []
		},
		{
			"content": "# (This is the final, correct script with the check_for_click function)\nclass_name InteractionController\nextends Camera3D\n\n# This flag is controlled by the main controller to prevent clicks\n# when a 2D UI is open.\nvar process_input = true\n\n# This is now a public function that the main_controller calls.\n# It no longer uses the automatic _unhandled_input.\nfunc check_for_click(event: InputEvent):\n\tif not process_input:\n\t\treturn\n\n\tif event is InputEventMouseButton and event.button_index == MOUSE_BUTTON_LEFT and event.is_pressed():\n\t\tvar mouse_pos = get_viewport().get_mouse_position()\n\t\t\n\t\tvar space_state = get_world_3d().direct_space_state\n\t\tvar query = PhysicsRayQueryParameters3D.new()\n\t\tquery.from = self.project_ray_origin(mouse_pos)\n\t\tquery.to = query.from + self.project_ray_normal(mouse_pos) * 1000\n\t\t\n\t\tvar result = space_state.intersect_ray(query)\n\t\t\n\t\tif not result.is_empty():\n\t\t\tvar hit_object = result.collider\n\t\t\tif hit_object.has_method(\"on_click\"):\n\t\t\t\thit_object.on_click()\n",
			"exports": [],
			"functions": [
				"func check_for_click(event: InputEvent):"
			],
			"language": "gd",
			"path": "res:///scripts/3d/InteractionController.gd",
			"signals": []
		},
		{
			"content": "# res://scripts/3d/MainScreen3DController.gd\nextends Node3D\n\n# This script is attached to MainScreen3D to help with debugging input events.\n\nfunc _input(event):\n\tif event is InputEventMouseButton and event.pressed:\n\t\t# --- DEBUG ---\n\t\tLogger.log(\"--- MainScreen3DController _input received MOUSE BUTTON PRESS ---\")\n\t\t# This will help us see if events are reaching the 3D scene at all.\n\t\tpass\n\nfunc _gui_input(event):\n\tif event is InputEventMouseButton and event.pressed:\n\t\t# --- DEBUG ---\n\t\tLogger.log(\"--- MainScreen3DController _gui_input received MOUSE BUTTON PRESS ---\")\n\t\t# This will help us see if GUI events are reaching the 3D scene at all.\n\t\tpass\n",
			"exports": [],
			"functions": [
				"func _input(event):",
				"func _gui_input(event):"
			],
			"language": "gd",
			"path": "res:///scripts/3d/MainScreen3DController.gd",
			"signals": []
		},
		{
			"content": "# (This script is correct and does not need to be changed)\nclass_name PhysicalButton3D\nextends StaticBody3D\n\nsignal button_pressed(mesh_name)\n\n@onready var target_mesh: MeshInstance3D = get_parent()\n@onready var collision_shape: CollisionShape3D = $CollisionShape3D\n\nvar anim_player: AnimationPlayer\n\nfunc set_animation_player(p_anim_player: AnimationPlayer):\n\tself.anim_player = p_anim_player\n\nfunc on_click():\n\tbutton_pressed.emit(target_mesh.name)\n\nfunc play_animation(is_backwards: bool = false):\n\tvar anim_name = \"%s_Press\" % target_mesh.name\n\tif anim_player and anim_player.has_animation(anim_name):\n\t\tif is_backwards:\n\t\t\tanim_player.play_backwards(anim_name)\n\t\telse:\n\t\t\tanim_player.play(anim_name)\n\nfunc enable():\n\tif collision_shape:\n\t\tcollision_shape.disabled = false\n\nfunc disable():\n\tif collision_shape:\n\t\tcollision_shape.disabled = true\n",
			"exports": [],
			"functions": [
				"func set_animation_player(p_anim_player: AnimationPlayer):",
				"func on_click():",
				"func play_animation(is_backwards: bool = false):",
				"func enable():",
				"func disable():"
			],
			"language": "gd",
			"path": "res:///scripts/3d/PhysicalButton3D.gd",
			"signals": [
				"signal button_pressed(mesh_name)"
			]
		},
		{
			"content": "# (This is the full, final, and correct AIController script)\nclass_name AIController\n\nstatic func take_turn(ai_player: PlayerState, all_players: Array) -> void:\n\tLogger.log(\"AIController is now in charge of %s.\" % ai_player.faction_data.faction_name)\n\t\n\tvar target = choose_smarter_target(ai_player, all_players)\n\tif not target:\n\t\tLogger.log(\"%s can't find a valid target and ends their turn.\" % ai_player.faction_data.faction_name)\n\t\treturn\n\n\tLogger.log(\"%s chose %s as a target.\" % [ai_player.faction_data.faction_name, target.faction_data.leader_name])\n\t\n\tvar infowar_card_id = find_card_of_type(ai_player.hand, CardData.CardType.INFO_WAR)\n\tvar delivery_card_id = find_card_of_type(ai_player.hand, CardData.CardType.DELIVERY)\n\tvar payload_card_id = find_card_of_type(ai_player.hand, CardData.CardType.PAYLOAD)\n\t\n\tif infowar_card_id:\n\t\tvar card_data = CardDatabase.get_card_data(infowar_card_id)\n\t\tGameManager.execute_infowar_attack(ai_player, target, card_data)\n\t\tai_player.hand.erase(infowar_card_id)\n\telif delivery_card_id and payload_card_id:\n\t\tvar delivery_data = CardDatabase.get_card_data(delivery_card_id)\n\t\tvar payload_data = CardDatabase.get_card_data(payload_card_id)\n\t\tGameManager.execute_conventional_attack(ai_player, target, delivery_data, payload_data)\n\t\tai_player.hand.erase(delivery_card_id)\n\t\tai_player.hand.erase(payload_card_id)\n\telse:\n\t\tLogger.log(\"%s doesn't have the right cards to attack and ends their turn.\" % ai_player.faction_data.faction_name)\n\n\nstatic func choose_smarter_target(ai_player: PlayerState, all_players: Array) -> PlayerState:\n\tvar possible_targets: Array = []\n\tfor p in all_players:\n\t\tif p != ai_player and p.current_population > 0:\n\t\t\tpossible_targets.append(p)\n\t\n\tif possible_targets.is_empty():\n\t\treturn null\n\n\tif ai_player.faction_data.personality_traits.has(FactionData.Traits.RUTHLESS):\n\t\tLogger.log(\"%s is feeling RUTHLESS and looks for the weakest target...\" % ai_player.faction_data.faction_name)\n\t\tpossible_targets.sort_custom(func(a, b):\n\t\t\treturn a.current_population < b.current_population\n\t\t)\n\t\tvar weakest_target = possible_targets[0]\n\t\tLogger.log(\"The weakest target is %s.\" % weakest_target.faction_data.leader_name)\n\t\treturn weakest_target\n\t\n\tpossible_targets.sort_custom(func(a, b):\n\t\tvar id_a = a.faction_data.resource_path.get_file().get_basename()\n\t\tvar id_b = b.faction_data.resource_path.get_file().get_basename()\n\t\tvar score_a = ai_player.faction_data.relationships.get(id_a, 0)\n\t\tvar score_b = ai_player.faction_data.relationships.get(id_b, 0)\n\t\treturn score_a < score_b\n\t)\n\n\tvar most_hated_target = possible_targets[0]\n\tLogger.log(\"Sorted targets by relationship. Most hated is %s.\" % most_hated_target.faction_data.leader_name)\n\treturn most_hated_target\n\nstatic func find_card_of_type(hand: Array, card_type: CardData.CardType) -> String:\n\tfor card_id in hand:\n\t\tvar card_data = CardDatabase.get_card_data(card_id)\n\t\tif card_data and card_data.card_type == card_type:\n\t\t\treturn card_id\n\treturn \"\"\n",
			"exports": [],
			"functions": [],
			"language": "gd",
			"path": "res:///scripts/ai/AIController.gd",
			"signals": []
		},
		{
			"content": "# (This code is indented with tabs)\n# This class defines the data for a single player in a match.\nclass_name PlayerState\nextends RefCounted\n\nvar faction_data: FactionData\nvar current_population: int\nvar current_treasury: int\nvar current_morale: float\nvar current_ap: int\nvar is_ai: bool\nvar player_index: int\nvar hand: Array = []\nvar status_effects: Array = []\n# var is_patron_of_human: bool = false # We removed this from our last design change.\n\n# The constructor function. There should only be ONE of these.\nfunc _init(p_faction_data: FactionData, p_is_ai: bool, p_index: int):\n\tself.faction_data = p_faction_data\n\tself.is_ai = p_is_ai\n\tself.player_index = p_index\n\t\n\tself.current_population = p_faction_data.starting_population\n\tself.current_treasury = p_faction_data.starting_treasury\n\tself.current_morale = p_faction_data.starting_morale\n\tself.current_ap = 0\n",
			"exports": [],
			"functions": [
				"func _init(p_faction_data: FactionData, p_is_ai: bool, p_index: int):"
			],
			"language": "gd",
			"path": "res:///scripts/data/PlayerState.gd",
			"signals": []
		},
		{
			"content": "# (This code is indented with tabs)\n@tool\nclass_name CardData\nextends Resource\n\n# --- 1. The Preset Selector ---\n# This enum will become our dropdown menu in the Inspector.\nenum CardPreset {\n\tNONE,\n\t# Delivery\n\tICBM, SLBM, STRATEGIC_BOMBER, HYPERSONIC_MISSILE,\n\t# Payload\n\tTACTICAL_WARHEAD, STRATEGIC_WARHEAD, MULTI_MEGATON_WARHEAD, EMP_WARHEAD, DIRTY_BOMB, NEUTRON_BOMB,\n\t# InfoWar\n\tVIRAL_DISINFORMATION, DEEPFAKE_SCANDAL, SUPPLY_CHAIN_HACK, GPS_SPOOFING,\n\t# Utility\n\tINTELLIGENCE_AGENCY, SABOTAGE, DIPLOMATIC_SUMMIT, ASSASSINATE_SCIENTIST, COUP_DETAT,\n\t# Defense\n\tABM_SILOS, COUNTER_PROPAGANDA, HARDENED_BUNKERS, MILITARY_GRADE_FIREWALL, COUNTER_INTELLIGENCE_NETWORK, PALACE_GUARD\n}\n\n# --- 2. The Central Database (The GDD, in code form) ---\n# This is a true const using integer keys for reliability in the editor.\nconst PRESET_DATA = {\n\t# Delivery\n\t1:  { \"name\": \"ICBM\", \"type\": 0, \"desc\": \"Reliable silo-launched missile.\", \"chance\": 0.95 },\n\t2:  { \"name\": \"SLBM\", \"type\": 0, \"desc\": \"Undetectable submarine-launched missile.\", \"chance\": 0.90 },\n\t3:  { \"name\": \"Strategic Bomber\", \"type\": 0, \"desc\": \"Vulnerable but versatile aircraft.\", \"chance\": 0.75 },\n\t4:  { \"name\": \"Hypersonic Missile\", \"type\": 0, \"desc\": \"Advanced missile that ignores standard ABM defenses.\", \"chance\": 0.85 },\n\t# Payload\n\t5:  { \"name\": \"Tactical Warhead\", \"type\": 1, \"desc\": \"A small, 1-10 Megaton payload for precise strikes.\", \"damage\": 10 },\n\t6:  { \"name\": \"Strategic Warhead\", \"type\": 1, \"desc\": \"A standard 20-50 Megaton thermonuclear payload.\", \"damage\": 50 },\n\t7:  { \"name\": \"Multi-Megaton Warhead\", \"type\": 1, \"desc\": \"A massive 100+ Megaton city-killer. Use has severe consequences.\", \"damage\": 100 },\n\t8:  { \"name\": \"EMP Warhead\", \"type\": 1, \"desc\": \"Deals no population damage. Target loses 2 AP and discards 1 card.\", \"damage\": 0 },\n\t9:  { \"name\": \"Dirty Bomb\", \"type\": 1, \"desc\": \"Deals 10 damage and applies 'Fallout' for 3 turns (loses pop/treasury).\", \"damage\": 10 },\n\t10: { \"name\": \"Neutron Bomb\", \"type\": 1, \"desc\": \"Deals 75 damage and massively reduces Morale.\", \"damage\": 75 },\n\t# InfoWar\n\t11: { \"name\": \"Viral Disinformation\", \"type\": 2, \"desc\": \"Deals 15 damage via civil unrest and reduces Morale.\", \"damage\": 15 },\n\t12: { \"name\": \"Deepfake Scandal\", \"type\": 2, \"desc\": \"Target's Morale plummets. Diplomatic relations with all others are damaged.\" },\n\t13: { \"name\": \"Supply Chain Hack\", \"type\": 2, \"desc\": \"Target loses Treasury. 'Build' action cost is doubled next turn.\" },\n\t14: { \"name\": \"GPS Spoofing\", \"type\": 2, \"desc\": \"For the next turn, the target's DELIVERY cards have their success_chance massively reduced.\" },\n\t# Utility\n\t15: { \"name\": \"Intelligence Agency\", \"type\": 3, \"desc\": \"View a target's hand and expose one card to all players.\" },\n\t16: { \"name\": \"Sabotage\", \"type\": 3, \"desc\": \"Force a target to discard one random DELIVERY or DEFENSE card.\" },\n\t17: { \"name\": \"Diplomatic Summit\", \"type\": 3, \"desc\": \"Spend Treasury to significantly improve relations with a target.\" },\n\t18: { \"name\": \"Assassinate Scientist\", \"type\": 3, \"desc\": \"Permanently remove an opponent's most dangerous technological advantage.\" },\n\t19: { \"name\": \"Coup d'état\", \"type\": 3, \"desc\": \"The ultimate soft power weapon. Target loses their next turn and suffers a massive Morale penalty.\" },\n\t# Defense\n\t20: { \"name\": \"ABM Silos\", \"type\": 4, \"desc\": \"Grants 'Missile Shield' for one round, stopping one ICBM or SLBM.\" },\n\t21: { \"name\": \"Counter-Propaganda\", \"type\": 4, \"desc\": \"Grants 'Firewall' for one round, stopping one InfoWar attack.\" },\n\t22: { \"name\": \"Hardened Bunkers\", \"type\": 4, \"desc\": \"Passive: Halves population damage from the next successful nuclear attack.\" },\n\t23: { \"name\": \"Military-Grade Firewall\", \"type\": 4, \"desc\": \"Negates one incoming Supply Chain Hack or GPS Spoofing attack.\" },\n\t24: { \"name\": \"Counter-Intelligence Network\", \"type\": 4, \"desc\": \"Negates one incoming Sabotage or Assassinate Scientist action.\" },\n\t25: { \"name\": \"Palace Guard\", \"type\": 4, \"desc\": \"The only defense that can foil a Coup d'état attempt.\" }\n}\n\n# --- 3. The \"Trigger\" Variable ---\n@export var card_preset: CardPreset = CardPreset.NONE:\n\tset(value):\n\t\tcard_preset = value\n\t\tif Engine.is_editor_hint() and card_preset != CardPreset.NONE:\n\t\t\tcall_deferred(\"_populate_from_preset\", value)\n\n# --- 4. The Data Fields ---\n# These are the properties that will be saved in your .tres files.\n@export_group(\"Card Identity\")\n@export var card_name: String = \"\"\n@export var card_art: Texture2D\n@export_multiline var description: String = \"\"\n\n@export_group(\"Card Logic\")\n@export var card_type: CardData.CardType # This uses the CardType enum defined below\n@export var damage: int = 0\n@export var success_chance: float = 1.0\n\n# This is the enum that card_type uses. It must be defined in the script.\nenum CardType { DELIVERY, PAYLOAD, INFO_WAR, UTILITY, DEFENSE }\n\n# --- 5. The Magic Function ---\nfunc _populate_from_preset(preset_value):\n\tif not PRESET_DATA.has(preset_value): return\n\tvar data = PRESET_DATA[preset_value]\n\t\n\tself.card_name = data.get(\"name\", \"\")\n\tself.card_type = data.get(\"type\", 0)\n\tself.description = data.get(\"desc\", \"\")\n\tself.damage = data.get(\"damage\", 0)\n\tself.success_chance = data.get(\"chance\", 1.0)\n\t\n\temit_changed()\n\tprint(\"Card data populated from preset: \", self.card_name)\n",
			"exports": [
				"@export var card_preset: CardPreset = CardPreset.NONE:",
				"@export_group(\"Card Identity\")",
				"@export var card_name: String = \"\"",
				"@export var card_art: Texture2D",
				"@export_multiline var description: String = \"\"",
				"@export_group(\"Card Logic\")",
				"@export var card_type: CardData.CardType # This uses the CardType enum defined below",
				"@export var damage: int = 0",
				"@export var success_chance: float = 1.0"
			],
			"functions": [
				"func _populate_from_preset(preset_value):"
			],
			"language": "gd",
			"path": "res:///scripts/data/card_data.gd",
			"signals": []
		},
		{
			"content": "# (This code is indented with tabs)\n@tool\nclass_name FactionData\nextends Resource\n\n# --- The Preset Selector ---\nenum FactionPreset {\n\tNONE,\n\tUSA, RUSSIA, CHINA, UK, NORTH_KOREA, IRAN, INDIA, PAKISTAN, ISRAEL,\n\tFRANCE, GERMANY, ITALY, TURKEY, UKRAINE, JAPAN\n}\n\n# --- The Database ---\nconst PRESET_DATA = {\n\t1: { # USA\n\t\t\"faction_name\": \"Freedom Inc.\", \"leader_name\": \"President Don T. Rump\",\n\t\t\"population\": 100, \"treasury\": 200, \"morale\": 0.75, \"ap\": 3\n\t},\n\t2: { # RUSSIA\n\t\t\"faction_name\": \"The Mother-lode\", \"leader_name\": \"President-for-Life Vlad 'The Impaler' Puttin\",\n\t\t\"population\": 120, \"treasury\": 100, \"morale\": 0.85, \"ap\": 3\n\t},\n\t3: { # CHINA\n\t\t\"faction_name\": \"The People's Social Harmony Co.\", \"leader_name\": \"Eternal Chairman Xi\",\n\t\t\"population\": 150, \"treasury\": 175, \"morale\": 0.80, \"ap\": 4\n\t},\n\t4: { # UK\n\t\t\"faction_name\": \"The Once-and-Future Empire\", \"leader_name\": \"Prime Minister 'Bojo' Jumbling\",\n\t\t\"population\": 80, \"treasury\": 120, \"morale\": 0.85, \"ap\": 3\n\t},\n\t5: { # NORTH_KOREA\n\t\t\"faction_name\": \"The Democratic People's Rocket Club\", \"leader_name\": \"Supreme Leader Kim Jong Fun\",\n\t\t\"population\": 40, \"treasury\": 20, \"morale\": 0.90, \"ap\": 2\n\t},\n\t6: { # IRAN\n\t\t\"faction_name\": \"The Divine Mandate\", \"leader_name\": \"Supreme Theocrat Ali Khameanie\",\n\t\t\"population\": 70, \"treasury\": 60, \"morale\": 0.80, \"ap\": 3\n\t},\n\t7: { # INDIA\n\t\t\"faction_name\": \"Bharat Unlimited\", \"leader_name\": \"Prime Minister Narinder 'The Tiger' Moody\",\n\t\t\"population\": 160, \"treasury\": 120, \"morale\": 0.70, \"ap\": 3\n\t},\n\t8: { # PAKISTAN\n\t\t\"faction_name\": \"The State of Pak-istan\", \"leader_name\": \"Generalissimo Al-Pocalypse\",\n\t\t\"population\": 60, \"treasury\": 70, \"morale\": 0.75, \"ap\": 3\n\t},\n\t9: { # ISRAEL\n\t\t\"faction_name\": \"The Iron Dome Corporation\", \"leader_name\": \"Prime Minister 'Bibi' Not-on-your-yahoo\",\n\t\t\"population\": 30, \"treasury\": 150, \"morale\": 0.90, \"ap\": 4\n\t},\n\t# --- NEW FACTIONS ADDED BELOW ---\n\t10: { # FRANCE\n\t\t\"faction_name\": \"La République Chic\", \"leader_name\": \"Président Emmanuel 'Le Grand' Macaron\",\n\t\t\"population\": 85, \"treasury\": 140, \"morale\": 0.90, \"ap\": 4\n\t},\n\t11: { # GERMANY\n\t\t\"faction_name\": \"The Euro-Zone Industrial Complex\", \"leader_name\": \"Chancellor Klaus von Efficiency\",\n\t\t\"population\": 90, \"treasury\": 220, \"morale\": 0.80, \"ap\": 2\n\t},\n\t12: { # ITALY\n\t\t\"faction_name\": \"The Gesticulating Republic\", \"leader_name\": \"Prime Minister Silvio 'Bunga Bunga' Bellissimo\",\n\t\t\"population\": 75, \"treasury\": 110, \"morale\": 0.85, \"ap\": 3\n\t},\n\t13: { # TURKEY\n\t\t\"faction_name\": \"The Neo-Ottoman Confederacy\", \"leader_name\": \"Sultan Recep 'The Magnificent' Tayyipalooza\",\n\t\t\"population\": 80, \"treasury\": 90, \"morale\": 0.80, \"ap\": 3\n\t},\n\t14: { # UKRAINE\n\t\t\"faction_name\": \"The Unbreakable Nation\", \"leader_name\": \"President Volodomyr 'The Unyielding' Zelenko\",\n\t\t\"population\": 60, \"treasury\": 40, \"morale\": 0.95, \"ap\": 4\n\t},\n\t15: { # JAPAN\n\t\t\"faction_name\": \"The Anime & Robotics Shogunate\", \"leader_name\": \"Prime Minister Fumio 'Salaryman' Kishida\",\n\t\t\"population\": 95, \"treasury\": 180, \"morale\": 0.80, \"ap\": 2\n\t}\n}\n\n# --- The \"Trigger\" ---\n@export var faction_preset: FactionPreset = FactionPreset.NONE:\n\tset(value):\n\t\tfaction_preset = value\n\t\tif Engine.is_editor_hint() and faction_preset != FactionPreset.NONE:\n\t\t\t# --- THE FINAL FIX ---\n\t\t\t# We call the function DEFERRED to avoid a race condition in the editor.\n\t\t\tcall_deferred(\"_populate_from_preset\", value)\n\n# --- The Data Fields ---\n@export_group(\"Faction Identity\")\n@export var faction_name: String = \"\"\n@export var leader_name: String = \"\"\n@export var avatar: Texture2D\n\n@export_group(\"Starting Stats\")\n@export var starting_population: int = 100\n@export var starting_treasury: int = 100\n@export var starting_morale: float = 0.75\n@export var base_action_points: int = 3\n\n@export_group(\"AI & Diplomacy\")\n@export var personality_traits: Array[FactionData.Traits]\n@export var relationships: Dictionary = {}\n\nenum Traits {\n\tAGGRESSIVE, DEFENSIVE, PATIENT, UNPREDICTABLE, OPPORTUNIST, STRATEGIC,\n\tDIPLOMATIC, TREACHEROUS, RUTHLESS, PROUD, CHARISMATIC, EXPANSIONIST, ISOLATIONIST\n}\n\n# --- The \"Magic\" Function ---\nfunc _populate_from_preset(preset_value):\n\tif not PRESET_DATA.has(preset_value):\n\t\treturn\n\t\n\tvar data = PRESET_DATA[preset_value]\n\t\n\tself.faction_name = data.get(\"faction_name\", \"\")\n\tself.leader_name = data.get(\"leader_name\", \"\")\n\tself.starting_population = data.get(\"population\", 100)\n\tself.starting_treasury = data.get(\"treasury\", 100)\n\tself.starting_morale = data.get(\"morale\", 0.75)\n\tself.base_action_points = data.get(\"ap\", 3)\n\t\n\t# This function tells the editor that the resource has changed and needs a refresh.\n\temit_changed()\n\t\n\tprint(\"Faction data populated from preset: \", self.faction_name)\n",
			"exports": [
				"@export var faction_preset: FactionPreset = FactionPreset.NONE:",
				"@export_group(\"Faction Identity\")",
				"@export var faction_name: String = \"\"",
				"@export var leader_name: String = \"\"",
				"@export var avatar: Texture2D",
				"@export_group(\"Starting Stats\")",
				"@export var starting_population: int = 100",
				"@export var starting_treasury: int = 100",
				"@export var starting_morale: float = 0.75",
				"@export var base_action_points: int = 3",
				"@export_group(\"AI & Diplomacy\")",
				"@export var personality_traits: Array[FactionData.Traits]",
				"@export var relationships: Dictionary = {}"
			],
			"functions": [
				"func _populate_from_preset(preset_value):"
			],
			"language": "gd",
			"path": "res:///scripts/data/faction_data.gd",
			"signals": []
		},
		{
			"content": "# This script loads all CardData resources into memory.\n# It acts as a central, read-only database for all possible cards in the game.\nextends Node\n\nvar database: Dictionary = {}\n\nfunc _ready():\n\tprint(\"CardDatabase: Loading all card data...\")\n\tload_cards_from_directory(\"res://data/cards/\")\n\tprint(\"CardDatabase: Loading complete. Found %s cards.\" % database.size())\n\nfunc load_cards_from_directory(path: String):\n\tvar dir = DirAccess.open(path)\n\tif dir:\n\t\tdir.list_dir_begin()\n\t\tvar file_name = dir.get_next()\n\t\twhile file_name != \"\":\n\t\t\tif file_name.ends_with(\".tres\"):\n\t\t\t\tvar card_id = file_name.get_basename()\n\t\t\t\tvar card_resource = load(path + file_name)\n\t\t\t\tif card_resource and card_resource is CardData:\n\t\t\t\t\tdatabase[card_id] = card_resource\n\t\t\t\t\tprint(\"Loaded card: %s\" % card_id)\n\t\t\t\telse:\n\t\t\t\t\tprint(\"ERROR: Failed to load card resource: %s\" % file_name)\n\t\t\tfile_name = dir.get_next()\n\telse:\n\t\tprint(\"ERROR: Could not open directory at path: \" + path)\n\n# Public function to get a single card's data by its ID.\nfunc get_card_data(card_id: String) -> CardData:\n\treturn database.get(card_id, null) as CardData\n\n# Public function to get a list of all available card IDs.\nfunc get_all_card_ids() -> Array:\n\treturn database.keys()\n\n# A useful helper to get all card IDs of a specific type.\nfunc get_card_ids_by_type(card_type: CardData.CardType) -> Array:\n\tvar results: Array = []\n\tfor card_id in database:\n\t\tvar card: CardData = database[card_id]\n\t\tif card.card_type == card_type:\n\t\t\tresults.append(card_id)\n\treturn results\n",
			"exports": [],
			"functions": [
				"func _ready():",
				"func load_cards_from_directory(path: String):",
				"func get_card_data(card_id: String) -> CardData:",
				"func get_all_card_ids() -> Array:",
				"func get_card_ids_by_type(card_type: CardData.CardType) -> Array:"
			],
			"language": "gd",
			"path": "res:///scripts/managers/CardDatabase.gd",
			"signals": []
		},
		{
			"content": "# (This script is our global message board)\nextends Node\n\n# --- THIS IS THE FIX ---\n# The '@warning_ignore' annotation tells the Godot script checker\n# to not show a warning for the specific code on the next line.\n@warning_ignore(\"unused_signal\")\nsignal deployment_choice_made(choice_data)\n",
			"exports": [],
			"functions": [],
			"language": "gd",
			"path": "res:///scripts/managers/EventBus.gd",
			"signals": [
				"signal deployment_choice_made(choice_data)"
			]
		},
		{
			"content": "# This script's job is to load all our FactionData resources into memory.\nextends Node\n\nvar database: Dictionary = {}\n\nfunc _ready():\n\tprint(\"FactionDatabase: Loading all faction data...\")\n\tload_factions_from_directory(\"res://data/factions/\")\n\tprint(\"FactionDatabase: Loading complete. Found %s factions.\" % database.size())\n\nfunc load_factions_from_directory(path: String):\n\tvar dir = DirAccess.open(path)\n\tif dir:\n\t\tdir.list_dir_begin()\n\t\tvar file_name = dir.get_next()\n\t\twhile file_name != \"\":\n\t\t\tif file_name.ends_with(\".tres\"):\n\t\t\t\tvar faction_id = file_name.get_basename()\n\t\t\t\t\n\t\t\t\t# --- NEW DEBUGGING LINE ---\n\t\t\t\t# This will show us the exact ID being created for each file.\n\t\t\t\tprint(\"...Found file '%s', creating database entry with ID: '%s'\" % [file_name, faction_id])\n\n\t\t\t\tvar faction_resource = load(path + file_name)\n\t\t\t\tif faction_resource and faction_resource is FactionData:\n\t\t\t\t\tdatabase[faction_id] = faction_resource\n\t\t\t\t\tprint(\"Loaded faction: %s\" % faction_id)\n\t\t\t\telse:\n\t\t\t\t\tprint(\"ERROR: Failed to load faction resource: %s\" % file_name)\n\t\t\tfile_name = dir.get_next()\n\telse:\n\t\tprint(\"Error: Could not open directory at path: \" + path)\n\nfunc get_faction_data(faction_id: String) -> FactionData:\n\treturn database.get(faction_id, null) as FactionData\n\nfunc get_all_faction_ids() -> Array:\n\treturn database.keys()\n",
			"exports": [],
			"functions": [
				"func _ready():",
				"func load_factions_from_directory(path: String):",
				"func get_faction_data(faction_id: String) -> FactionData:",
				"func get_all_faction_ids() -> Array:"
			],
			"language": "gd",
			"path": "res:///scripts/managers/FactionDatabase.gd",
			"signals": []
		},
		{
			"content": "# (This code is indented with tabs)\nextends Node\n\n# We preload our effect scene so we can create instances of it.\nconst FloatingTextScene = preload(\"res://scenes/effects/FloatingText.tscn\")\n\n# This is the main function other scripts will call.\nfunc show_damage_text(damage_amount: int, target_panel: PlayerPanel):\n\tif not is_instance_valid(target_panel):\n\t\treturn # Don't do anything if the target panel is gone.\n\t\n\t# Create an instance of our floating text scene.\n\tvar floating_text = FloatingTextScene.instantiate()\n\t\n\t# We need to add it to the main scene tree to make it visible.\n\t# get_tree().root gives us access to the top of the scene.\n\tget_tree().root.add_child(floating_text)\n\t\n\t# Find the center position of the target's panel to spawn the text.\n\tvar start_pos = target_panel.global_position + (target_panel.size / 2)\n\t\n\t# Tell the text what to say and where to start.\n\tfloating_text.start(\"-%sM\" % damage_amount, start_pos)\n",
			"exports": [],
			"functions": [
				"func show_damage_text(damage_amount: int, target_panel: PlayerPanel):"
			],
			"language": "gd",
			"path": "res:///scripts/managers/FeedbackManager.gd",
			"signals": []
		},
		{
			"content": "# (This is the full, final, and correct GameManager script)\nextends Node\n\nsignal game_state_changed\nsignal turn_started(player_state)\n\nvar active_players: Array[PlayerState] = []\nvar current_player_index: int = 0\nvar is_game_running: bool = false\nvar main_deck: Array = []\nvar build_cost: int = 25\n\nconst AP_COST_BUILD = 1\nconst AP_COST_INFOWAR = 1\nconst AP_COST_CONVENTIONAL = 2\n\nconst INVESTMENT_SECTORS = [\n\t{\"id\": 0, \"name\": \"Nuclear Program\", \"ap_cost\": 2, \"treasury_cost\": 100, \"type\": CardData.CardType.PAYLOAD},\n\t{\"id\": 1, \"name\": \"Aerospace & Ballistics\", \"ap_cost\": 2, \"treasury_cost\": 80, \"type\": CardData.CardType.DELIVERY},\n\t{\"id\": 2, \"name\": \"Cyber Warfare Division\", \"ap_cost\": 1, \"treasury_cost\": 50, \"type\": CardData.CardType.INFO_WAR},\n\t{\"id\": 3, \"name\": \"Intelligence Agency\", \"ap_cost\": 1, \"treasury_cost\": 40, \"type\": CardData.CardType.UTILITY},\n\t{\"id\": 4, \"name\": \"Civil Defense Initiative\", \"ap_cost\": 1, \"treasury_cost\": 30, \"type\": CardData.CardType.DEFENSE}\n]\n\nvar selected_delivery_card: CardData = null\nvar selected_payload_card: CardData = null\nvar selected_infowar_card: CardData = null\nvar selected_target: PlayerState = null\n\nfunc start_new_game(faction_ids: Array):\n\tactive_players.clear()\n\tmain_deck.clear()\n\tcurrent_player_index = 0\n\tis_game_running = true\n\tvar human_faction_data = FactionData.new()\n\thuman_faction_data.faction_name = \"Your Nation\"\n\thuman_faction_data.leader_name = \"The President\"\n\thuman_faction_data.starting_population = 100\n\thuman_faction_data.starting_treasury = 150\n\thuman_faction_data.starting_morale = 0.80\n\thuman_faction_data.base_action_points = 3\n\tvar human_player_state = PlayerState.new(human_faction_data, false, 0)\n\tactive_players.append(human_player_state)\n\tvar ai_player_index = 1\n\tfor id in faction_ids:\n\t\tvar data = FactionDatabase.get_faction_data(id)\n\t\tif data:\n\t\t\tvar new_ai_player = PlayerState.new(data, true, ai_player_index)\n\t\t\tactive_players.append(new_ai_player)\n\t\t\tai_player_index += 1\n\tsetup_deck()\n\tdeal_initial_cards(5)\n\nfunc setup_deck():\n\tmain_deck = CardDatabase.get_all_card_ids()\n\tmain_deck.append_array(CardDatabase.get_all_card_ids())\n\tmain_deck.append_array(CardDatabase.get_all_card_ids())\n\tmain_deck.shuffle()\n\tLogger.log(\"GameManager: Deck created and shuffled with %s cards.\" % main_deck.size())\n\nfunc deal_initial_cards(amount: int):\n\tfor player in active_players:\n\t\tfor i in range(amount):\n\t\t\tdraw_card(player)\n\nfunc draw_card(player_state: PlayerState):\n\tif not main_deck.is_empty():\n\t\tvar new_card_id = main_deck.pop_front()\n\t\tplayer_state.hand.append(new_card_id)\n\t\tLogger.log(\"%s drew: %s\" % [player_state.faction_data.faction_name, new_card_id])\n\telse:\n\t\tLogger.log(\"The main deck is empty!\")\n\nfunc find_random_card_of_type(card_type: CardData.CardType) -> String:\n\tvar card_pool = CardDatabase.get_card_ids_by_type(card_type)\n\tif not card_pool.is_empty():\n\t\treturn card_pool.pick_random()\n\treturn \"\"\n\nfunc get_human_player_state() -> PlayerState:\n\tif not active_players.is_empty() and not active_players[0].is_ai:\n\t\treturn active_players[0]\n\treturn null\n\nfunc player_selected_card(p_card_data: CardData):\n\tmatch p_card_data.card_type:\n\t\tCardData.CardType.DELIVERY:\n\t\t\tselected_delivery_card = p_card_data\n\t\t\tselected_infowar_card = null\n\t\tCardData.CardType.PAYLOAD:\n\t\t\tselected_payload_card = p_card_data\n\t\t\tselected_infowar_card = null\n\t\tCardData.CardType.INFO_WAR:\n\t\t\tselected_infowar_card = p_card_data\n\t\t\tselected_delivery_card = null\n\t\t\tselected_payload_card = null\n\nfunc player_selected_target(p_player_state: PlayerState):\n\tselected_target = p_player_state\n\nfunc start_turn():\n\tif active_players.is_empty(): return\n\tvar current_player = active_players[current_player_index]\n\tcurrent_player.current_ap = current_player.faction_data.base_action_points\n\tvar treasury_gain = 5 + int(current_player.current_population / 10.0 * current_player.current_morale)\n\tcurrent_player.current_treasury += treasury_gain\n\tLogger.log(\"\\n--- It's now %s's turn. ---\" % current_player.faction_data.faction_name)\n\tLogger.log(\"%s gains %d Treasury. AP reset to %d.\" % [current_player.faction_data.faction_name, treasury_gain, current_player.current_ap])\n\tturn_started.emit(current_player)\n\tif current_player.is_ai:\n\t\tprocess_ai_turn(current_player)\n\telse:\n\t\tgame_state_changed.emit()\n\nfunc next_turn():\n\tcurrent_player_index = (current_player_index + 1) % active_players.size()\n\tstart_turn()\n\nfunc process_ai_turn(ai_player: PlayerState):\n\tLogger.log(\"%s is thinking...\" % ai_player.faction_data.faction_name)\n\tgame_state_changed.emit()\n\tawait get_tree().create_timer(2.0).timeout\n\tAIController.take_turn(ai_player, active_players)\n\tgame_state_changed.emit()\n\tnext_turn()\n\nfunc process_build_action(sector_id: int):\n\tvar player = get_human_player_state()\n\tif not player: return\n\tvar sector = INVESTMENT_SECTORS[sector_id]\n\tif player.current_ap < sector.ap_cost:\n\t\tLogger.log(\"Not enough AP!\")\n\t\treturn\n\tif player.current_treasury < sector.treasury_cost:\n\t\tLogger.log(\"Not enough Treasury!\")\n\t\treturn\n\tplayer.current_ap -= sector.ap_cost\n\tplayer.current_treasury -= sector.treasury_cost\n\tvar card_to_draw = find_random_card_of_type(sector.type)\n\tif card_to_draw:\n\t\tplayer.hand.append(card_to_draw)\n\t\tLogger.log(\"Build successful! Acquired: %s\" % card_to_draw)\n\telse:\n\t\tLogger.log(\"Build failed: No cards of that type available to draw.\")\n\tgame_state_changed.emit()\n\n# Additional function to get sector information for UI display\nfunc get_investment_sector(sector_id: int) -> Dictionary:\n\treturn INVESTMENT_SECTORS[sector_id]\n\nfunc is_player_action_valid() -> bool:\n\tif selected_infowar_card and selected_target:\n\t\treturn true\n\tif selected_delivery_card and selected_payload_card and selected_target:\n\t\treturn true\n\treturn false\n\nfunc pass_turn():\n\tselected_delivery_card = null\n\tselected_payload_card = null\n\tselected_infowar_card = null\n\tselected_target = null\n\tgame_state_changed.emit()\n\tnext_turn()\n\nfunc process_player_attack():\n\tvar attacker = get_human_player_state()\n\tif not attacker: return\n\tif selected_infowar_card and selected_target:\n\t\tif attacker.current_ap < AP_COST_INFOWAR:\n\t\t\tLogger.log(\"Not enough Action Points! InfoWar attack costs %d AP.\" % AP_COST_INFOWAR)\n\t\t\treturn\n\t\tattacker.current_ap -= AP_COST_INFOWAR\n\t\texecute_infowar_attack(attacker, selected_target, selected_infowar_card)\n\t\tattacker.hand.erase(selected_infowar_card.resource_path.get_file().get_basename())\n\telif selected_delivery_card and selected_payload_card and selected_target:\n\t\tif attacker.current_ap < AP_COST_CONVENTIONAL:\n\t\t\tLogger.log(\"Not enough Action Points! Conventional attack costs %d AP.\" % AP_COST_CONVENTIONAL)\n\t\t\treturn\n\t\tattacker.current_ap -= AP_COST_CONVENTIONAL\n\t\texecute_conventional_attack(attacker, selected_target, selected_delivery_card, selected_payload_card)\n\t\tattacker.hand.erase(selected_delivery_card.resource_path.get_file().get_basename())\n\t\tattacker.hand.erase(selected_payload_card.resource_path.get_file().get_basename())\n\telse:\n\t\tLogger.log(\"Invalid selection for attack.\")\n\t\treturn\n\tselected_delivery_card = null\n\tselected_payload_card = null\n\tselected_infowar_card = null\n\tselected_target = null\n\tif attacker.current_ap <= 0:\n\t\tLogger.log(\"Out of Action Points. Ending turn automatically.\")\n\t\tpass_turn()\n\telse:\n\t\tLogger.log(\"Action complete. %d AP remaining.\" % attacker.current_ap)\n\t\tgame_state_changed.emit()\n\nfunc execute_conventional_attack(attacker: PlayerState, target: PlayerState, delivery: CardData, payload: CardData):\n\tLogger.log(\"%s launches a %s with a %s at %s!\" % [attacker.faction_data.faction_name, delivery.card_name, payload.card_name, target.faction_data.faction_name])\n\tif randf() < delivery.success_chance:\n\t\tvar damage = payload.damage\n\t\tLogger.log(\"DIRECT HIT! %s loses %s million people.\" % [target.faction_data.faction_name, damage])\n\t\ttarget.current_population -= damage\n\t\tif target.current_population < 0:\n\t\t\ttarget.current_population = 0\n\t\t\tLogger.log(\"%s has been annihilated!\" % target.faction_data.faction_name)\n\telse:\n\t\tLogger.log(\"The attack was intercepted!\")\n\nfunc execute_infowar_attack(attacker: PlayerState, target: PlayerState, card: CardData):\n\tLogger.log(\"%s uses '%s' on %s!\" % [attacker.faction_data.faction_name, card.card_name, target.faction_data.faction_name])\n\tvar damage = card.damage\n\tif damage > 0:\n\t\tLogger.log(\"It's super effective! %s loses %s million people to chaos and dissent.\" % [target.faction_data.faction_name, damage])\n\t\ttarget.current_population -= damage\n\t\tif target.current_population < 0:\n\t\t\ttarget.current_population = 0\n",
			"exports": [],
			"functions": [
				"func start_new_game(faction_ids: Array):",
				"func setup_deck():",
				"func deal_initial_cards(amount: int):",
				"func draw_card(player_state: PlayerState):",
				"func find_random_card_of_type(card_type: CardData.CardType) -> String:",
				"func get_human_player_state() -> PlayerState:",
				"func player_selected_card(p_card_data: CardData):",
				"func player_selected_target(p_player_state: PlayerState):",
				"func start_turn():",
				"func next_turn():",
				"func process_ai_turn(ai_player: PlayerState):",
				"func process_build_action(sector_id: int):",
				"func get_investment_sector(sector_id: int) -> Dictionary:",
				"func is_player_action_valid() -> bool:",
				"func pass_turn():",
				"func process_player_attack():",
				"func execute_conventional_attack(attacker: PlayerState, target: PlayerState, delivery: CardData, payload: CardData):",
				"func execute_infowar_attack(attacker: PlayerState, target: PlayerState, card: CardData):"
			],
			"language": "gd",
			"path": "res:///scripts/managers/GameManager.gd",
			"signals": [
				"signal game_state_changed",
				"signal turn_started(player_state)"
			]
		},
		{
			"content": "# (This code is indented with tabs)\nextends Node\n\nvar log_label: RichTextLabel\n\nfunc log(message: String):\n\tif log_label:\n\t\t# Add the new message and a newline character.\n\t\tlog_label.append_text(message + \"\\n\")\n\t\t\n\t\t# --- THE FIX ---\n\t\t# We need to wait one frame for the label to update its size\n\t\t# before we can accurately scroll to the new bottom.\n\t\t# 'await get_tree().process_frame' is the Godot 4 way to do this.\n\t\tawait get_tree().process_frame\n\t\t\n\t\t# Get the vertical scrollbar and set its value to the maximum.\n\t\tvar scrollbar = log_label.get_v_scroll_bar()\n\t\tscrollbar.value = scrollbar.max_value\n\t\n\t# Also print to the console for debugging purposes.\n\tprint(message)\n",
			"exports": [],
			"functions": [
				"func log(message: String):"
			],
			"language": "gd",
			"path": "res:///scripts/managers/Logger.gd",
			"signals": []
		},
		{
			"content": "# (This code is indented with tabs)\nextends Node\n\n# This function analyzes the list of active players.\n# It returns a dictionary with the results.\nfunc check_win_conditions(active_players: Array) -> Dictionary:\n\tvar players_alive = []\n\tfor p in active_players:\n\t\tif p.current_population > 0:\n\t\t\tplayers_alive.append(p)\n\t\n\tif players_alive.size() <= 1:\n\t\t# The game is over!\n\t\tvar winner_state = null\n\t\tif not players_alive.is_empty():\n\t\t\twinner_state = players_alive[0]\n\t\t\t\n\t\treturn {\n\t\t\t\"is_game_over\": true,\n\t\t\t\"winner\": winner_state\n\t\t}\n\telse:\n\t\t# The game continues.\n\t\treturn {\n\t\t\t\"is_game_over\": false,\n\t\t\t\"winner\": null\n\t\t}\n",
			"exports": [],
			"functions": [
				"func check_win_conditions(active_players: Array) -> Dictionary:"
			],
			"language": "gd",
			"path": "res:///scripts/managers/WinConditionManager.gd",
			"signals": []
		},
		{
			"content": "# (This code is indented with tabs)\nclass_name AvatarScreen2D\nextends SubViewportContainer\n\n@onready var avatar_image: TextureRect = $SubViewport/AvatarImage\n\n# This is the only function we need. It sets the texture.\nfunc set_avatar_texture(texture: Texture2D):\n\tavatar_image.texture = texture\n",
			"exports": [],
			"functions": [
				"func set_avatar_texture(texture: Texture2D):"
			],
			"language": "gd",
			"path": "res:///scripts/ui/AvatarScreen2D.gd",
			"signals": []
		},
		{
			"content": "# (This code is indented with tabs)\nextends Label\n\n# This function is called when the label is created.\n# It starts the animation.\nfunc start(text_to_show: String, start_position: Vector2):\n\ttext = text_to_show\n\tposition = start_position\n\t\n\t# A tween animates properties over time.\n\tvar tween = create_tween()\n\t# Make the tween run in parallel, so move and fade happen at the same time.\n\ttween.set_parallel(true)\n\t\n\t# Animate the 'position' property. Move it 60 pixels up from its start.\n\ttween.tween_property(self, \"position:y\", start_position.y - 60, 1.5).set_trans(Tween.TRANS_CUBIC).set_ease(Tween.EASE_OUT)\n\t# Animate the 'modulate' property (color/alpha). Fade its alpha to 0.\n\ttween.tween_property(self, \"modulate:a\", 0.0, 1.5).set_trans(Tween.TRANS_CUBIC)\n\t\n\t# When the tween is finished, remove the label from the game.\n\ttween.finished.connect(queue_free)\n",
			"exports": [],
			"functions": [
				"func start(text_to_show: String, start_position: Vector2):"
			],
			"language": "gd",
			"path": "res:///FloatingText.gd",
			"signals": []
		},
		{
			"content": "# (This is the full, final script that listens to the EventBus)\nextends Node2D\n\n@onready var console_anim_player = $SubViewportContainer/SubViewport/Console3D/console/Physical3DButtons/AnimationPlayer\n@onready var interaction_controller: InteractionController = $SubViewportContainer/SubViewport/Console3D/Camera3D\n@onready var deployment_screen: Control = $SubViewportContainer/SubViewport/Console3D/console/MainScreen3D/console/MainScreen/SubViewport/DeploymentScreen\n# --- MODIFICATION ---\n# Added a reference to the Input Shield's CollisionShape3D.\n# Adjust the path if the actual node structure differs.\n@onready var input_shield_collision_shape: CollisionShape3D = $SubViewportContainer/SubViewport/Console3D/console/MainScreen3D/console/MainScreen/InputShield_StaticBody/InputShield_CollisionShape\n\nconst CardChooserScene = preload(\"res://scenes/ui/CardChooser.tscn\")\n\nvar selected_enemy_button: PhysicalButton3D = null\nvar enemy_buttons: Array = []\n\n# --- MODIFICATION ---\n# Added a flag to control verbose shield state logging in _process\nvar _log_shield_state_verbose = false\n\nfunc _ready():\n\tawait get_tree().create_timer(0.1).timeout\n\tvar console: ConsoleController = $SubViewportContainer/SubViewport/Console3D\n\tdeployment_screen = console.get_node(\"console/MainScreen3D/console/MainScreen/SubViewport/DeploymentScreen\")\n\t\n\tGameManager.game_state_changed.connect(update_all_ui)\n\tGameManager.turn_started.connect(on_turn_started)\n\t\n\tEventBus.deployment_choice_made.connect(_on_deployment_choice_made)\n\t\n\tconnect_3d_buttons()\n\t\n\tif console and console.game_log_label:\n\t\tLogger.log_label = console.game_log_label\n\t\tLogger.log(\"--- GAME LOG CONNECTION ESTABLISHED ---\")\n\t\n\t# --- MODIFICATION ---\n\t# Definitive check for Input Shield Collision Shape reference\n\tif input_shield_collision_shape:\n\t\tLogger.log(\"--- INPUT SHIELD COLLISION SHAPE SUCCESSFULLY ACQUIRED ---\")\n\t\tLogger.log(\"--- PATH: %s ---\" % input_shield_collision_shape.get_path())\n\t\t# Connect directly to the StaticBody3D parent, which should have the input_event signal\n\t\tvar shield_static_body = input_shield_collision_shape.get_parent()\n\t\tif shield_static_body:\n\t\t\tLogger.log(\"--- SHIELD STATIC BODY FOUND: %s ---\" % shield_static_body.name)\n\t\t\t# Attempt connection and check result\n\t\t\tvar connection_result = shield_static_body.input_event.connect(_on_input_shield_clicked)\n\t\t\tif connection_result == OK:\n\t\t\t\tLogger.log(\"--- INPUT SHIELD SIGNAL CONNECTED SUCCESSFULLY ---\")\n\t\t\telse:\n\t\t\t\tLogger.log(\"ERROR: Failed to connect input shield signal. Error code: %d\" % connection_result)\n\t\telse:\n\t\t\tLogger.log(\"ERROR: Shield Static Body NOT found!\")\n\t\t# Initially disable the shield's collision shape\n\tinput_shield_collision_shape.disabled = true\n\tLogger.log(\"--- INPUT SHIELD INITIALLY DISABLED (State: %s) ---\" % input_shield_collision_shape.disabled)\n\t\n\tsetup_game()\n\n\n# --- MODIFICATION ---\n# Added _process to log shield state if _log_shield_state_verbose is true\nfunc _process(_delta):\n\tif _log_shield_state_verbose and input_shield_collision_shape:\n\t\tif not input_shield_collision_shape.disabled:\n\t\t\tLogger.log(\"--- SHIELD STATE (VERBOSE): ENABLED ---\")\n\nfunc _unhandled_input(event: InputEvent):\n\tif interaction_controller:\n\t\tinteraction_controller.check_for_click(event)\n\nfunc connect_3d_buttons():\n\tvar console_model_root = $SubViewportContainer/SubViewport/Console3D/console\n\tif console_model_root:\n\t\tfor node in console_model_root.find_children(\"*\", \"StaticBody3D\", true):\n\t\t\tif node is PhysicalButton3D:\n\t\t\t\tnode.button_pressed.connect(_on_3d_button_pressed)\n\t\t\t\tnode.set_animation_player(console_anim_player)\n\t\t\t\tif node.target_mesh.name.begins_with(\"EnemyButton\"):\n\t\t\t\t\tenemy_buttons.append(node)\n\nfunc _on_3d_button_pressed(mesh_name: String):\n\tLogger.log(\"--- 3D Button Pressed: %s ---\" % mesh_name)\n\tvar button_node: PhysicalButton3D = find_button_by_mesh_name(mesh_name)\n\tif not button_node:\n\t\tLogger.log(\"ERROR: PhysicalButton3D node not found for mesh: %s\" % mesh_name)\n\t\treturn\n\t\n\tvar is_enemy_button = mesh_name.begins_with(\"EnemyButton\")\n\t\n\tif is_enemy_button:\n\t\tif selected_enemy_button == button_node:\n\t\t\tbutton_node.play_animation(true)\n\t\t\tselected_enemy_button = null\n\t\t\tGameManager.player_selected_target(null)\n\t\t\tfor btn in enemy_buttons:\n\t\t\t\tbtn.enable()\n\t\telse:\n\t\t\tif selected_enemy_button:\n\t\t\t\tselected_enemy_button.play_animation(true)\n\t\t\tbutton_node.play_animation(false)\n\t\t\tselected_enemy_button = button_node\n\t\t\tfor btn in enemy_buttons:\n\t\t\t\tif btn != selected_enemy_button:\n\t\t\t\t\tbtn.disable()\n\t\t\tvar player_map = { \"EnemyButtonTopRight\": 0, \"EnemyButtonBottomRight\": 1, \"EnemyButtonTopLeft\": 2, \"EnemyButtonBottomLeft\": 3 }\n\t\t\tvar ai_players = []\n\t\t\tfor p in GameManager.active_players:\n\t\t\t\tif p.is_ai: ai_players.append(p)\n\t\t\tif player_map.has(mesh_name) and player_map[mesh_name] < ai_players.size():\n\t\t\t\tvar target_player = ai_players[player_map[mesh_name]]\n\t\t\t\tGameManager.player_selected_target(target_player)\n\t\t\treturn\n\n\tbutton_node.play_animation()\n\t\n\tif not deployment_screen:\n\t\tLogger.log(\"ERROR: DeploymentScreen node reference is not set.\")\n\t\treturn\n\n\t# --- MODIFICATION ---\n\t# According to the design principles:\n\t# 1. 3D buttons should ALWAYS remain active/interactable.\n\t# 2. The DeploymentScreen should not block general 3D input.\n\t# Therefore, we DO NOT disable `interaction_controller.process_input` here.\n\t# The responsibility for closing the menu (and potentially managing specific states)\n\t# now lies with the DeploymentScreen itself or a dedicated \"click-off\" shield.\n\n\tif mesh_name == \"EndTurnButton\":\n\t\tdeployment_screen.hide_screen() # Close the menu if it's open\n\t\t# --- MODIFICATION ---\n\t\t# Do not re-enable `process_input` here as it's no longer managed for this flow.\n\t\t_on_end_turn_pressed()\n\telif mesh_name == \"BuildButton\":\n\t\tdeployment_screen.show_choices(\"Invest in a Sector:\", GameManager.INVESTMENT_SECTORS, \"INVESTMENT\")\n\telif mesh_name == \"DeliveryButton\":\n\t\tshow_cards_on_deployment_screen(CardData.CardType.DELIVERY)\n\telif mesh_name == \"PayloadButton\":\n\t\tshow_cards_on_deployment_screen(CardData.CardType.PAYLOAD)\n\telif mesh_name == \"InfoWarButton\":\n\t\tshow_cards_on_deployment_screen(CardData.CardType.INFO_WAR)\n\telif mesh_name == \"UtilityButton\":\n\t\tshow_cards_on_deployment_screen(CardData.CardType.UTILITY)\n\telif mesh_name == \"DefenseButton\":\n\t\tshow_cards_on_deployment_screen(CardData.CardType.DEFENSE)\n\nfunc show_cards_on_deployment_screen(card_type: int):\n\tLogger.log(\"Attempting to show deployment screen for card type: %s\" % CardData.CardType.keys()[card_type])\n\tif not deployment_screen:\n\t\tLogger.log(\"ERROR: DeploymentScreen node reference is not set.\")\n\t\treturn\n\n\tvar title = CardData.CardType.keys()[card_type].capitalize()\n\tvar human_hand = GameManager.get_human_player_state().hand\n\tLogger.log(\"Player hand contains: %s\" % str(human_hand))\n\t\n\tvar card_ids_of_type = []\n\tfor card_id in human_hand:\n\t\tvar card_data = CardDatabase.get_card_data(card_id)\n\t\tif card_data and card_data.card_type == card_type:\n\t\t\tcard_ids_of_type.append(card_id)\n\n\tLogger.log(\"Found %d cards of type %s in hand.\" % [card_ids_of_type.size(), title])\n\n\tif card_ids_of_type.is_empty():\n\t\tLogger.log(\"Result: You have no cards of type: %s\" % title)\n\t\treturn\n\n\tvar card_objects = []\n\tfor id in card_ids_of_type:\n\t\tcard_objects.append(CardDatabase.get_card_data(id))\n\n\tLogger.log(\"Instructing DeploymentScreen to show %d choices.\" % card_objects.size())\n\tdeployment_screen.show_choices(\"Select a %s Card:\" % title, card_objects, \"CARD\")\n\nfunc _on_deployment_choice_made(choice_data):\n\tLogger.log(\"--- Deployment Choice Received by Main Controller ---\")\n\tif not deployment_screen:\n\t\tLogger.log(\"ERROR: DeploymentScreen node reference is not set in _on_deployment_choice_made.\")\n\t\treturn\n\t\n\tif choice_data is int:\n\t\tLogger.log(\"Choice is an INVESTMENT (ID: %d). Processing build action.\" % choice_data)\n\t\tGameManager.process_build_action(choice_data)\n\telif choice_data is CardData:\n\t\tLogger.log(\"Choice is a CARD ('%s'). Processing card selection.\" % choice_data.card_name)\n\t\tGameManager.player_selected_card(choice_data)\n\telse:\n\t\tLogger.log(\"ERROR: Received unknown choice data type: %s\" % typeof(choice_data))\n\t\n\t# Hide the deployment screen after a choice is made\n\tdeployment_screen.hide_screen()\n\t\n\t# --- MODIFICATION ---\n\t# According to the design principles, `interaction_controller.process_input`\n\t# is no longer managed by this function for the Deployment Screen flow.\n\t# It remains true to keep 3D buttons active.\n\t# If specific temporary disabling were needed for other reasons (e.g., animations),\n\t# it would be handled locally or by the shield mechanism.\n\t\n\t# --- MODIFICATION ---\n\t# Disable the input shield's collision shape when a choice is made\n\tif input_shield_collision_shape:\n\t\tinput_shield_collision_shape.disabled = true\n\t\t# --- DEBUG ---\n\t\tLogger.log(\"--- INPUT SHIELD DISABLED after choice made (New State: %s) ---\" % input_shield_collision_shape.disabled)\n\telse:\n\t\tLogger.log(\"ERROR: Cannot disable input shield, reference is null!\")\n\t\nfunc _on_end_turn_pressed():\n\t# --- MODIFICATION ---\n\t# According to the design principles, `interaction_controller.process_input`\n\t# is no longer managed by this function for the Deployment Screen flow.\n\t# It should remain true to keep 3D buttons active.\n\t# If specific temporary disabling were needed for other reasons (e.g., animations),\n\t# it would be handled locally or by the shield mechanism.\n\t\n\t# --- MODIFICATION ---\n\t# Disable the input shield's collision shape when the turn ends\n\tif input_shield_collision_shape:\n\t\tinput_shield_collision_shape.disabled = true\n\t\t# --- DEBUG ---\n\t\tLogger.log(\"--- INPUT SHIELD DISABLED at end of turn (New State: %s) ---\" % input_shield_collision_shape.disabled)\n\telse:\n\t\tLogger.log(\"ERROR: Cannot disable input shield, reference is null!\")\n\t\t\n\tif GameManager.is_player_action_valid():\n\t\tGameManager.process_player_attack()\n\telse:\n\t\tLogger.log(\"No action selected. Ending turn.\")\n\t\tGameManager.pass_turn()\n\n\nfunc _on_input_shield_clicked(_camera: Camera3D, event: InputEvent, _click_position: Vector3, _click_normal: Vector3, _shape_idx: int):\n\t# --- DEBUG ---\n\tLogger.log(\"--- _on_input_shield_clicked SIGNAL RECEIVED ---\")\n\t# Check if the event is a mouse button press\n\tif event is InputEventMouseButton and event.pressed and event.button_index == MOUSE_BUTTON_LEFT:\n\t\t# --- DEBUG ---\n\t\tLogger.log(\"--- _on_input_shield_clicked MOUSE EVENT PROCESSED ---\")\n\t\tLogger.log(\"--- Input Shield Clicked ---\")\n\n\t\t# Hide the deployment screen\n\t\tif deployment_screen:\n\t\t\tdeployment_screen.hide_screen()\n\t\t\tLogger.log(\"--- DEPLOYMENT SCREEN HIDDEN ---\")\n\t\telse:\n\t\t\tLogger.log(\"ERROR: Deployment screen reference is null in _on_input_shield_clicked!\")\n\n\t\t# Disable the input shield's collision shape\n\t\tif input_shield_collision_shape:\n\t\t\tinput_shield_collision_shape.disabled = true\n\t\t\t# --- DEBUG ---\n\t\t\tLogger.log(\"--- INPUT SHIELD DISABLED after click (New State: %s) ---\" % input_shield_collision_shape.disabled)\n\t\telse:\n\t\t\tLogger.log(\"ERROR: Cannot disable input shield in _on_input_shield_clicked, reference is null!\")",
			"exports": [],
			"functions": [
				"func _ready():",
				"func _process(_delta):",
				"func _unhandled_input(event: InputEvent):",
				"func connect_3d_buttons():",
				"func _on_3d_button_pressed(mesh_name: String):",
				"func show_cards_on_deployment_screen(card_type: int):",
				"func _on_deployment_choice_made(choice_data):",
				"func _on_end_turn_pressed():",
				"func _on_input_shield_clicked(_camera: Camera3D, event: InputEvent, _click_position: Vector3, _click_normal: Vector3, _shape_idx: int):"
			],
			"language": "gd",
			"path": "res:///main_controller.gd",
			"signals": []
		}
	]
}